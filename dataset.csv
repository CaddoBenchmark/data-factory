"id"$"line"$"contents"$"class_name"$"class_value"$"path"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:1"$1$"package org.sahsu.rif.dataloader.datastorage.ms;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:2"$2$"import java.io.File;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:3"$3$"import java.io.FileReader;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:4"$4$"import java.sql.Connection;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:5"$5$"import java.sql.DriverManager;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:6"$6$"import java.sql.PreparedStatement;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:7"$7$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:8"$8$"import java.util.PropertyResourceBundle;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:9"$9$"import org.sahsu.rif.dataloader.concepts.DataLoaderToolSettings;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:10"$10$"import org.sahsu.rif.dataloader.concepts.DatabaseConnectionsConfiguration;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:11"$11$"import org.sahsu.rif.dataloader.concepts.WorkflowState;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:12"$12$"import org.sahsu.rif.dataloader.system.RIFDataLoaderToolError;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:13"$13$"import org.sahsu.rif.dataloader.system.RIFDataLoaderToolMessages;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:14"$14$"import org.sahsu.rif.generic.datastorage.SQLGeneralQueryFormatter;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:15"$15$"import org.sahsu.rif.generic.datastorage.SQLQueryUtility;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:16"$16$"import org.sahsu.rif.generic.datastorage.pg.PGSQLCreateTableQueryFormatter;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:17"$17$"import org.sahsu.rif.generic.datastorage.pg.PGSQLDeleteTableQueryFormatter;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:18"$18$"import org.sahsu.rif.generic.system.RIFGenericLibraryError;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:19"$19$"import org.sahsu.rif.generic.system.RIFServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:20"$20$"/**"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:21"$21$"* Because the data loader tool can modify a lot of important tables in the RIF, we"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:22"$22$"* use a fake rif database for testing purposes.  This class creates some of the"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:23"$23$"* basic tables that appear in the production RIF database."$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:24"$24$"*"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:25"$25$"* <hr>"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:26"$26$"* Copyright 2015 Imperial College London, developed by the Small Area"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:27"$27$"* Health Statistics Unit. "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:28"$28$"*"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:29"$29$"* <pre> "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:30"$30$"* This file is part of the Rapid Inquiry Facility (RIF) project."$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:31"$31$"* RIF is free software: you can redistribute it and/or modify"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:32"$32$"* it under the terms of the GNU Lesser General Public License as published by"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:33"$33$"* the Free Software Foundation, either version 3 of the License, or"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:34"$34$"* (at your option) any later version."$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:35"$35$"* RIF is distributed in the hope that it will be useful,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:36"$36$"* but WITHOUT ANY WARRANTY; without even the implied warranty of"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:37"$37$"* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:38"$38$"* GNU Lesser General Public License for more details."$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:39"$39$"*"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:40"$40$"* You should have received a copy of the GNU Lesser General Public License"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:41"$41$"* along with RIF.  If not, see <http://www.gnu.org/licenses/>."$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:42"$42$"* </pre>"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:43"$43$"*"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:44"$44$"* <hr>"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:45"$45$"* Kevin Garwood"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:46"$46$"* @author kgarwood"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:47"$47$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:48"$48$"/*"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:49"$49$"* Code Road Map:"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:50"$50$"* --------------"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:51"$51$"* Code is organised into the following sections.  Wherever possible, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:52"$52$"* methods are classified based on an order of precedence described in "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:53"$53$"* parentheses (..).  For example, if you're trying to find a method "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:54"$54$"* 'getName(...)' that is both an interface method and an accessor "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:55"$55$"* method, the order tells you it should appear under interface."$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:56"$56$"* "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:57"$57$"* Order of "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:58"$58$"* Precedence     Section"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:59"$59$"* ==========     ======"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:60"$60$"* (1)            Section Constants"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:61"$61$"* (2)            Section Properties"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:62"$62$"* (3)            Section Construction"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:63"$63$"* (7)            Section Accessors and Mutators"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:64"$64$"* (6)            Section Errors and Validation"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:65"$65$"* (5)            Section Interfaces"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:66"$66$"* (4)            Section Override"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:67"$67$"*"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:68"$68$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:69"$69$"public class MSSQLSampleRIFDatabaseCreationManager {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:70"$70$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:71"$71$"// Section Constants"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:72"$72$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:73"$73$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:74"$74$"// Section Properties"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:75"$75$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:76"$76$"private DataLoaderToolSettings dataLoaderToolSettings;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:77"$77$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:78"$78$"// Section Construction"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:79"$79$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:80"$80$"public MSSQLSampleRIFDatabaseCreationManager("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:81"$81$"final DataLoaderToolSettings dataLoaderToolSettings) {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:82"$82$"this.dataLoaderToolSettings = dataLoaderToolSettings;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:83"$83$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:84"$84$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:85"$85$"// Section Accessors and Mutators"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:86"$86$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:87"$87$"public void setup()"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:88"$88$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:89"$89$"PreparedStatement statement = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:90"$90$"Connection connection = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:91"$91$"try {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:92"$92$"File userLoginDetailsFile = new File(""C://rif_scripts//db//RIFDatabaseProperties.txt"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:93"$93$"FileReader fileReader = new FileReader(userLoginDetailsFile);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:94"$94$"PropertyResourceBundle userLoginResourceBundle"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:95"$95$"= new PropertyResourceBundle(fileReader);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:96"$96$"String userID = (String) userLoginResourceBundle.getObject(""userID"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:97"$97$"String password = (String) userLoginResourceBundle.getObject(""password"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:98"$98$"DatabaseConnectionsConfiguration dbParameters"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:99"$99$"= dataLoaderToolSettings.getDatabaseConnectionParameters();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:100"$100$"StringBuilder urlText = new StringBuilder();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:101"$101$"urlText.append(dbParameters.getDatabaseDriverPrefix());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:102"$102$"urlText.append("":"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:103"$103$"urlText.append(""//"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:104"$104$"urlText.append(dbParameters.getHostName());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:105"$105$"urlText.append("":"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:106"$106$"urlText.append(dbParameters.getPortName());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:107"$107$"urlText.append(""/"");			"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:108"$108$"String databaseURL = urlText.toString();	"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:109"$109$"/*"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:110"$110$"* #POSSIBLE_PORTING_ISSUE"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:111"$111$"* drop-if-exists may have to be implemented separately for"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:112"$112$"* each database type"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:113"$113$"*/				"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:114"$114$"connection"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:115"$115$"= DriverManager.getConnection(databaseURL, userID, password);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:116"$116$"SQLGeneralQueryFormatter queryFormatter"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:117"$117$"= new SQLGeneralQueryFormatter();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:118"$118$"queryFormatter.addQueryPhrase(""DROP DATABASE IF EXISTS "");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:119"$119$"queryFormatter.addQueryPhrase(dbParameters.getDatabaseName());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:120"$120$"queryFormatter.addQueryPhrase("";"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:121"$121$"queryFormatter.finishLine();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:122"$122$"queryFormatter.addQueryPhrase(""CREATE DATABASE "");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:123"$123$"queryFormatter.addQueryPhrase(dbParameters.getDatabaseName());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:124"$124$"queryFormatter.addQueryPhrase("";"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:125"$125$"queryFormatter.finishLine();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:126"$126$"statement"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:127"$127$"= connection.prepareStatement(queryFormatter.generateQuery());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:128"$128$"statement.executeUpdate();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:129"$129$"createDatabaseTables(userID, password);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:130"$130$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:131"$131$"catch(Exception exception) {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:132"$132$"exception.printStackTrace(System.out);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:133"$133$"String errorMessage	"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:134"$134$"= RIFDataLoaderToolMessages.getMessage("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:135"$135$"""sampleRIFDatabaseCreationManager.error.unableToInitialiseDatabase"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:136"$136$"RIFServiceException rifServiceException"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:137"$137$"= new RIFServiceException("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:138"$138$"RIFGenericLibraryError.DATABASE_QUERY_FAILED, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:139"$139$"errorMessage);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:140"$140$"throw rifServiceException;			"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:141"$141$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:142"$142$"finally {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:143"$143$"SQLQueryUtility.close(statement);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:144"$144$"SQLQueryUtility.close(connection);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:145"$145$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:146"$146$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:147"$147$"public void createDatabaseTables("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:148"$148$"final String userID,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:149"$149$"final String password) "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:150"$150$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:151"$151$"PreparedStatement statement = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:152"$152$"Connection connection = null;		"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:153"$153$"try {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:154"$154$"StringBuilder urlText = new StringBuilder();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:155"$155$"DatabaseConnectionsConfiguration dbParameters"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:156"$156$"= dataLoaderToolSettings.getDatabaseConnectionParameters();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:157"$157$"urlText.append(dbParameters.getDatabaseDriverPrefix());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:158"$158$"urlText.append("":"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:159"$159$"urlText.append(""//"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:160"$160$"urlText.append(dbParameters.getHostName());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:161"$161$"urlText.append("":"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:162"$162$"urlText.append(dbParameters.getPortName());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:163"$163$"urlText.append(""/"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:164"$164$"urlText.append(dbParameters.getDatabaseName());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:165"$165$"String databaseURL = urlText.toString();			"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:166"$166$"connection"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:167"$167$"= DriverManager.getConnection(databaseURL, userID, password);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:168"$168$"createCovariatesTable(connection);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:169"$169$"createDataSetConfigurationsTable(connection);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:170"$170$"createAuditChangesTable(connection);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:171"$171$"createAuditFailedValidationTable(connection);		"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:172"$172$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:173"$173$"catch(Exception exception) {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:174"$174$"exception.printStackTrace(System.out);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:175"$175$"String errorMessage	"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:176"$176$"= RIFDataLoaderToolMessages.getMessage("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:177"$177$"""sampleRIFDatabaseCreationManager.error.unableToInitialiseDatabase"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:178"$178$"RIFServiceException rifServiceException"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:179"$179$"= new RIFServiceException("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:180"$180$"RIFGenericLibraryError.DATABASE_QUERY_FAILED, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:181"$181$"errorMessage);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:182"$182$"throw rifServiceException;			"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:183"$183$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:184"$184$"finally {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:185"$185$"SQLQueryUtility.close(statement);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:186"$186$"SQLQueryUtility.close(connection);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:187"$187$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:188"$188$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:189"$189$"private void createCovariatesTable("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:190"$190$"final Connection connection) "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:191"$191$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:192"$192$"PreparedStatement statement = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:193"$193$"try {			"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:194"$194$"//create covariates table"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:195"$195$"PGSQLCreateTableQueryFormatter createCovariateTableQueryFormatter"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:196"$196$"= new PGSQLCreateTableQueryFormatter();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:197"$197$"createCovariateTableQueryFormatter.setTableName(""rif40_covariates"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:198"$198$"createCovariateTableQueryFormatter.addTextFieldDeclaration("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:199"$199$"""geography"", "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:200"$200$"50, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:201"$201$"false);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:202"$202$"createCovariateTableQueryFormatter.addTextFieldDeclaration("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:203"$203$"""geolevel_name"", "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:204"$204$"30, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:205"$205$"false);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:206"$206$"createCovariateTableQueryFormatter.addTextFieldDeclaration("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:207"$207$"""covariate_name"", "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:208"$208$"30, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:209"$209$"false);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:210"$210$"createCovariateTableQueryFormatter.addDoubleFieldDeclaration("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:211"$211$"""min"", "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:212"$212$"false);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:213"$213$"createCovariateTableQueryFormatter.addDoubleFieldDeclaration("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:214"$214$"""max"", "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:215"$215$"false);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:216"$216$"createCovariateTableQueryFormatter.addDoubleFieldDeclaration("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:217"$217$"""type"", "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:218"$218$"false);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:219"$219$"statement"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:220"$220$"= SQLQueryUtility.createPreparedStatement("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:221"$221$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:222"$222$"createCovariateTableQueryFormatter);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:223"$223$"statement.executeUpdate();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:224"$224$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:225"$225$"catch(SQLException sqlException) {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:226"$226$"sqlException.printStackTrace(System.out);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:227"$227$"String errorMessage"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:228"$228$"= RIFDataLoaderToolMessages.getMessage("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:229"$229$"""sampleRIFDatabaseCreationManager.error.unableToInitialiseDB"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:230"$230$"RIFServiceException rifServiceException"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:231"$231$"= new RIFServiceException("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:232"$232$"RIFDataLoaderToolError.UNABLE_TO_CREATE_FAKE_RIF_DB,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:233"$233$"errorMessage);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:234"$234$"throw rifServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:235"$235$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:236"$236$"finally {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:237"$237$"SQLQueryUtility.close(statement);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:238"$238$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:239"$239$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:240"$240$"private void createDataSetConfigurationsTable("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:241"$241$"final Connection connection) "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:242"$242$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:243"$243$"PreparedStatement createIDSequenceStatement = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:244"$244$"PreparedStatement createDataSetConfigurationTableStatement = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:245"$245$"PreparedStatement sequenceOwnershipStatement = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:246"$246$"try {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:247"$247$"/*"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:248"$248$"* #POSSIBLE_PORTING_ISSUE"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:249"$249$"* CREATE SEQUENCE is something in PostgreSQL that will likely"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:250"$250$"* require porting in SQL Server"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:251"$251$"*/							"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:252"$252$"//Create a sequence that will auto-increment"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:253"$253$"SQLGeneralQueryFormatter createIDSequenceQueryFormatter = new SQLGeneralQueryFormatter();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:254"$254$"createIDSequenceQueryFormatter.addQueryPhrase("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:255"$255$"0, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:256"$256$"""CREATE SEQUENCE data_set_sequence;"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:257"$257$"createIDSequenceStatement"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:258"$258$"= SQLQueryUtility.createPreparedStatement("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:259"$259$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:260"$260$"createIDSequenceQueryFormatter);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:261"$261$"createIDSequenceStatement.executeUpdate();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:262"$262$"//Make the 'id' field get its value from the sequence"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:263"$263$"PGSQLCreateTableQueryFormatter createDataSetConfigurationsTableFormatter "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:264"$264$"= new PGSQLCreateTableQueryFormatter();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:265"$265$"createDataSetConfigurationsTableFormatter.setTableName(""data_set_configurations"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:266"$266$"createDataSetConfigurationsTableFormatter.addSequenceField(""id"", ""data_set_sequence"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:267"$267$"createDataSetConfigurationsTableFormatter.addTextFieldDeclaration(""core_data_set_name"", 50, false);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:268"$268$"createDataSetConfigurationsTableFormatter.addTextFieldDeclaration(""version"", 20, false);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:269"$269$"createDataSetConfigurationsTableFormatter.addCreationTimestampField(""creation_date"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:270"$270$"String startCode = WorkflowState.START.getCode();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:271"$271$"createDataSetConfigurationsTableFormatter.addTextFieldDeclaration("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:272"$272$"""current_workflow_state"", "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:273"$273$"20, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:274"$274$"startCode,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:275"$275$"false);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:276"$276$"createDataSetConfigurationTableStatement"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:277"$277$"= SQLQueryUtility.createPreparedStatement("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:278"$278$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:279"$279$"createDataSetConfigurationsTableFormatter);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:280"$280$"createDataSetConfigurationTableStatement.executeUpdate();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:281"$281$"/*"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:282"$282$"* #POSSIBLE_PORTING_ISSUE"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:283"$283$"* CREATE SEQUENCE is something in PostgreSQL that will likely"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:284"$284$"* require porting in SQL Server"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:285"$285$"*/							"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:286"$286$"//Ensure that the id field owns the sequence so that no other table could"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:287"$287$"//increment it"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:288"$288$"SQLGeneralQueryFormatter sequenceOwnershipQueryFormatter"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:289"$289$"= new SQLGeneralQueryFormatter();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:290"$290$"sequenceOwnershipQueryFormatter.addQueryPhrase(0, ""ALTER SEQUENCE data_set_sequence "");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:291"$291$"sequenceOwnershipQueryFormatter.addQueryPhrase(""OWNED BY "");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:292"$292$"sequenceOwnershipQueryFormatter.addQueryPhrase(""data_set_configurations.id;"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:293"$293$"sequenceOwnershipStatement"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:294"$294$"= SQLQueryUtility.createPreparedStatement("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:295"$295$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:296"$296$"sequenceOwnershipQueryFormatter);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:297"$297$"sequenceOwnershipStatement.executeUpdate();			"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:298"$298$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:299"$299$"catch(SQLException sqlException) {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:300"$300$"sqlException.printStackTrace(System.out);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:301"$301$"String errorMessage"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:302"$302$"= RIFDataLoaderToolMessages.getMessage("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:303"$303$"""sampleRIFDatabaseCreationManager.error.unableToInitialiseDB"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:304"$304$"RIFServiceException rifServiceException"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:305"$305$"= new RIFServiceException("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:306"$306$"RIFDataLoaderToolError.UNABLE_TO_CREATE_FAKE_RIF_DB, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:307"$307$"errorMessage);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:308"$308$"throw rifServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:309"$309$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:310"$310$"finally {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:311"$311$"SQLQueryUtility.close(createIDSequenceStatement);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:312"$312$"SQLQueryUtility.close(createDataSetConfigurationTableStatement);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:313"$313$"SQLQueryUtility.close(sequenceOwnershipStatement);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:314"$314$"}	"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:315"$315$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:316"$316$"public void createAuditChangesTable("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:317"$317$"final Connection connection) "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:318"$318$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:319"$319$"PreparedStatement statement = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:320"$320$"try {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:321"$321$"PGSQLCreateTableQueryFormatter queryFormatter"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:322"$322$"= new PGSQLCreateTableQueryFormatter();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:323"$323$"queryFormatter.setTableName(""rif_change_log"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:324"$324$"queryFormatter.addIntegerFieldDeclaration("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:325"$325$"""data_set_id"", "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:326"$326$"false);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:327"$327$"queryFormatter.addIntegerFieldDeclaration("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:328"$328$"""row_number"", "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:329"$329$"false);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:330"$330$"queryFormatter.addTextFieldDeclaration("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:331"$331$"""field_name"", "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:332"$332$"30, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:333"$333$"false);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:334"$334$"queryFormatter.addTextFieldDeclaration("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:335"$335$"""old_value"", "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:336"$336$"30, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:337"$337$"true);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:338"$338$"queryFormatter.addTextFieldDeclaration("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:339"$339$"""new_value"", "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:340"$340$"30, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:341"$341$"true);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:342"$342$"queryFormatter.addCreationTimestampField(""time_stamp"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:343"$343$"statement"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:344"$344$"= SQLQueryUtility.createPreparedStatement("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:345"$345$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:346"$346$"queryFormatter);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:347"$347$"statement.executeUpdate();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:348"$348$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:349"$349$"catch(SQLException sqlException) {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:350"$350$"String errorMessage"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:351"$351$"= RIFDataLoaderToolMessages.getMessage("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:352"$352$"""sampleRIFDatabaseCreationManager.error.unableToInitialiseDB"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:353"$353$"RIFServiceException rifServiceException"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:354"$354$"= new RIFServiceException("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:355"$355$"RIFDataLoaderToolError.DATABASE_QUERY_FAILED, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:356"$356$"errorMessage);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:357"$357$"throw rifServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:358"$358$"}	"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:359"$359$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:360"$360$"public void createAuditFailedValidationTable("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:361"$361$"final Connection connection) "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:362"$362$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:363"$363$"PreparedStatement statement = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:364"$364$"try {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:365"$365$"PGSQLCreateTableQueryFormatter queryFormatter"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:366"$366$"= new PGSQLCreateTableQueryFormatter();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:367"$367$"queryFormatter.setTableName(""rif_failed_val_log"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:368"$368$"queryFormatter.addIntegerFieldDeclaration("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:369"$369$"""data_set_id"", "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:370"$370$"false);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:371"$371$"queryFormatter.addIntegerFieldDeclaration("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:372"$372$"""row_number"", "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:373"$373$"false);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:374"$374$"queryFormatter.addTextFieldDeclaration("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:375"$375$"""field_name"", "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:376"$376$"30, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:377"$377$"false);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:378"$378$"queryFormatter.addTextFieldDeclaration("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:379"$379$"""invalid_value"", "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:380"$380$"30, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:381"$381$"true);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:382"$382$"queryFormatter.addCreationTimestampField(""time_stamp"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:383"$383$"statement"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:384"$384$"= SQLQueryUtility.createPreparedStatement("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:385"$385$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:386"$386$"queryFormatter);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:387"$387$"statement.executeUpdate();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:388"$388$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:389"$389$"catch(SQLException sqlException) {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:390"$390$"String errorMessage"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:391"$391$"= RIFDataLoaderToolMessages.getMessage("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:392"$392$"""sampleRIFDatabaseCreationManager.error.unableToInitialiseDB"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:393"$393$"RIFServiceException rifServiceException"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:394"$394$"= new RIFServiceException("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:395"$395$"RIFDataLoaderToolError.DATABASE_QUERY_FAILED, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:396"$396$"errorMessage);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:397"$397$"throw rifServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:398"$398$"}	"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:399"$399$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:400"$400$"public void deleteTables("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:401"$401$"final Connection connection) "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:402"$402$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:403"$403$"PreparedStatement deleteCovariateTableStatement = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:404"$404$"try {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:405"$405$"PGSQLDeleteTableQueryFormatter deleteCovariateTableQueryFormatter"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:406"$406$"= new PGSQLDeleteTableQueryFormatter();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:407"$407$"deleteCovariateTableQueryFormatter.setTableToDelete(""rif40_covariates"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:408"$408$"deleteCovariateTableStatement"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:409"$409$"= SQLQueryUtility.createPreparedStatement("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:410"$410$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:411"$411$"deleteCovariateTableQueryFormatter);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:412"$412$"deleteCovariateTableStatement.executeUpdate();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:413"$413$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:414"$414$"catch(SQLException sqlException) {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:415"$415$"sqlException.printStackTrace(System.out);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:416"$416$"String errorMessage"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:417"$417$"= RIFDataLoaderToolMessages.getMessage("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:418"$418$"""sampleRIFDatabaseCreationManager.error.unableToInitialiseDB"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:419"$419$"RIFServiceException rifServiceException"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:420"$420$"= new RIFServiceException("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:421"$421$"RIFDataLoaderToolError.UNABLE_TO_CREATE_FAKE_RIF_DB, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:422"$422$"errorMessage);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:423"$423$"throw rifServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:424"$424$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:425"$425$"finally {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:426"$426$"SQLQueryUtility.close(deleteCovariateTableStatement);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:427"$427$"}	"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:428"$428$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:429"$429$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:430"$430$"// Section Errors and Validation"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:431"$431$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:432"$432$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:433"$433$"// Section Interfaces"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:434"$434$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:435"$435$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:436"$436$"// Section Override"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:437"$437$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"secured\MSSQLSampleRIFDatabaseCreationManager.java:438"$438$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLSampleRIFDatabaseCreationManager.java"
"flawed\SoulissDBHelper.java:1"$1$"package it.angelic.soulissclient.model.db;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:2"$2$"import android.content.ContentValues;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:3"$3$"import android.content.Context;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:4"$4$"import android.database.Cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:5"$5$"import android.database.SQLException;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:6"$6$"import android.database.sqlite.SQLiteDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:7"$7$"import android.util.Log;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:8"$8$"import android.util.SparseArray;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:9"$9$"import java.io.File;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:10"$10$"import java.sql.SQLDataException;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:11"$11$"import java.text.ParseException;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:12"$12$"import java.util.ArrayList;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:13"$13$"import java.util.Calendar;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:14"$14$"import java.util.Date;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:15"$15$"import java.util.HashMap;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:16"$16$"import java.util.HashSet;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:17"$17$"import java.util.LinkedHashMap;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:18"$18$"import java.util.LinkedList;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:19"$19$"import java.util.List;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:20"$20$"import java.util.NoSuchElementException;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:21"$21$"import im.dacer.androidcharts.ClockPieHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:22"$22$"import it.angelic.soulissclient.BuildConfig;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:23"$23$"import it.angelic.soulissclient.Constants;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:24"$24$"import it.angelic.soulissclient.R;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:25"$25$"import it.angelic.soulissclient.SoulissApp;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:26"$26$"import it.angelic.soulissclient.fragments.TimeRangeEnum;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:27"$27$"import it.angelic.soulissclient.helpers.SoulissPreferenceHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:28"$28$"import it.angelic.soulissclient.model.ISoulissTypical;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:29"$29$"import it.angelic.soulissclient.model.SoulissCommand;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:30"$30$"import it.angelic.soulissclient.model.SoulissNode;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:31"$31$"import it.angelic.soulissclient.model.SoulissScene;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:32"$32$"import it.angelic.soulissclient.model.SoulissTag;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:33"$33$"import it.angelic.soulissclient.model.SoulissTrigger;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:34"$34$"import it.angelic.soulissclient.model.SoulissTypical;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:35"$35$"import it.angelic.soulissclient.model.SoulissTypicalFactory;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:36"$36$"import it.angelic.soulissclient.model.typicals.SoulissTypical41AntiTheft;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:37"$37$"import it.angelic.soulissclient.model.typicals.SoulissTypical42AntiTheftPeer;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:38"$38$"import it.angelic.soulissclient.model.typicals.SoulissTypical43AntiTheftLocalPeer;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:39"$39$"import it.angelic.soulissclient.util.FontAwesomeUtil;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:40"$40$"import it.angelic.soulissclient.util.LauncherElementEnum;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:41"$41$"import static it.angelic.soulissclient.Constants.MASSIVE_NODE_ID;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:42"$42$"import static it.angelic.soulissclient.Constants.TAG;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:43"$43$"import static junit.framework.Assert.assertEquals;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:44"$44$"import static junit.framework.Assert.assertNotNull;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:45"$45$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:46"$46$"* Classe helper per l'esecuzione di interrogazioni al DB, Inserimenti eccetera"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:47"$47$"*"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:48"$48$"* @author Ale"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:49"$49$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:50"$50$"public class SoulissDBHelper {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:51"$51$"// Database fields"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:52"$52$"protected static SQLiteDatabase database;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:53"$53$"protected static SoulissDBOpenHelper soulissDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:54"$54$"protected final Context context;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:55"$55$"protected SoulissPreferenceHelper opts;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:56"$56$"public SoulissDBHelper(Context context) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:57"$57$"soulissDatabase = new SoulissDBOpenHelper(context);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:58"$58$"opts = SoulissApp.getOpzioni();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:59"$59$"this.context = context;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:60"$60$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:61"$61$"public static synchronized SQLiteDatabase getDatabase() {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:62"$62$"return database;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:63"$63$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:64"$64$"public static synchronized void open() throws SQLException {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:65"$65$"if (database == null || !database.isOpen())"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:66"$66$"database = soulissDatabase.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:67"$67$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:68"$68$"public void clean() {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:69"$69$"if (database != null && database.isOpen()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:70"$70$"database.execSQL(""VACUUM"");"$"count"$1$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:71"$71$"} else"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:72"$72$"Log.w(TAG, ""DB closed, clean() failed"");"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:73"$73$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:74"$74$"public void close() {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:75"$75$"soulissDatabase.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:76"$76$"if (database != null && database.isOpen())"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:77"$77$"database.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:78"$78$"else"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:79"$79$"Log.w(TAG, ""DB already closed"");"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:80"$80$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:81"$81$"public int countFavourites() {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:82"$82$"if (!database.isOpen())"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:83"$83$"open();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:84"$84$"Cursor mCount = database.rawQuery(""select count(1) from "" + SoulissDBOpenHelper.TABLE_TAGS_TYPICALS + "" where """$"count"$1$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:85"$85$"+ SoulissDBOpenHelper.COLUMN_TAG_TYP_TAG_ID + "" =  "" + SoulissDBOpenHelper.FAVOURITES_TAG_ID, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:86"$86$"mCount.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:87"$87$"int count = mCount.getInt(0);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:88"$88$"mCount.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:89"$89$"return count;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:90"$90$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:91"$91$"public int countNodes() {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:92"$92$"Cursor mCount = database.rawQuery(""select count(1) from "" + SoulissDBOpenHelper.TABLE_NODES, null);"$"count"$1$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:93"$93$"mCount.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:94"$94$"int count = mCount.getInt(0);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:95"$95$"mCount.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:96"$96$"return count;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:97"$97$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:98"$98$"public int countPrograms() {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:99"$99$"if (!database.isOpen())"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:100"$100$"open();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:101"$101$"Cursor mCount = database.rawQuery(""select count(*) from "" + SoulissDBOpenHelper.TABLE_COMMANDS + "" WHERE ("""$"count"$1$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:102"$102$"+ SoulissDBOpenHelper.COLUMN_COMMAND_EXECTIME + "" is null OR "" + SoulissDBOpenHelper.COLUMN_COMMAND_TYPE + "" ="""$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:103"$103$"+ Constants.COMMAND_COMEBACK_CODE + "" OR "" + SoulissDBOpenHelper.COLUMN_COMMAND_TYPE + "" ="""$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:104"$104$"+ Constants.COMMAND_GOAWAY_CODE + "" OR "" + SoulissDBOpenHelper.COLUMN_COMMAND_TYPE + "" ="""$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:105"$105$"+ Constants.COMMAND_TRIGGERED + "") AND "" + SoulissDBOpenHelper.COLUMN_COMMAND_SCENEID + "" IS NULL"", null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:106"$106$"mCount.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:107"$107$"int count = mCount.getInt(0);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:108"$108$"mCount.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:109"$109$"return count;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:110"$110$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:111"$111$"public int countScenes() {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:112"$112$"if (!database.isOpen())"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:113"$113$"open();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:114"$114$"Cursor mCount = database.rawQuery(""select count(*) from "" + SoulissDBOpenHelper.TABLE_SCENES, null);"$"count"$1$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:115"$115$"mCount.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:116"$116$"int count = mCount.getInt(0);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:117"$117$"mCount.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:118"$118$"return count;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:119"$119$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:120"$120$"public int countTags() {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:121"$121$"if (!database.isOpen())"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:122"$122$"open();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:123"$123$"Cursor mCount = database.rawQuery(""select count(1) from "" + SoulissDBOpenHelper.TABLE_TAGS, null);"$"count"$1$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:124"$124$"mCount.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:125"$125$"int count = mCount.getInt(0);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:126"$126$"mCount.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:127"$127$"return count;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:128"$128$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:129"$129$"public int countTriggers() {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:130"$130$"if (!database.isOpen())"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:131"$131$"open();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:132"$132$"Cursor mCount = database.rawQuery(""select count(*) from "" + SoulissDBOpenHelper.TABLE_TRIGGERS, null);"$"count"$1$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:133"$133$"mCount.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:134"$134$"int count = mCount.getInt(0);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:135"$135$"mCount.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:136"$136$"return count;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:137"$137$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:138"$138$"public int countTypicalTags() {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:139"$139$"if (!database.isOpen())"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:140"$140$"open();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:141"$141$"Cursor mCount = database.rawQuery(""select count(1) from "" + SoulissDBOpenHelper.TABLE_TAGS_TYPICALS, null);"$"count"$1$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:142"$142$"mCount.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:143"$143$"int count = mCount.getInt(0);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:144"$144$"mCount.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:145"$145$"return count;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:146"$146$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:147"$147$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:148"$148$"* Conta i non vuoti diversi da Souliss_T_related"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:149"$149$"*"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:150"$150$"* @return"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:151"$151$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:152"$152$"public int countTypicals() {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:153"$153$"Cursor mCount = database.rawQuery(""select count(1) from "" + SoulissDBOpenHelper.TABLE_TYPICALS + "" where """$"count"$1$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:154"$154$"+ SoulissDBOpenHelper.COLUMN_TYPICAL + "" <> """$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:155"$155$"+ Constants.Typicals.Souliss_T_related"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:156"$156$"+ "" AND "" + SoulissDBOpenHelper.COLUMN_TYPICAL + "" <> """$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:157"$157$"+ Constants.Typicals.Souliss_T_empty, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:158"$158$"mCount.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:159"$159$"int count = mCount.getInt(0);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:160"$160$"mCount.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:161"$161$"return count;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:162"$162$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:163"$163$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:164"$164$"* campi singoli altrimenti side effects"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:165"$165$"*"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:166"$166$"* @param nodeIN"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:167"$167$"* @return"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:168"$168$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:169"$169$"public int createOrUpdateNode(SoulissNode nodeIN) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:170"$170$"ContentValues values = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:171"$171$"// wrap values from object"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:172"$172$"values.put(SoulissDBOpenHelper.COLUMN_NODE_NAME, nodeIN.getName());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:173"$173$"values.put(SoulissDBOpenHelper.COLUMN_NODE_LASTMOD, Calendar.getInstance().getTime().getTime());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:174"$174$"values.put(SoulissDBOpenHelper.COLUMN_NODE_ID, nodeIN.getNodeId());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:175"$175$"values.put(SoulissDBOpenHelper.COLUMN_NODE_HEALTH, nodeIN.getHealth());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:176"$176$"values.put(SoulissDBOpenHelper.COLUMN_NODE_ICON, nodeIN.getIconResourceId());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:177"$177$"int upd = database.update(SoulissDBOpenHelper.TABLE_NODES, values, SoulissDBOpenHelper.COLUMN_NODE_ID + "" = "" + nodeIN.getNodeId(),"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:178"$178$"null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:179"$179$"if (upd == 0) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:180"$180$"long insertId = database.insert(SoulissDBOpenHelper.TABLE_NODES, null, values);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:181"$181$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:182"$182$"return upd;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:183"$183$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:184"$184$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:185"$185$"* Crea un nuovo scenario vuoto"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:186"$186$"*"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:187"$187$"* @param nodeIN"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:188"$188$"* @return"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:189"$189$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:190"$190$"public int createOrUpdateScene(SoulissScene nodeIN) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:191"$191$"ContentValues values = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:192"$192$"if (nodeIN != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:193"$193$"// wrap values from object"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:194"$194$"values.put(SoulissDBOpenHelper.COLUMN_SCENE_ID, nodeIN.getId());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:195"$195$"values.put(SoulissDBOpenHelper.COLUMN_SCENE_ICON, nodeIN.getIconResourceId());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:196"$196$"values.put(SoulissDBOpenHelper.COLUMN_SCENE_NAME, nodeIN.toString());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:197"$197$"return database.update(SoulissDBOpenHelper.TABLE_SCENES, values, SoulissDBOpenHelper.COLUMN_SCENE_ID + "" = "" + nodeIN.getId(),"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:198"$198$"null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:199"$199$"} else {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:200"$200$"values.put(SoulissDBOpenHelper.COLUMN_SCENE_ICON, FontAwesomeUtil.getCodeIndexByFontName(context, ""fa-moon-o""));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:201"$201$"// Inserisco e risetto il nome"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:202"$202$"int ret = (int) database.insert(SoulissDBOpenHelper.TABLE_SCENES, null, values);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:203"$203$"values.put(SoulissDBOpenHelper.COLUMN_SCENE_NAME,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:204"$204$"context.getResources().getString(R.string.scene) + "" "" + ret);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:205"$205$"database.update(SoulissDBOpenHelper.TABLE_SCENES, values, SoulissDBOpenHelper.COLUMN_SCENE_ID + "" = "" + ret, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:206"$206$"return ret;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:207"$207$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:208"$208$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:209"$209$"/*"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:210"$210$"* public void deleteTypical(int nodeid, SoulissTypical comment) { // long"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:211"$211$"* id = comment.getNodeId(); // System.out.println(""Comment deleted with id: "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:212"$212$"* id); database.delete(SoulissDB.TABLE_TYPICALS, SoulissDB.COLUMN_ID +"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:213"$213$"* "" = "" + nodeid, null); }"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:214"$214$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:215"$215$"public int deleteCommand(SoulissCommand toRename) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:216"$216$"return database.delete(SoulissDBOpenHelper.TABLE_COMMANDS, SoulissDBOpenHelper.COLUMN_COMMAND_ID + "" = """$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:217"$217$"+ toRename.getCommandId(), null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:218"$218$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:219"$219$"public int deleteScene(SoulissScene toBeDeleted) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:220"$220$"database.delete(SoulissDBOpenHelper.TABLE_COMMANDS, SoulissDBOpenHelper.COLUMN_COMMAND_SCENEID + "" = "" + toBeDeleted.getId(), null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:221"$221$"//CASCADE Launcher"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:222"$222$"database.delete(SoulissDBOpenHelper.TABLE_LAUNCHER,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:223"$223$"SoulissDBOpenHelper.COLUMN_LAUNCHER_TYPE + "" = "" + LauncherElementEnum.SCENE.ordinal()"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:224"$224$"+ "" AND "" + SoulissDBOpenHelper.COLUMN_LAUNCHER_SCENE_ID + "" = "" + toBeDeleted.getId(), null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:225"$225$"return database.delete(SoulissDBOpenHelper.TABLE_SCENES, SoulissDBOpenHelper.COLUMN_SCENE_ID + "" = "" + toBeDeleted.getId(), null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:226"$226$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:227"$227$"public int deleteTag(SoulissTag toBeDeleted) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:228"$228$"//CASCADE sulle associazioni"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:229"$229$"database.delete(SoulissDBOpenHelper.TABLE_TAGS_TYPICALS, SoulissDBOpenHelper.COLUMN_TAG_TYP_TAG_ID + "" = "" + toBeDeleted.getTagId(), null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:230"$230$"//CASCADE sui figli"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:231"$231$"database.delete(SoulissDBOpenHelper.TABLE_TAGS, SoulissDBOpenHelper.COLUMN_TAG_FATHER_ID + "" = "" + toBeDeleted.getTagId(), null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:232"$232$"//CASCADE Launcher"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:233"$233$"database.delete(SoulissDBOpenHelper.TABLE_LAUNCHER,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:234"$234$"SoulissDBOpenHelper.COLUMN_LAUNCHER_TYPE + "" = "" + LauncherElementEnum.TAG.ordinal()"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:235"$235$"+ "" AND "" + SoulissDBOpenHelper.COLUMN_LAUNCHER_TAG_ID + "" = "" + toBeDeleted.getTagId(), null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:236"$236$"return database.delete(SoulissDBOpenHelper.TABLE_TAGS, SoulissDBOpenHelper.COLUMN_TAG_ID + "" = "" + toBeDeleted.getTagId(), null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:237"$237$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:238"$238$"public int deleteTagTypical(long tagId, int nodeid, int slot) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:239"$239$"//elimino associazione"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:240"$240$"return database.delete(SoulissDBOpenHelper.TABLE_TAGS_TYPICALS, SoulissDBOpenHelper.COLUMN_TAG_TYP_TAG_ID + "" = "" + tagId"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:241"$241$"+ "" AND "" + SoulissDBOpenHelper.COLUMN_TAG_TYP_NODE_ID + "" = "" + nodeid"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:242"$242$"+ "" AND "" + SoulissDBOpenHelper.COLUMN_TAG_TYP_SLOT + "" = "" + slot, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:243"$243$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:244"$244$"public List<SoulissNode> getAllNodes() {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:245"$245$"List<SoulissNode> comments = new ArrayList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:246"$246$"Cursor cursor = database.query(SoulissDBOpenHelper.TABLE_NODES, SoulissDBOpenHelper.ALLCOLUMNS_NODES, null, null, null, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:247"$247$"SoulissDBOpenHelper.COLUMN_NODE_ID);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:248"$248$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:249"$249$"while (!cursor.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:250"$250$"SoulissNode comment = SoulissNode.cursorToNode(context, cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:251"$251$"List<SoulissTypical> cod = getNodeTypicals(comment);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:252"$252$"// come sono grezzo, 'sta riga fa schifo"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:253"$253$"for (SoulissTypical soulissTypical : cod) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:254"$254$"// if (soulissTypical.getNodeId() == comment.getNodeId())"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:255"$255$"comment.addTypical(soulissTypical);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:256"$256$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:257"$257$"comments.add(comment);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:258"$258$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:259"$259$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:260"$260$"// Make sure to close the cursor"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:261"$261$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:262"$262$"return comments;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:263"$263$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:264"$264$"public List<SoulissTrigger> getAllTriggers() {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:265"$265$"List<SoulissTrigger> ret = new ArrayList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:266"$266$"// Cursor cursor = database.query(SoulissDB.TABLE_TRIGGERS,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:267"$267$"// SoulissDB.ALLCOLUMNS_TRIGGERS, null, null, null, null,null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:268"$268$"// String MY_QUERY ="$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:269"$269$"// ""SELECT * FROM ""+SoulissDB.TABLE_TRIGGERS+"" a INNER JOIN ""+SoulissDB.TABLE_COMMANDS"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:270"$270$"// +"" b ON a.cmdid = b.cmdid WHERE b.property_id=?"";"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:271"$271$"String MY_QUERY = ""SELECT * FROM "" + SoulissDBOpenHelper.TABLE_TRIGGERS + "" a "" + ""INNER JOIN """$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:272"$272$"+ SoulissDBOpenHelper.TABLE_COMMANDS + "" b ON a."" + SoulissDBOpenHelper.COLUMN_TRIGGER_COMMAND_ID + "" = b."""$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:273"$273$"+ SoulissDBOpenHelper.COLUMN_COMMAND_ID;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:274"$274$"Cursor cursor = database.rawQuery(MY_QUERY, null);"$"count"$1$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:275"$275$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:276"$276$"while (!cursor.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:277"$277$"SoulissCommandDTO cmd = new SoulissCommandDTO(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:278"$278$"SoulissTypical tgt = getTypical(cmd.getNodeId(), cmd.getSlot());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:279"$279$"SoulissTrigger cols = new SoulissTrigger(cmd, tgt);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:280"$280$"SoulissTriggerDTO comment = new SoulissTriggerDTO(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:281"$281$"cols.setTriggerDTO(comment);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:282"$282$"ret.add(cols);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:283"$283$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:284"$284$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:285"$285$"// Make sure to close the cursor"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:286"$286$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:287"$287$"return ret;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:288"$288$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:289"$289$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:290"$290$"* DB typical factory"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:291"$291$"*"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:292"$292$"* @return produced Typical"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:293"$293$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:294"$294$"public List<SoulissTypical> getAllTypicals() {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:295"$295$"List<SoulissTypical> comments = new ArrayList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:296"$296$"Cursor cursor = database.query(SoulissDBOpenHelper.TABLE_TYPICALS, SoulissDBOpenHelper.ALLCOLUMNS_TYPICALS, null, null, null, null, SoulissDBOpenHelper.COLUMN_TYPICAL_NODE_ID + "" , "" + SoulissDBOpenHelper.COLUMN_TYPICAL_SLOT);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:297"$297$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:298"$298$"List<SoulissNode> nodi = getAllNodes();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:299"$299$"while (!cursor.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:300"$300$"SoulissTypicalDTO dto = new SoulissTypicalDTO(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:301"$301$"SoulissTypical newTyp = SoulissTypicalFactory.getTypical(context, dto.getTypical(), nodi.get(dto.getNodeId()), dto, opts);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:302"$302$"//TAG? no join, perche 1 a n"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:303"$303$"Cursor typTags = database.query(SoulissDBOpenHelper.TABLE_TAGS_TYPICALS, SoulissDBOpenHelper.ALLCOLUMNS_TAGS_TYPICAL,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:304"$304$"SoulissDBOpenHelper.COLUMN_TAG_TYP_NODE_ID + "" = "" + dto.getNodeId()"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:305"$305$"+ "" AND "" + SoulissDBOpenHelper.COLUMN_TAG_TYP_SLOT + "" = "" + dto.getSlot(),"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:306"$306$"null, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:307"$307$"typTags.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:308"$308$"while (!typTags.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:309"$309$"int tagId = typTags.getInt(typTags.getColumnIndex(SoulissDBOpenHelper.COLUMN_TAG_TYP_TAG_ID));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:310"$310$"if (tagId == SoulissDBOpenHelper.FAVOURITES_TAG_ID)"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:311"$311$"dto.setFavourite(true);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:312"$312$"else"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:313"$313$"dto.setTagged(true);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:314"$314$"typTags.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:315"$315$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:316"$316$"typTags.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:317"$317$"//hack dto ID, could be different if parent is massive"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:318"$318$"newTyp.getTypicalDTO().setNodeId(dto.getNodeId());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:319"$319$"newTyp.setParentNode(nodi.get(dto.getNodeId()));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:320"$320$"// if (newTyp.getTypical() !="$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:321"$321$"// Constants.Souliss_T_CurrentSensor_slave)"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:322"$322$"comments.add(newTyp);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:323"$323$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:324"$324$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:325"$325$"// Make sure to close the cursor"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:326"$326$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:327"$327$"return comments;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:328"$328$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:329"$329$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:330"$330$"* Return antitheft master typical"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:331"$331$"*"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:332"$332$"* @return produced Typical"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:333"$333$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:334"$334$"public SoulissTypical41AntiTheft getAntiTheftMasterTypical() {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:335"$335$"// query with primary key"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:336"$336$"Cursor cursor = database.query(SoulissDBOpenHelper.TABLE_TYPICALS, SoulissDBOpenHelper.ALLCOLUMNS_TYPICALS,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:337"$337$"SoulissDBOpenHelper.COLUMN_TYPICAL + "" = """$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:338"$338$"+ Constants.Typicals.Souliss_T41_Antitheft_Main, null, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:339"$339$"null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:340"$340$"if (cursor.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:341"$341$"SoulissTypicalDTO dto = new SoulissTypicalDTO(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:342"$342$"SoulissTypical41AntiTheft ret = (SoulissTypical41AntiTheft) SoulissTypicalFactory.getTypical(context, dto.getTypical(),"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:343"$343$"getSoulissNode(dto.getNodeId()), dto, opts);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:344"$344$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:345"$345$"return ret;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:346"$346$"} else"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:347"$347$"throw new NoSuchElementException();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:348"$348$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:349"$349$"public List<SoulissTypical> getAntiTheftSensors() {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:350"$350$"List<SoulissTypical> comments = new ArrayList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:351"$351$"Cursor cursor = database.query(SoulissDBOpenHelper.TABLE_TYPICALS, SoulissDBOpenHelper.ALLCOLUMNS_TYPICALS,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:352"$352$"SoulissDBOpenHelper.COLUMN_TYPICAL + "" = """$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:353"$353$"+ Constants.Typicals.Souliss_T42_Antitheft_Peer, null, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:354"$354$"null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:355"$355$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:356"$356$"while (!cursor.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:357"$357$"SoulissTypicalDTO dto = new SoulissTypicalDTO(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:358"$358$"SoulissNode parent = getSoulissNode(dto.getNodeId());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:359"$359$"SoulissTypical42AntiTheftPeer newTyp = (SoulissTypical42AntiTheftPeer) SoulissTypicalFactory.getTypical(context,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:360"$360$"dto.getTypical(), parent, dto, opts);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:361"$361$"newTyp.setParentNode(parent);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:362"$362$"// if (newTyp.getTypical() !="$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:363"$363$"// Constants.Souliss_T_CurrentSensor_slave)"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:364"$364$"comments.add(newTyp);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:365"$365$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:366"$366$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:367"$367$"// Make sure to close the cursor"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:368"$368$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:369"$369$"cursor = database.query(SoulissDBOpenHelper.TABLE_TYPICALS, SoulissDBOpenHelper.ALLCOLUMNS_TYPICALS, SoulissDBOpenHelper.COLUMN_TYPICAL"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:370"$370$"+ "" = "" + Constants.Typicals.Souliss_T43_Antitheft_LocalPeer, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:371"$371$"null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:372"$372$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:373"$373$"while (!cursor.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:374"$374$"SoulissTypicalDTO dto = new SoulissTypicalDTO(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:375"$375$"SoulissNode parent = getSoulissNode(dto.getNodeId());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:376"$376$"SoulissTypical43AntiTheftLocalPeer newTyp = (SoulissTypical43AntiTheftLocalPeer) SoulissTypicalFactory.getTypical(context, dto.getTypical(), parent, dto, opts);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:377"$377$"newTyp.setParentNode(parent);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:378"$378$"// if (newTyp.getTypical() !="$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:379"$379$"// Constants.Souliss_T_CurrentSensor_slave)"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:380"$380$"comments.add(newTyp);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:381"$381$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:382"$382$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:383"$383$"// Make sure to close the cursor"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:384"$384$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:385"$385$"return comments;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:386"$386$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:387"$387$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:388"$388$"* Raggruppa i risultati di una query sui logs"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:389"$389$"*"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:390"$390$"* @param tgt     tipico da interrogare"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:391"$391$"* @param groupBy mese o giorno"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:392"$392$"* @param range   dei log da selezionare"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:393"$393$"* @return"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:394"$394$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:395"$395$"public SparseArray<SoulissGraphData> getGroupedTypicalLogs(ISoulissTypical tgt, String groupBy, int range) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:396"$396$"SparseArray<SoulissGraphData> comments = new SparseArray<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:397"$397$"String limitCause = """";"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:398"$398$"Calendar now = Calendar.getInstance();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:399"$399$"switch (range) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:400"$400$"case 0:"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:401"$401$"// tutti i dati"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:402"$402$"break;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:403"$403$"case 2:"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:404"$404$"now.add(Calendar.DATE, -7);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:405"$405$"limitCause = "" AND "" + SoulissDBOpenHelper.COLUMN_LOG_DATE + ""  > "" + now.getTime().getTime();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:406"$406$"break;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:407"$407$"case 1:"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:408"$408$"now.add(Calendar.MONTH, -1);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:409"$409$"limitCause = "" AND "" + SoulissDBOpenHelper.COLUMN_LOG_DATE + ""  > "" + now.getTime().getTime();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:410"$410$"break;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:411"$411$"default:"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:412"$412$"Log.e(""DB"", ""Unexpected switch ERROR"");"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:413"$413$"break;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:414"$414$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:415"$415$"int tot;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:416"$416$"if (groupBy.compareTo(""%m"") == 0)"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:417"$417$"tot = 12;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:418"$418$"else if (groupBy.compareTo(""%w"") == 0)"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:419"$419$"tot = 7;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:420"$420$"else"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:421"$421$"tot = 24;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:422"$422$"for (int i = 0; i < tot; i++) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:423"$423$"comments.put(i, new SoulissGraphData());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:424"$424$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:425"$425$"Log.d(Constants.TAG, ""QUERY GROUPED:"");"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:426"$426$"Cursor cursor = database.query(SoulissDBOpenHelper.TABLE_LOGS, new String[]{"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:427"$427$"""strftime('"" + groupBy +"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:428"$428$"""', datetime((cldlogwhen/1000), 'unixepoch', 'localtime')) AS IDX"","$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:429"$429$"""AVG(CAST(flologval AS FLOAT)) AS AVG"","$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:430"$430$"""MIN(CAST(flologval AS FLOAT)) AS MIN"","$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:431"$431$"""MAX(CAST(flologval AS FLOAT)) AS MAX""},"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:432"$432$"SoulissDBOpenHelper.COLUMN_LOG_NODE_ID"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:433"$433$"+ "" = ""// selection"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:434"$434$"+ tgt.getNodeId() + "" AND "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:435"$435$"SoulissDBOpenHelper.COLUMN_LOG_SLOT + "" = """$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:436"$436$"+ tgt.getSlot() + limitCause + "" "","$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:437"$437$"null,// String[] selectionArgs"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:438"$438$"""strftime('"" + groupBy// GROUP BY"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:439"$439$"+ ""', datetime((cldlogwhen/1000), 'unixepoch', 'localtime'))"","$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:440"$440$"null, // HAVING"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:441"$441$"""IDX ASC"");// ORDER BY"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:442"$442$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:443"$443$"while (!cursor.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:444"$444$"SoulissGraphData dto = new SoulissGraphData(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:445"$445$"//assertEquals(true, dto.key >= 0);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:446"$446$"comments.put(Integer.parseInt(dto.key), dto);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:447"$447$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:448"$448$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:449"$449$"// Make sure to close the cursor"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:450"$450$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:451"$451$"return comments;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:452"$452$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:453"$453$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:454"$454$"* torna la storia di uno slot, raggruppata per giorno"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:455"$455$"*"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:456"$456$"* @param tgt"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:457"$457$"* @return"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:458"$458$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:459"$459$"public LinkedHashMap<Date, Short> getHistoryTypicalHashMap(SoulissTypical tgt, TimeRangeEnum range) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:460"$460$"LinkedHashMap<Date, Short> comments = new LinkedHashMap<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:461"$461$"Date dff;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:462"$462$"Short how;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:463"$463$"String limitCause = """";"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:464"$464$"Calendar now = Calendar.getInstance();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:465"$465$"switch (range) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:466"$466$"case ALL_DATA:"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:467"$467$"// tutti i dati"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:468"$468$"break;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:469"$469$"case LAST_WEEK:"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:470"$470$"now.add(Calendar.DATE, -7);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:471"$471$"limitCause = "" AND "" + SoulissDBOpenHelper.COLUMN_LOG_DATE + ""  > "" + now.getTime().getTime();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:472"$472$"break;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:473"$473$"case LAST_MONTH:"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:474"$474$"now.add(Calendar.MONTH, -1);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:475"$475$"limitCause = "" AND "" + SoulissDBOpenHelper.COLUMN_LOG_DATE + ""  > "" + now.getTime().getTime();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:476"$476$"break;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:477"$477$"case LAST_DAY:"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:478"$478$"now.add(Calendar.DAY_OF_WEEK_IN_MONTH, -1);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:479"$479$"limitCause = "" AND "" + SoulissDBOpenHelper.COLUMN_LOG_DATE + ""  > "" + now.getTime().getTime();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:480"$480$"break;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:481"$481$"default:"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:482"$482$"Log.e(""DB"", ""Unexpected switch ERROR"");"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:483"$483$"break;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:484"$484$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:485"$485$"Cursor cursor = database.query(SoulissDBOpenHelper.TABLE_LOGS, new String[]{"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:486"$486$"SoulissDBOpenHelper.COLUMN_LOG_DATE,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:487"$487$"SoulissDBOpenHelper.COLUMN_LOG_VAL,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:488"$488$"//""strftime('%Y-%m-%d', datetime((cldlogwhen/1000), 'unixepoch', 'localtime')) AS IDX"","$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:489"$489$"//""AVG(CAST(flologval AS FLOAT)) AS AVG"", ""MIN(CAST(flologval AS FLOAT)) AS MIN"","$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:490"$490$"//""MAX(CAST(flologval AS FLOAT)) AS MAX"""$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:491"$491$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:492"$492$", SoulissDBOpenHelper.COLUMN_LOG_NODE_ID + "" = """$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:493"$493$"+ tgt.getNodeId() + "" AND "" + SoulissDBOpenHelper.COLUMN_LOG_SLOT + "" = """$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:494"$494$"+ tgt.getSlot() + limitCause + "" "", null, null, null, SoulissDBOpenHelper.COLUMN_LOG_DATE + "" ASC"");"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:495"$495$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:496"$496$"while (!cursor.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:497"$497$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:498"$498$"dff = new Date(cursor.getLong(cursor.getColumnIndex(SoulissDBOpenHelper.COLUMN_LOG_DATE)));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:499"$499$"how = (short) cursor.getInt(cursor.getColumnIndex(SoulissDBOpenHelper.COLUMN_LOG_VAL));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:500"$500$"//SoulissTypicalDTO dto = new SoulissTypicalDTO(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:501"$501$"//comments.put(dto.key, dto);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:502"$502$"comments.put(dff, how);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:503"$503$"} catch (Exception e) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:504"$504$"Log.e(TAG, ""getHistoryTypicalHashMap"", e);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:505"$505$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:506"$506$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:507"$507$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:508"$508$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:509"$509$"return comments;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:510"$510$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:511"$511$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:512"$512$"* torna la storia di uno slot, raggruppata per giorno"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:513"$513$"*"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:514"$514$"* @param tgt"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:515"$515$"* @return"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:516"$516$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:517"$517$"public HashMap<Date, SoulissHistoryGraphData> getHistoryTypicalLogs(ISoulissTypical tgt, int range) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:518"$518$"HashMap<Date, SoulissHistoryGraphData> comments = new HashMap<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:519"$519$"Date dff;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:520"$520$"String limitCause = """";"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:521"$521$"Calendar now = Calendar.getInstance();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:522"$522$"switch (range) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:523"$523$"case 0:"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:524"$524$"// tutti i dati"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:525"$525$"break;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:526"$526$"case 2:"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:527"$527$"now.add(Calendar.DATE, -7);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:528"$528$"limitCause = "" AND "" + SoulissDBOpenHelper.COLUMN_LOG_DATE + ""  > "" + now.getTime().getTime();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:529"$529$"break;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:530"$530$"case 1:"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:531"$531$"now.add(Calendar.MONTH, -1);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:532"$532$"limitCause = "" AND "" + SoulissDBOpenHelper.COLUMN_LOG_DATE + ""  > "" + now.getTime().getTime();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:533"$533$"break;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:534"$534$"default:"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:535"$535$"Log.e(""DB"", ""Unexpected switch ERROR"");"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:536"$536$"break;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:537"$537$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:538"$538$"Cursor cursor = database.query(SoulissDBOpenHelper.TABLE_LOGS, new String[]{"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:539"$539$"""strftime('%Y-%m-%d', datetime((cldlogwhen/1000), 'unixepoch', 'localtime')) AS IDX"","$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:540"$540$"""AVG(CAST(flologval AS FLOAT)) AS AVG"", ""MIN(CAST(flologval AS FLOAT)) AS MIN"","$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:541"$541$"""MAX(CAST(flologval AS FLOAT)) AS MAX""}, SoulissDBOpenHelper.COLUMN_LOG_NODE_ID + "" = """$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:542"$542$"+ tgt.getNodeId() + "" AND "" + SoulissDBOpenHelper.COLUMN_LOG_SLOT + "" = """$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:543"$543$"+ tgt.getSlot() + limitCause + "" "", null,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:544"$544$"""strftime('%Y-%m-%d', datetime((cldlogwhen/1000), 'unixepoch', 'localtime'))"", null, ""IDX ASC"");"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:545"$545$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:546"$546$"while (!cursor.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:547"$547$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:548"$548$"dff = Constants.yearFormat.parse(cursor.getString(0));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:549"$549$"SoulissHistoryGraphData dto = new SoulissHistoryGraphData(cursor, dff);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:550"$550$"comments.put(dto.key, dto);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:551"$551$"} catch (ParseException e) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:552"$552$"Log.e(TAG, ""getHistoryTypicalLogs"", e);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:553"$553$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:554"$554$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:555"$555$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:556"$556$"// Make sure to close the cursor"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:557"$557$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:558"$558$"return comments;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:559"$559$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:560"$560$"public List<SoulissTypical> getNodeTypicals(SoulissNode parent) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:561"$561$"List<SoulissTypical> comments = new ArrayList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:562"$562$"Cursor cursor = database.query(SoulissDBOpenHelper.TABLE_TYPICALS, SoulissDBOpenHelper.ALLCOLUMNS_TYPICALS,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:563"$563$"SoulissDBOpenHelper.COLUMN_TYPICAL_NODE_ID + "" = "" + parent.getNodeId(), null, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:564"$564$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:565"$565$"while (!cursor.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:566"$566$"SoulissTypicalDTO dto = new SoulissTypicalDTO(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:567"$567$"SoulissTypical newTyp = SoulissTypicalFactory.getTypical(context, dto.getTypical(), parent, dto, opts);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:568"$568$"//TAG? no join, perche 1 a n"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:569"$569$"Cursor typTags = database.query(SoulissDBOpenHelper.TABLE_TAGS_TYPICALS, SoulissDBOpenHelper.ALLCOLUMNS_TAGS_TYPICAL,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:570"$570$"SoulissDBOpenHelper.COLUMN_TAG_TYP_NODE_ID + "" = "" + dto.getNodeId()"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:571"$571$"+ "" AND "" + SoulissDBOpenHelper.COLUMN_TAG_TYP_SLOT + "" = "" + dto.getSlot(),"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:572"$572$"null, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:573"$573$"typTags.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:574"$574$"while (!typTags.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:575"$575$"int tagId = typTags.getInt(typTags.getColumnIndex(SoulissDBOpenHelper.COLUMN_TAG_TYP_TAG_ID));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:576"$576$"if (tagId == SoulissDBOpenHelper.FAVOURITES_TAG_ID)"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:577"$577$"dto.setFavourite(true);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:578"$578$"else"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:579"$579$"dto.setTagged(true);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:580"$580$"typTags.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:581"$581$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:582"$582$"typTags.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:583"$583$"//hack dto ID, could be different if parent is massive"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:584"$584$"newTyp.getTypicalDTO().setNodeId(parent.getNodeId());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:585"$585$"newTyp.setParentNode(parent);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:586"$586$"// if (newTyp.getTypical() !="$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:587"$587$"// Constants.Souliss_T_CurrentSensor_slave)"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:588"$588$"comments.add(newTyp);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:589"$589$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:590"$590$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:591"$591$"// Make sure to close the cursor"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:592"$592$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:593"$593$"return comments;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:594"$594$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:595"$595$"public LinkedList<SoulissCommand> getPositionalPrograms() {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:596"$596$"LinkedList<SoulissCommand> ret = new LinkedList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:597"$597$"Cursor cursor = database"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:598"$598$".query(SoulissDBOpenHelper.TABLE_COMMANDS, SoulissDBOpenHelper.ALLCOLUMNS_COMMANDS, SoulissDBOpenHelper.COLUMN_COMMAND_TYPE + "" = """$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:599"$599$"+ Constants.COMMAND_COMEBACK_CODE + "" OR "" + SoulissDBOpenHelper.COLUMN_COMMAND_TYPE + "" = """$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:600"$600$"+ Constants.COMMAND_GOAWAY_CODE, null, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:601"$601$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:602"$602$"while (!cursor.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:603"$603$"SoulissCommandDTO comment = new SoulissCommandDTO(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:604"$604$"// comments.add(comment);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:605"$605$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:606"$606$"short node = comment.getNodeId();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:607"$607$"short slot = comment.getSlot();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:608"$608$"SoulissCommand adding;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:609"$609$"if (node > MASSIVE_NODE_ID) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:610"$610$"SoulissTypical parentTypical = getTypical(node, slot);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:611"$611$"adding = new SoulissCommand(context, comment, parentTypical);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:612"$612$"} else {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:613"$613$"adding = new SoulissCommand(context, comment);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:614"$614$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:615"$615$"adding.setSceneId(null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:616"$616$"ret.add(adding);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:617"$617$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:618"$618$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:619"$619$"return ret;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:620"$620$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:621"$621$"public List<SoulissTag> getRootTags() {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:622"$622$"List<SoulissTag> comments = new ArrayList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:623"$623$"if (!database.isOpen())"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:624"$624$"open();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:625"$625$"//solo radici"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:626"$626$"Cursor cursor = database.query(SoulissDBOpenHelper.TABLE_TAGS, SoulissDBOpenHelper.ALLCOLUMNS_TAGS,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:627"$627$"SoulissDBOpenHelper.COLUMN_TAG_FATHER_ID + "" IS NULL "", null, null, null, SoulissDBOpenHelper.COLUMN_TAG_ORDER + "", "" + SoulissDBOpenHelper.COLUMN_TAG_ID);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:628"$628$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:629"$629$"while (!cursor.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:630"$630$"SoulissTag dto = new SoulissTag();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:631"$631$"dto.setTagId(cursor.getInt(cursor.getColumnIndex(SoulissDBOpenHelper.COLUMN_TAG_ID)));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:632"$632$"dto.setName(cursor.getString(cursor.getColumnIndex(SoulissDBOpenHelper.COLUMN_TAG_NAME)));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:633"$633$"dto.setTagOrder(cursor.getInt(cursor.getColumnIndex(SoulissDBOpenHelper.COLUMN_TAG_ORDER)));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:634"$634$"dto.setIconResourceId(cursor.getInt(cursor.getColumnIndex(SoulissDBOpenHelper.COLUMN_TAG_ICONID)));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:635"$635$"dto.setImagePath(cursor.getString(cursor.getColumnIndex(SoulissDBOpenHelper.COLUMN_TAG_IMGPTH)));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:636"$636$"dto.setFatherId(null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:637"$637$"Log.d(Constants.TAG, ""retrieving ROOT TAG:"" + dto.getTagId() + "" ORDER:"" + dto.getTagOrder());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:638"$638$"dto.setAssignedTypicals(getTagTypicals(dto));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:639"$639$"dto.setChildTags(getTagChild(dto));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:640"$640$"comments.add(dto);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:641"$641$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:642"$642$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:643"$643$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:644"$644$"return comments;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:645"$645$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:646"$646$"public SoulissScene getScene(int sceneId) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:647"$647$"Cursor cursor = database.query(SoulissDBOpenHelper.TABLE_SCENES, SoulissDBOpenHelper.ALLCOLUMNS_SCENES, SoulissDBOpenHelper.COLUMN_SCENE_ID + "" ="" + sceneId, null, null, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:648"$648$"SoulissDBOpenHelper.COLUMN_SCENE_ID);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:649"$649$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:650"$650$"SoulissScene comment = new SoulissScene(cursor.getInt(cursor.getColumnIndex(SoulissDBOpenHelper.COLUMN_SCENE_ID)));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:651"$651$"comment.setName(cursor.getString(cursor.getColumnIndex(SoulissDBOpenHelper.COLUMN_SCENE_NAME)));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:652"$652$"comment.setIconResourceId(cursor.getInt(cursor.getColumnIndex(SoulissDBOpenHelper.COLUMN_SCENE_ICON)));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:653"$653$"ArrayList<SoulissCommand> cmds = getSceneCommands(comment.getId());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:654"$654$"comment.setCommandArray(cmds);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:655"$655$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:656"$656$"return comment;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:657"$657$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:658"$658$"public ArrayList<SoulissCommand> getSceneCommands(int sceneId) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:659"$659$"ArrayList<SoulissCommand> ret = new ArrayList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:660"$660$"Cursor cursor = database.query(SoulissDBOpenHelper.TABLE_COMMANDS, SoulissDBOpenHelper.ALLCOLUMNS_COMMANDS,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:661"$661$"SoulissDBOpenHelper.COLUMN_COMMAND_SCENEID + "" ="" + sceneId, null, null, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:662"$662$"SoulissDBOpenHelper.COLUMN_COMMAND_SCHEDTIME);//se scenario, e` lo step"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:663"$663$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:664"$664$"while (!cursor.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:665"$665$"SoulissCommandDTO comment = new SoulissCommandDTO(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:666"$666$"// comments.add(comment);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:667"$667$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:668"$668$"short node = comment.getNodeId();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:669"$669$"short slot = comment.getSlot();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:670"$670$"SoulissCommand adding;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:671"$671$"if (node > Constants.MASSIVE_NODE_ID) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:672"$672$"SoulissTypical tgt = getTypical(node, slot);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:673"$673$"tgt.getTypicalDTO().setNodeId(node);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:674"$674$"tgt.getTypicalDTO().setSlot(slot);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:675"$675$"adding = new SoulissCommand(context, comment, tgt);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:676"$676$"// comando massivo"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:677"$677$"} else {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:678"$678$"SoulissNode fake = new SoulissNode(context, Constants.MASSIVE_NODE_ID);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:679"$679$"SoulissTypical tgt = new SoulissTypical(context, opts);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:680"$680$"tgt.setParentNode(fake);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:681"$681$"tgt.getTypicalDTO().setNodeId(Constants.MASSIVE_NODE_ID);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:682"$682$"// in caso di comando massivo, SLOT = TYPICAL"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:683"$683$"tgt.getTypicalDTO().setTypical(slot);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:684"$684$"adding = new SoulissCommand(context, comment, tgt);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:685"$685$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:686"$686$"ret.add(adding);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:687"$687$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:688"$688$"// Make sure to close the cursor"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:689"$689$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:690"$690$"return ret;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:691"$691$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:692"$692$"public LinkedList<SoulissScene> getScenes() {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:693"$693$"LinkedList<SoulissScene> ret = new LinkedList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:694"$694$"Cursor cursor = database.query(SoulissDBOpenHelper.TABLE_SCENES, SoulissDBOpenHelper.ALLCOLUMNS_SCENES, null, null, null, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:695"$695$"SoulissDBOpenHelper.COLUMN_SCENE_ID);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:696"$696$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:697"$697$"while (!cursor.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:698"$698$"SoulissScene comment = new SoulissScene(cursor.getInt(cursor.getColumnIndex(SoulissDBOpenHelper.COLUMN_SCENE_ID)));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:699"$699$"comment.setName(cursor.getString(cursor.getColumnIndex(SoulissDBOpenHelper.COLUMN_SCENE_NAME)));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:700"$700$"comment.setIconResourceId(cursor.getInt(cursor.getColumnIndex(SoulissDBOpenHelper.COLUMN_SCENE_ICON)));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:701"$701$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:702"$702$"ArrayList<SoulissCommand> cmds = getSceneCommands(comment.getId());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:703"$703$"comment.setCommandArray(cmds);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:704"$704$"ret.add(comment);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:705"$705$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:706"$706$"// Make sure to close the cursor"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:707"$707$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:708"$708$"return ret;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:709"$709$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:710"$710$"public long getSize() {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:711"$711$"return new File(database.getPath()).length();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:712"$712$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:713"$713$"public SoulissNode getSoulissNode(int nodeIN) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:714"$714$"Cursor cursor = database.query(SoulissDBOpenHelper.TABLE_NODES, SoulissDBOpenHelper.ALLCOLUMNS_NODES, SoulissDBOpenHelper.COLUMN_NODE_ID"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:715"$715$"+ "" = "" + nodeIN, null, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:716"$716$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:717"$717$"SoulissNode ret = SoulissNode.cursorToNode(context, cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:718"$718$"List<SoulissTypical> cod = getNodeTypicals(ret);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:719"$719$"// come sono grezzo, 'sta riga fa schifo"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:720"$720$"for (SoulissTypical soulissTypical : cod) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:721"$721$"// if (soulissTypical.getNodeId() == comment.getNodeId())"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:722"$722$"ret.addTypical(soulissTypical);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:723"$723$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:724"$724$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:725"$725$"return ret;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:726"$726$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:727"$727$"public SoulissTriggerDTO getSoulissTrigger(long insertId) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:728"$728$"Cursor cursor = database.query(SoulissDBOpenHelper.TABLE_TRIGGERS, SoulissDBOpenHelper.ALLCOLUMNS_TRIGGERS,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:729"$729$"SoulissDBOpenHelper.COLUMN_TRIGGER_ID + "" = "" + insertId, null, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:730"$730$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:731"$731$"SoulissTriggerDTO dto = new SoulissTriggerDTO(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:732"$732$"// SoulissTypical ret = SoulissTypical.typicalFactory(dto.getTypical(),"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:733"$733$"// getSoulissNode(node), dto);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:734"$734$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:735"$735$"return dto;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:736"$736$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:737"$737$"public SoulissTag getTag(long tagId) throws SQLDataException {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:738"$738$"SoulissTag dto = new SoulissTag();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:739"$739$"if (!database.isOpen())"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:740"$740$"open();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:741"$741$"Cursor cursor = database.query(SoulissDBOpenHelper.TABLE_TAGS, SoulissDBOpenHelper.ALLCOLUMNS_TAGS,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:742"$742$"SoulissDBOpenHelper.COLUMN_TAG_ID + "" = "" + tagId, null, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:743"$743$"if (cursor.isLast())"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:744"$744$"throw new SQLDataException(""Non Existing TagId:"" + tagId);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:745"$745$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:746"$746$"while (!cursor.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:747"$747$"dto.setTagOrder(cursor.getInt(cursor.getColumnIndex(SoulissDBOpenHelper.COLUMN_TAG_ORDER)));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:748"$748$"dto.setTagId(cursor.getInt(cursor.getColumnIndex(SoulissDBOpenHelper.COLUMN_TAG_ID)));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:749"$749$"dto.setName(cursor.getString(cursor.getColumnIndex(SoulissDBOpenHelper.COLUMN_TAG_NAME)));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:750"$750$"dto.setIconResourceId(cursor.getInt(cursor.getColumnIndex(SoulissDBOpenHelper.COLUMN_TAG_ICONID)));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:751"$751$"dto.setImagePath(cursor.getString(cursor.getColumnIndex(SoulissDBOpenHelper.COLUMN_TAG_IMGPTH)));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:752"$752$"Long l = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:753"$753$"if (!cursor.isNull(cursor.getColumnIndex(SoulissDBOpenHelper.COLUMN_TAG_FATHER_ID)))"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:754"$754$"l = cursor.getLong(cursor.getColumnIndex(SoulissDBOpenHelper.COLUMN_TAG_FATHER_ID));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:755"$755$"dto.setFatherId(l);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:756"$756$"List<SoulissTypical> devs = getTagTypicals(dto);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:757"$757$"dto.setAssignedTypicals(devs);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:758"$758$"dto.setChildTags(getTagChild(dto));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:759"$759$"Log.i(Constants.TAG, ""retrieved TAG:"" + dto.getTagId() + "" ORDER:"" + dto.getTagOrder() + "" Father:"" + dto.getFatherId() + "" Devices:"" + dto.getAssignedTypicals().size() + "" Childs:"" + dto.getAssignedTypicals().size());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:760"$760$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:761"$761$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:762"$762$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:763"$763$"return dto;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:764"$764$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:765"$765$"protected List<SoulissTag> getTagChild(SoulissTag fatherDto) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:766"$766$"List<SoulissTag> ret = new ArrayList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:767"$767$"if (!database.isOpen())"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:768"$768$"open();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:769"$769$"Cursor cursor = database.query(SoulissDBOpenHelper.TABLE_TAGS, SoulissDBOpenHelper.ALLCOLUMNS_TAGS,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:770"$770$"SoulissDBOpenHelper.COLUMN_TAG_FATHER_ID + "" = "" + fatherDto.getTagId(), null, null, null, SoulissDBOpenHelper.COLUMN_TAG_ORDER);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:771"$771$"if (cursor.isLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:772"$772$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:773"$773$"return ret;//basta figli"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:774"$774$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:775"$775$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:776"$776$"while (!cursor.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:777"$777$"SoulissTag dtoI = new SoulissTag();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:778"$778$"dtoI.setTagOrder(cursor.getInt(cursor.getColumnIndex(SoulissDBOpenHelper.COLUMN_TAG_ORDER)));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:779"$779$"dtoI.setTagId(cursor.getInt(cursor.getColumnIndex(SoulissDBOpenHelper.COLUMN_TAG_ID)));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:780"$780$"dtoI.setName(cursor.getString(cursor.getColumnIndex(SoulissDBOpenHelper.COLUMN_TAG_NAME)));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:781"$781$"dtoI.setIconResourceId(cursor.getInt(cursor.getColumnIndex(SoulissDBOpenHelper.COLUMN_TAG_ICONID)));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:782"$782$"dtoI.setImagePath(cursor.getString(cursor.getColumnIndex(SoulissDBOpenHelper.COLUMN_TAG_IMGPTH)));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:783"$783$"dtoI.setFatherId(fatherDto.getTagId());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:784"$784$"Log.d(Constants.TAG, ""retrieving TAG CHILD OF:"" + fatherDto.getTagId() + "" CHILD ID: "" + dtoI.getTagId());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:785"$785$"dtoI.setAssignedTypicals(getTagTypicals(dtoI));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:786"$786$"dtoI.setChildTags(getTagChild(dtoI));//recursive"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:787"$787$"ret.add(dtoI);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:788"$788$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:789"$789$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:790"$790$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:791"$791$"return ret;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:792"$792$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:793"$793$"public List<SoulissTypical> getTagTypicals(SoulissTag parent) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:794"$794$"List<SoulissTypical> comments = new ArrayList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:795"$795$"String MY_QUERY = ""SELECT * FROM "" + SoulissDBOpenHelper.TABLE_TAGS_TYPICALS + "" a """$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:796"$796$"+ "" INNER JOIN "" + SoulissDBOpenHelper.TABLE_TYPICALS + "" b """$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:797"$797$"+ "" ON a."" + SoulissDBOpenHelper.COLUMN_TAG_TYP_NODE_ID + "" = b."" + SoulissDBOpenHelper.COLUMN_TYPICAL_NODE_ID"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:798"$798$"+ "" AND a."" + SoulissDBOpenHelper.COLUMN_TAG_TYP_SLOT + "" = b."" + SoulissDBOpenHelper.COLUMN_TYPICAL_SLOT"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:799"$799$"+ "" WHERE a."" + SoulissDBOpenHelper.COLUMN_TAG_TYP_TAG_ID + "" = "" + parent.getTagId()"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:800"$800$"+ "" ORDER BY a."" + SoulissDBOpenHelper.COLUMN_TAG_TYP_PRIORITY;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:801"$801$"Cursor cursor = database.rawQuery(MY_QUERY, null);"$"count"$1$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:802"$802$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:803"$803$"while (!cursor.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:804"$804$"SoulissTypicalDTO dto = new SoulissTypicalDTO(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:805"$805$"SoulissNode par = getSoulissNode(dto.getNodeId());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:806"$806$"SoulissTypical newTyp = SoulissTypicalFactory.getTypical(context, dto.getTypical(), par, dto, opts);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:807"$807$"//hack dto ID, could be different if parent is massive"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:808"$808$"newTyp.getTypicalDTO().setNodeId(dto.getNodeId());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:809"$809$"//Se e` qui, e` taggato"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:810"$810$"if (parent.getTagId() == 0)"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:811"$811$"newTyp.getTypicalDTO().setFavourite(true);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:812"$812$"newTyp.getTypicalDTO().setTagged(true);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:813"$813$"comments.add(newTyp);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:814"$814$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:815"$815$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:816"$816$"// Make sure to close the cursor"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:817"$817$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:818"$818$"return comments;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:819"$819$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:820"$820$"public SoulissTriggerDTO getTriggerByCommandId(long triggerId) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:821"$821$"String MY_QUERY = ""SELECT * FROM "" + SoulissDBOpenHelper.TABLE_TRIGGERS + "" a "" + ""INNER JOIN """$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:822"$822$"+ SoulissDBOpenHelper.TABLE_COMMANDS + "" b ON a."" + SoulissDBOpenHelper.COLUMN_TRIGGER_COMMAND_ID + "" = b."""$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:823"$823$"+ SoulissDBOpenHelper.COLUMN_COMMAND_ID + "" WHERE "" + SoulissDBOpenHelper.COLUMN_TRIGGER_COMMAND_ID + "" = "" + triggerId;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:824"$824$"Cursor cursor = database.rawQuery(MY_QUERY, null);"$"count"$1$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:825"$825$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:826"$826$"if (BuildConfig.DEBUG && !(cursor.getColumnCount() == 1))"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:827"$827$"throw new RuntimeException(""cursor.getColumnCount() != 1"");"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:828"$828$"SoulissTriggerDTO comment = new SoulissTriggerDTO(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:829"$829$"// cols.setTriggerDTO(comment);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:830"$830$"// Make sure to close the cursor"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:831"$831$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:832"$832$"return comment;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:833"$833$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:834"$834$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:835"$835$"* Ritorna mappa di tutti i comandi, indicizzati per ID"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:836"$836$"*"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:837"$837$"* @return"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:838"$838$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:839"$839$"public SparseArray<SoulissTriggerDTO> getTriggerMap() {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:840"$840$"SparseArray<SoulissTriggerDTO> ret = new SparseArray<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:841"$841$"Cursor cursor = database.query(SoulissDBOpenHelper.TABLE_TRIGGERS, SoulissDBOpenHelper.ALLCOLUMNS_TRIGGERS, null, null, null, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:842"$842$"null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:843"$843$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:844"$844$"while (!cursor.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:845"$845$"SoulissTriggerDTO dto = new SoulissTriggerDTO(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:846"$846$"ret.put((int) dto.getCommandId(), dto);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:847"$847$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:848"$848$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:849"$849$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:850"$850$"return ret;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:851"$851$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:852"$852$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:853"$853$"* DB typical factory"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:854"$854$"*"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:855"$855$"* @param node"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:856"$856$"* @param slot"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:857"$857$"* @return produced Typical"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:858"$858$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:859"$859$"public SoulissTypical getTypical(int node, short slot) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:860"$860$"// query with primary key"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:861"$861$"Cursor cursor = database.query(SoulissDBOpenHelper.TABLE_TYPICALS, SoulissDBOpenHelper.ALLCOLUMNS_TYPICALS,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:862"$862$"SoulissDBOpenHelper.COLUMN_TYPICAL_NODE_ID + "" = "" + node + "" AND "" + SoulissDBOpenHelper.COLUMN_TYPICAL_SLOT + "" = """$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:863"$863$"+ slot, null, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:864"$864$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:865"$865$"SoulissTypicalDTO dto = new SoulissTypicalDTO(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:866"$866$"//TAG? no join, perche 1 a n"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:867"$867$"Cursor typTags = database.query(SoulissDBOpenHelper.TABLE_TAGS_TYPICALS, SoulissDBOpenHelper.ALLCOLUMNS_TAGS_TYPICAL,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:868"$868$"SoulissDBOpenHelper.COLUMN_TAG_TYP_NODE_ID + "" = "" + dto.getNodeId()"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:869"$869$"+ "" AND "" + SoulissDBOpenHelper.COLUMN_TAG_TYP_SLOT + "" = "" + dto.getSlot(),"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:870"$870$"null, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:871"$871$"typTags.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:872"$872$"while (!typTags.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:873"$873$"int tagId = typTags.getInt(typTags.getColumnIndex(SoulissDBOpenHelper.COLUMN_TAG_TYP_TAG_ID));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:874"$874$"if (tagId == SoulissDBOpenHelper.FAVOURITES_TAG_ID)"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:875"$875$"dto.setFavourite(true);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:876"$876$"else"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:877"$877$"dto.setTagged(true);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:878"$878$"typTags.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:879"$879$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:880"$880$"typTags.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:881"$881$"SoulissTypical ret = SoulissTypicalFactory.getTypical(context, dto.getTypical(), getSoulissNode(node), dto, opts);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:882"$882$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:883"$883$"return ret;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:884"$884$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:885"$885$"public ArrayList<SoulissLogDTO> getTypicalLogs(SoulissTypical tgt) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:886"$886$"ArrayList<SoulissLogDTO> comments = new ArrayList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:887"$887$"Cursor cursor = database.query(SoulissDBOpenHelper.TABLE_LOGS, SoulissDBOpenHelper.ALLCOLUMNS_LOGS, SoulissDBOpenHelper.COLUMN_LOG_NODE_ID"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:888"$888$"+ "" = "" + tgt.getNodeId() + "" AND "" + SoulissDBOpenHelper.COLUMN_LOG_SLOT + "" = """$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:889"$889$"+ tgt.getSlot(), null, null, null, SoulissDBOpenHelper.COLUMN_LOG_DATE + "" ASC"");"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:890"$890$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:891"$891$"while (!cursor.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:892"$892$"SoulissLogDTO dto = new SoulissLogDTO(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:893"$893$"comments.add(dto);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:894"$894$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:895"$895$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:896"$896$"// Make sure to close the cursor"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:897"$897$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:898"$898$"return comments;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:899"$899$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:900"$900$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:901"$901$"* TO TEST"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:902"$902$"*"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:903"$903$"* @param tgt"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:904"$904$"* @param range"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:905"$905$"* @return"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:906"$906$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:907"$907$"public ArrayList<ClockPieHelper> getTypicalOnClockPie(SoulissTypical tgt, TimeRangeEnum range) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:908"$908$"ArrayList<ClockPieHelper> clockPieHelperArrayList = new ArrayList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:909"$909$"LinkedHashMap<Date, Short> comments = getHistoryTypicalHashMap(tgt, range);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:910"$910$"boolean firstGo = true;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:911"$911$"Date accStart = new Date();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:912"$912$"for (Date cur : comments.keySet()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:913"$913$"Short val = comments.get(cur);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:914"$914$"if (val != Constants.Typicals.Souliss_T1n_OffCoil && val != Constants.Typicals.Souliss_T1n_OffCoil_Auto) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:915"$915$"//spento, inizia nuovo per"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:916"$916$"accStart = cur;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:917"$917$"firstGo = false;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:918"$918$"} else if (!firstGo) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:919"$919$"Calendar start = Calendar.getInstance();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:920"$920$"Calendar stop = Calendar.getInstance();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:921"$921$"start.setTime(accStart);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:922"$922$"stop.setTime(cur);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:923"$923$"//aggiungo fetta sse piu di un minuto"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:924"$924$"if (!(start.get(Calendar.HOUR_OF_DAY) == stop.get(Calendar.HOUR_OF_DAY) &&"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:925"$925$"(start.get(Calendar.MINUTE) == stop.get(Calendar.MINUTE)))) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:926"$926$"Log.d(Constants.TAG, ""Aggiungo fetta dalle "" + start.get(Calendar.HOUR_OF_DAY) + "":"" + start.get(Calendar.MINUTE)"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:927"$927$"+ "" alle "" + stop.get(Calendar.HOUR_OF_DAY) + "":"" + stop.get(Calendar.MINUTE));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:928"$928$"clockPieHelperArrayList.add(new ClockPieHelper(start.get(Calendar.HOUR_OF_DAY), start.get(Calendar.MINUTE),"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:929"$929$"stop.get(Calendar.HOUR_OF_DAY), stop.get(Calendar.MINUTE)));"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:930"$930$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:931"$931$"firstGo = true;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:932"$932$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:933"$933$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:934"$934$"return clockPieHelperArrayList;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:935"$935$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:936"$936$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:937"$937$"* TO TEST"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:938"$938$"*"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:939"$939$"* @param tgt"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:940"$940$"* @param range"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:941"$941$"* @return"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:942"$942$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:943"$943$"public int getTypicalOnDurationMsec(SoulissTypical tgt, TimeRangeEnum range) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:944"$944$"LinkedHashMap<Date, Short> comments = getHistoryTypicalHashMap(tgt, range);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:945"$945$"int accumulator = 0;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:946"$946$"boolean firstGo = true;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:947"$947$"Date accStart = new Date();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:948"$948$"for (Date cur : comments.keySet()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:949"$949$"Short val = comments.get(cur);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:950"$950$"if (val != Constants.Typicals.Souliss_T1n_OffCoil && val != Constants.Typicals.Souliss_T1n_OffCoil_Auto) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:951"$951$"//spento, inizia nuovo per"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:952"$952$"accStart = cur;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:953"$953$"firstGo = false;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:954"$954$"} else if (!firstGo) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:955"$955$"accumulator += cur.getTime() - accStart.getTime();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:956"$956$"firstGo = true;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:957"$957$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:958"$958$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:959"$959$"return accumulator;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:960"$960$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:961"$961$"public LinkedList<SoulissCommand> getUnexecutedCommands(Context context) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:962"$962$"LinkedList<SoulissCommand> ret = new LinkedList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:963"$963$"Cursor cursor = database.query(SoulissDBOpenHelper.TABLE_COMMANDS, SoulissDBOpenHelper.ALLCOLUMNS_COMMANDS, "" ("""$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:964"$964$"+ SoulissDBOpenHelper.COLUMN_COMMAND_EXECTIME + "" is null OR "" + SoulissDBOpenHelper.COLUMN_COMMAND_TYPE + "" ="""$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:965"$965$"+ Constants.COMMAND_COMEBACK_CODE + "" OR "" + SoulissDBOpenHelper.COLUMN_COMMAND_TYPE + "" ="""$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:966"$966$"+ Constants.COMMAND_GOAWAY_CODE + "" OR "" + SoulissDBOpenHelper.COLUMN_COMMAND_TYPE + "" ="""$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:967"$967$"+ Constants.COMMAND_TRIGGERED + "") AND "" + SoulissDBOpenHelper.COLUMN_COMMAND_SCENEID + "" IS NULL"", null, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:968"$968$"null, SoulissDBOpenHelper.COLUMN_COMMAND_SCHEDTIME);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:969"$969$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:970"$970$"Log.d(Constants.TAG, ""Found unexecuted commands:"" + cursor.getCount());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:971"$971$"while (!cursor.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:972"$972$"SoulissCommandDTO comment = new SoulissCommandDTO(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:973"$973$"Log.d(Constants.TAG, ""Found command last exec at:"" + comment.getExecutedTime());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:974"$974$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:975"$975$"short node = comment.getNodeId();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:976"$976$"short slot = comment.getSlot();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:977"$977$"SoulissCommand adding = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:978"$978$"if (node > Constants.MASSIVE_NODE_ID) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:979"$979$"SoulissTypical tgt = getTypical(node, slot);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:980"$980$"//hack nodeId, Massive"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:981"$981$"tgt.getTypicalDTO().setNodeId(node);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:982"$982$"tgt.getTypicalDTO().setSlot(slot);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:983"$983$"adding = new SoulissCommand(context, comment, tgt);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:984"$984$"} else if (node > Constants.COMMAND_FAKE_SCENE) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:985"$985$"// List massivi = getUniqueTypicals(node);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:986"$986$"SoulissNode minchia = new SoulissNode(context, Constants.MASSIVE_NODE_ID);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:987"$987$"List<SoulissTypical> massivi = getUniqueTypicals(minchia);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:988"$988$"Log.d(Constants.TAG, ""Massive command found, Typical:"" + slot);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:989"$989$"for (SoulissTypical cazzuto : massivi) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:990"$990$"if (slot == cazzuto.getTypicalDTO().getTypical()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:991"$991$"adding = new SoulissCommand(context, comment, cazzuto);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:992"$992$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:993"$993$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:994"$994$"} else {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:995"$995$"//scena, ovvero id scena da eseguire = slot"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:996"$996$"adding = new SoulissCommand(context, comment);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:997"$997$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:998"$998$"assertNotNull(adding);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:999"$999$"ret.add(adding);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1000"$1000$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1001"$1001$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1002"$1002$"return ret;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1003"$1003$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1004"$1004$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1005"$1005$"* @param parent fake node, id -1"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1006"$1006$"* @return"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1007"$1007$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1008"$1008$"public List<SoulissTypical> getUniqueTypicals(SoulissNode parent) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1009"$1009$"ArrayList<SoulissTypical> comments = new ArrayList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1010"$1010$"HashSet<Short> pool = new HashSet<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1011"$1011$"Cursor cursor = database.query(SoulissDBOpenHelper.TABLE_TYPICALS, SoulissDBOpenHelper.ALLCOLUMNS_TYPICALS, null, null, null, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1012"$1012$"null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1013"$1013$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1014"$1014$"while (!cursor.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1015"$1015$"SoulissTypicalDTO dto = new SoulissTypicalDTO(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1016"$1016$"SoulissTypical newTyp = SoulissTypicalFactory.getTypical(context, dto.getTypical(), parent, dto, opts);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1017"$1017$"newTyp.setParentNode(parent);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1018"$1018$"if (parent.getNodeId() == Constants.MASSIVE_NODE_ID) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1019"$1019$"//hack dto ID, could be different if parent is massive"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1020"$1020$"newTyp.getTypicalDTO().setNodeId(parent.getNodeId());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1021"$1021$"newTyp.getTypicalDTO().setSlot(dto.getTypical());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1022"$1022$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1023"$1023$"// if (newTyp.getTypical() !="$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1024"$1024$"// Constants.Souliss_T_CurrentSensor_slave)"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1025"$1025$"if (!pool.contains(dto.getTypical())) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1026"$1026$"comments.add(newTyp);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1027"$1027$"pool.add(dto.getTypical());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1028"$1028$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1029"$1029$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1030"$1030$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1031"$1031$"// Make sure to close the cursor"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1032"$1032$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1033"$1033$"return comments;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1034"$1034$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1035"$1035$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1036"$1036$"* presuppone che il nodo esista, asserError altrimenti Light update, solo"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1037"$1037$"* data ed health, pensato per JSON"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1038"$1038$"*"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1039"$1039$"* @param nodeIN"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1040"$1040$"* @return"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1041"$1041$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1042"$1042$"@Deprecated"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1043"$1043$"public int refreshNode(SoulissNode nodeIN) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1044"$1044$"ContentValues values = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1045"$1045$"// wrap values from object"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1046"$1046$"values.put(SoulissDBOpenHelper.COLUMN_NODE_LASTMOD, Calendar.getInstance().getTime().getTime());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1047"$1047$"values.put(SoulissDBOpenHelper.COLUMN_NODE_HEALTH, nodeIN.getHealth());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1048"$1048$"long upd = database.update(SoulissDBOpenHelper.TABLE_NODES, values, SoulissDBOpenHelper.COLUMN_NODE_ID + "" = "" + nodeIN.getNodeId(),"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1049"$1049$"null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1050"$1050$"assertEquals(upd, 1);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1051"$1051$"return (int) upd;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1052"$1052$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1053"$1053$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1054"$1054$"* presuppone che il nodo esista, asserError altrimenti Light update, solo"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1055"$1055$"* data ed health, pensato per JSON. Skippa refresh se tipico vuoto"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1056"$1056$"*"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1057"$1057$"* @param nodeIN"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1058"$1058$"* @return"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1059"$1059$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1060"$1060$"@Deprecated"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1061"$1061$"public int refreshNodeAndTypicals(SoulissNode nodeIN) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1062"$1062$"ContentValues values = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1063"$1063$"// wrap values from object"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1064"$1064$"values.put(SoulissDBOpenHelper.COLUMN_NODE_LASTMOD, Calendar.getInstance().getTime().getTime());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1065"$1065$"values.put(SoulissDBOpenHelper.COLUMN_NODE_HEALTH, nodeIN.getHealth());"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1066"$1066$"long upd = database.update(SoulissDBOpenHelper.TABLE_NODES, values, SoulissDBOpenHelper.COLUMN_NODE_ID + "" = "" + nodeIN.getNodeId(),"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1067"$1067$"null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1068"$1068$"assertEquals(upd, 1);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1069"$1069$"List<SoulissTypical> tips = nodeIN.getTypicals();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1070"$1070$"for (SoulissTypical x : tips) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1071"$1071$"if (!x.isEmpty())"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1072"$1072$"x.refresh();"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1073"$1073$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1074"$1074$"return (int) upd;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1075"$1075$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1076"$1076$"public void truncateAll() {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1077"$1077$"if (soulissDatabase != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1078"$1078$"Log.w(TAG, ""DB dropCreate !!!"");"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1079"$1079$"soulissDatabase.dropCreate(database);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1080"$1080$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1081"$1081$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1082"$1082$"public int truncateImportTables() {"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1083"$1083$"int ret;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1084"$1084$"ret = database.delete(SoulissDBOpenHelper.TABLE_LOGS, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1085"$1085$"ret += database.delete(SoulissDBOpenHelper.TABLE_TYPICALS, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1086"$1086$"ret += database.delete(SoulissDBOpenHelper.TABLE_NODES, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1087"$1087$"return ret;"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1088"$1088$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\SoulissDBHelper.java:1089"$1089$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SoulissDBHelper.java"
"flawed\Paperchases.java:1"$1$"package mobi.fhdo.geoschnitzeljagd.DataManagers;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:2"$2$"import android.content.ContentValues;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:3"$3$"import android.content.Context;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:4"$4$"import android.database.Cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:5"$5$"import android.database.sqlite.SQLiteDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:6"$6$"import android.util.Log;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:7"$7$"import java.sql.Timestamp;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:8"$8$"import java.util.ArrayList;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:9"$9$"import java.util.List;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:10"$10$"import java.util.UUID;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:11"$11$"import mobi.fhdo.geoschnitzeljagd.Model.Mark;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:12"$12$"import mobi.fhdo.geoschnitzeljagd.Model.Paperchase;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:13"$13$"import mobi.fhdo.geoschnitzeljagd.Model.User;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:14"$14$"public class Paperchases extends DataManager"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:15"$15$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:16"$16$"private Marks marks;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:17"$17$"private Context contextBuffer;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:18"$18$"public Paperchases(Context ctx)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:19"$19$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:20"$20$"super(ctx);"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:21"$21$"contextBuffer = ctx;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:22"$22$"marks = new Marks(ctx);"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:23"$23$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:24"$24$"public List<Paperchase> own(User user)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:25"$25$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:26"$26$"SQLiteDatabase database = null;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:27"$27$"Cursor paperchaseCursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:28"$28$"List<Paperchase> paperchases = new ArrayList<Paperchase>();"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:29"$29$"try"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:30"$30$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:31"$31$"database = getReadableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:32"$32$"paperchaseCursor = database.rawQuery("$"count"$1$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:33"$33$"""SELECT PID, name, timestamp FROM paperchase WHERE UID=? ORDER BY name"","$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:34"$34$"new String[]{user.getId() + """"});"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:35"$35$"while (paperchaseCursor.moveToNext())"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:36"$36$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:37"$37$"Paperchase paperchase = new Paperchase(UUID.fromString(paperchaseCursor.getString(0)), user, paperchaseCursor.getString(1), Timestamp.valueOf(paperchaseCursor.getString(2)));"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:38"$38$"paperchases.add(paperchase);"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:39"$39$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:40"$40$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:41"$41$"catch (Exception e)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:42"$42$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:43"$43$"Log.w(""Exception"", e.toString());"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:44"$44$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:45"$45$"finally"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:46"$46$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:47"$47$"if (paperchaseCursor != null)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:48"$48$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:49"$49$"paperchaseCursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:50"$50$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:51"$51$"if (database != null)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:52"$52$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:53"$53$"database.close();"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:54"$54$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:55"$55$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:56"$56$"return paperchases;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:57"$57$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:58"$58$"public Paperchase Get(UUID paperchasesId)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:59"$59$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:60"$60$"if (paperchasesId == null)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:61"$61$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:62"$62$"throw new IllegalArgumentException(""Die PaperchasesId darf nicht gleich Null sein!"");"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:63"$63$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:64"$64$"SQLiteDatabase database = null;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:65"$65$"Cursor paperchaseCursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:66"$66$"Paperchase paperchase = null;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:67"$67$"Users users = new Users(contextBuffer);"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:68"$68$"users.getReadableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:69"$69$"try"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:70"$70$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:71"$71$"database = getReadableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:72"$72$"paperchaseCursor = database.rawQuery("$"count"$1$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:73"$73$"""SELECT pid, uid, name, timestamp FROM paperchase WHERE PID=?"","$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:74"$74$"new String[]{paperchasesId.toString()});"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:75"$75$"if (paperchaseCursor.getCount() != 1)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:76"$76$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:77"$77$"throw new Exception(""Paperchase mit der ID '"" + paperchasesId + ""' existiert nicht!"");"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:78"$78$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:79"$79$"while (paperchaseCursor.moveToNext())"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:80"$80$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:81"$81$"paperchase = new Paperchase(UUID.fromString(paperchaseCursor.getString(0)),"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:82"$82$"users.Get(UUID.fromString(paperchaseCursor.getString(1))),"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:83"$83$"paperchaseCursor.getString(2),"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:84"$84$"Timestamp.valueOf(paperchaseCursor.getString(3)));"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:85"$85$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:86"$86$"if(paperchase != null)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:87"$87$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:88"$88$"marks.forPaperchase(paperchase);"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:89"$89$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:90"$90$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:91"$91$"catch (Exception e)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:92"$92$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:93"$93$"Log.d(""Get Paperchase"", e.getMessage());"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:94"$94$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:95"$95$"finally"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:96"$96$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:97"$97$"if (paperchaseCursor != null)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:98"$98$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:99"$99$"paperchaseCursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:100"$100$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:101"$101$"if (database != null)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:102"$102$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:103"$103$"database.close();"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:104"$104$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:105"$105$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:106"$106$"return paperchase;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:107"$107$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:108"$108$"public List<Paperchase> search(String text)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:109"$109$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:110"$110$"SQLiteDatabase database = null;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:111"$111$"Cursor paperchaseCursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:112"$112$"List<Paperchase> paperchases = new ArrayList<Paperchase>();"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:113"$113$"try"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:114"$114$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:115"$115$"database = getReadableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:116"$116$"paperchaseCursor = database.rawQuery(""SELECT * FROM paperchase WHERE name LIKE '%"" + text.toString() + ""%'"", null);"$"count"$1$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:117"$117$"while (paperchaseCursor.moveToNext())"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:118"$118$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:119"$119$"Paperchase paperchase = new Paperchase(UUID.fromString(paperchaseCursor.getString(0)), null, paperchaseCursor.getString(2), Timestamp.valueOf(paperchaseCursor.getString(3)));"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:120"$120$"paperchases.add(paperchase);"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:121"$121$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:122"$122$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:123"$123$"catch (Exception e)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:124"$124$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:125"$125$"Log.w(""Exception"", e.toString());"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:126"$126$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:127"$127$"finally"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:128"$128$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:129"$129$"if (paperchaseCursor != null)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:130"$130$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:131"$131$"paperchaseCursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:132"$132$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:133"$133$"if (database != null)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:134"$134$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:135"$135$"database.close();"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:136"$136$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:137"$137$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:138"$138$"return paperchases;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:139"$139$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:140"$140$"public List<Paperchase> All()"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:141"$141$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:142"$142$"SQLiteDatabase database = null;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:143"$143$"Cursor paperchaseCursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:144"$144$"Cursor paperchaseMarksCursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:145"$145$"List<Paperchase> paperchases = new ArrayList<Paperchase>();"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:146"$146$"Users users = null;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:147"$147$"try"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:148"$148$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:149"$149$"database = getReadableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:150"$150$"paperchaseCursor = database.rawQuery(""SELECT * FROM paperchase"", null);"$"count"$1$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:151"$151$"while (paperchaseCursor.moveToNext())"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:152"$152$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:153"$153$"Paperchase paperchase = new Paperchase(UUID.fromString(paperchaseCursor.getString(0)), null, paperchaseCursor.getString(2), Timestamp.valueOf(paperchaseCursor.getString(3)));"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:154"$154$"paperchaseMarksCursor = database.rawQuery(""SELECT mid,pid,latitude, longitude, hint, sequence from mark where pid=? order by sequence"","$"count"$1$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:155"$155$"new String[]{paperchase.getId() + """"});"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:156"$156$"while (paperchaseMarksCursor.moveToNext())"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:157"$157$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:158"$158$"Mark mark = new Mark(UUID.fromString(paperchaseMarksCursor.getString(0)), UUID.fromString(paperchaseMarksCursor.getString(1)), paperchaseMarksCursor.getDouble(2), paperchaseMarksCursor.getDouble(3), paperchaseMarksCursor.getString(4), paperchaseMarksCursor.getInt(5));"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:159"$159$"paperchase.addMark(mark);"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:160"$160$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:161"$161$"paperchases.add(paperchase);"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:162"$162$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:163"$163$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:164"$164$"catch (Exception e)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:165"$165$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:166"$166$"Log.w(""Exception"", e.toString());"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:167"$167$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:168"$168$"finally"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:169"$169$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:170"$170$"if (paperchaseCursor != null)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:171"$171$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:172"$172$"paperchaseCursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:173"$173$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:174"$174$"if (paperchaseMarksCursor != null)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:175"$175$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:176"$176$"paperchaseMarksCursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:177"$177$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:178"$178$"if (database != null)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:179"$179$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:180"$180$"database.close();"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:181"$181$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:182"$182$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:183"$183$"return paperchases;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:184"$184$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:185"$185$"public Paperchase CreateOrUpdate(Paperchase paperchase)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:186"$186$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:187"$187$"SQLiteDatabase database = null;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:188"$188$"Cursor paperchaseCursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:189"$189$"try"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:190"$190$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:191"$191$"database = getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:192"$192$"paperchaseCursor = database.rawQuery("$"count"$1$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:193"$193$"""SELECT PID FROM paperchase WHERE PID=?"","$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:194"$194$"new String[]{paperchase.getId().toString()});"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:195"$195$"// Wenn es noch keine paperchase gibt"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:196"$196$"if (paperchaseCursor.getCount() != 1)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:197"$197$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:198"$198$"ContentValues values = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:199"$199$"values.put(""pid"", paperchase.getId().toString());"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:200"$200$"values.put(""uid"", paperchase.getUser().getId().toString());"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:201"$201$"values.put(""name"", paperchase.getName());"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:202"$202$"database.insert(""paperchase"", null, values);"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:203"$203$"for (Mark mark : paperchase.getMarks())"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:204"$204$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:205"$205$"marks.CreateOrUpdate(mark);"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:206"$206$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:207"$207$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:208"$208$"else"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:209"$209$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:210"$210$"String sql = ""Update "" + _SCHNITZELJAGD +"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:211"$211$""" set "" + _UID + "" = '"" + paperchase.getUser().getId().toString() + ""',"""$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:212"$212$"+ _NAME + "" = '"" + paperchase.getName() + ""',"""$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:213"$213$"+ _TIMESTAMP + "" = '"" + paperchase.getTimestamp() + ""'"";"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:214"$214$"database.execSQL(sql);"$"count"$1$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:215"$215$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:216"$216$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:217"$217$"catch (Exception e)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:218"$218$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:219"$219$"Log.w(""Exception"", e.toString());"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:220"$220$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:221"$221$"finally"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:222"$222$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:223"$223$"if (database != null)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:224"$224$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:225"$225$"database.close();"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:226"$226$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:227"$227$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:228"$228$"return paperchase;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:229"$229$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:230"$230$"public Paperchase update(Paperchase paperchase)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:231"$231$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:232"$232$"SQLiteDatabase database = null;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:233"$233$"try"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:234"$234$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:235"$235$"database = getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:236"$236$"ContentValues values = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:237"$237$"values.put(""name"", paperchase.getName());"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:238"$238$"database.update(""paperchase"", values, ""pid = ?"", new String[]{paperchase.getId() + """"});"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:239"$239$"marks.removeForPaperchase(paperchase);"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:240"$240$"for (Mark mark : paperchase.getMarks())"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:241"$241$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:242"$242$"marks.CreateOrUpdate(mark);"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:243"$243$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:244"$244$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:245"$245$"catch (Exception e)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:246"$246$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:247"$247$"Log.w(""Exception"", e.toString());"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:248"$248$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:249"$249$"finally"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:250"$250$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:251"$251$"if (database != null)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:252"$252$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:253"$253$"database.close();"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:254"$254$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:255"$255$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:256"$256$"return paperchase;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:257"$257$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:258"$258$"public void remove(Paperchase paperchase)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:259"$259$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:260"$260$"SQLiteDatabase database = null;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:261"$261$"try"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:262"$262$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:263"$263$"database = getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:264"$264$"database.delete(""paperchase"", ""pid = ?"", new String[]{paperchase.getId() + """"});"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:265"$265$"marks.removeForPaperchase(paperchase);"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:266"$266$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:267"$267$"catch (Exception e)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:268"$268$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:269"$269$"Log.w(""Exception"", e.toString());"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:270"$270$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:271"$271$"finally"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:272"$272$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:273"$273$"if (database != null)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:274"$274$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:275"$275$"database.close();"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:276"$276$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:277"$277$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:278"$278$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:279"$279$"public boolean DeleteAllPaperchases() throws Exception"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:280"$280$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:281"$281$"SQLiteDatabase database = null;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:282"$282$"try"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:283"$283$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:284"$284$"database = getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:285"$285$"String sql = ""Delete From "" + _SCHNITZELJAGD;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:286"$286$"database.execSQL(sql);"$"count"$1$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:287"$287$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:288"$288$"finally"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:289"$289$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:290"$290$"if (database != null)"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:291"$291$"{"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:292"$292$"database.close();"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:293"$293$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:294"$294$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:295"$295$"return true;"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:296"$296$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"flawed\Paperchases.java:297"$297$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Paperchases.java"
"secured\TaskResourceUsageRepository.java:1"$1$"/**"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:2"$2$"*     Copyright (C) 2013-2014  the original author or authors."$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:3"$3$"*"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:4"$4$"*     This program is free software: you can redistribute it and/or modify"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:5"$5$"*     it under the terms of the GNU General Public License as published by"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:6"$6$"*     the Free Software Foundation, either version 3 of the License,"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:7"$7$"*     any later version."$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:8"$8$"*"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:9"$9$"*     This program is distributed in the hope that it will be useful,"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:10"$10$"*     but WITHOUT ANY WARRANTY; without even the implied warranty of"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:11"$11$"*     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:12"$12$"*     GNU General Public License for more details."$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:13"$13$"*"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:14"$14$"*     You should have received a copy of the GNU General Public License"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:15"$15$"*     along with this program.  If not, see <http://www.gnu.org/licenses/>"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:16"$16$"*/"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:17"$17$"package org.excalibur.core.execution.domain.repository;"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:18"$18$"import java.io.Closeable;"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:19"$19$"import java.sql.ResultSet;"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:20"$20$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:21"$21$"import java.util.List;"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:22"$22$"import org.excalibur.core.execution.domain.ResourceType;"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:23"$23$"import org.excalibur.core.execution.domain.TaskResourceUsage;"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:24"$24$"import org.excalibur.core.execution.domain.repository.TaskResourceUsageRepository.TaskResourceUsageRowMapper;"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:25"$25$"import org.excalibur.core.repository.bind.BindBean;"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:26"$26$"import org.skife.jdbi.v2.StatementContext;"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:27"$27$"import org.skife.jdbi.v2.sqlobject.Bind;"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:28"$28$"import org.skife.jdbi.v2.sqlobject.GetGeneratedKeys;"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:29"$29$"import org.skife.jdbi.v2.sqlobject.SqlQuery;"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:30"$30$"import org.skife.jdbi.v2.sqlobject.SqlUpdate;"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:31"$31$"import org.skife.jdbi.v2.sqlobject.customizers.RegisterMapper;"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:32"$32$"import org.skife.jdbi.v2.tweak.ResultSetMapper;"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:33"$33$"@RegisterMapper(TaskResourceUsageRowMapper.class)"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:34"$34$"public interface TaskResourceUsageRepository extends Closeable "$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:35"$35$"{"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:36"$36$"@SqlUpdate(""INSERT INTO task_resource_usage (task_id, resource_type_id, pid, datetime, value) \n "" + "$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:37"$37$"""VALUES ((SELECT id FROM task WHERE lower(uuid) = lower(:taskId) ), :resourceType.id, :pid, :datetime, :value)"")"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:38"$38$"@GetGeneratedKeys"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:39"$39$"Integer insert(@BindBean TaskResourceUsage data);"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:40"$40$"@SqlUpdate(""INSERT INTO task_resource_usage (task_id, resource_type_id, pid, datetime, value) \n "" + "$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:41"$41$"""VALUES ((SELECT id FROM task WHERE lower(uuid) = lower(:taskId) ), :resourceType.id, :pid, :datetime, :value)"")"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:42"$42$"void insert(@BindBean Iterable<TaskResourceUsage> data);"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:43"$43$"@SqlUpdate(""DELETE FROM task_resource_usage WHERE task_id = (SELECT id FROM task t WHERE lower(t.uuid) = lower(:taskId))"")"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:44"$44$"void deleteAllOfTask(@Bind(""taskId"") String taskId);"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:45"$45$"@SqlQuery(""SELECT r.id, t.uuid as task_id, resource_type_id, pid, datetime, value \n"" + "$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:46"$46$""" FROM task_resource_usage r\n"" +"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:47"$47$""" JOIN task t ON t.id = r.task_id \n"" +"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:48"$48$""" WHERE lower(t.uuid) = lower(:taskId)\n"" + "$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:49"$49$""" ORDER BY resource_type_id, datetime"") "$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:50"$50$"List<TaskResourceUsage> getAllOfTask(@Bind(""taskId"") String id);"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:51"$51$"@SqlQuery(""SELECT r.id, t.uuid as task_id, resource_type_id, pid, datetime, value \n"" + "$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:52"$52$""" FROM task_resource_usage r\n"" +"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:53"$53$""" JOIN task t ON t.id = r.task_id \n"" +"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:54"$54$""" WHERE lower(t.uuid) = lower(:taskId) AND r.resource_type_id = :resourceType\n"" + "$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:55"$55$""" ORDER BY datetime"")"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:56"$56$"List<TaskResourceUsage> getAllTypeOfTask(@Bind(""taskId"") String taskId, @Bind(""resourceType"") Integer resourceType);"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:57"$57$"class TaskResourceUsageRowMapper implements ResultSetMapper<TaskResourceUsage> "$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:58"$58$"{"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:59"$59$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:60"$60$"public TaskResourceUsage map(int index, ResultSet r, StatementContext ctx) throws SQLException "$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:61"$61$"{"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:62"$62$"return new TaskResourceUsage()"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:63"$63$".setDatetime(r.getTimestamp(""datetime""))"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:64"$64$".setId(r.getInt(""id""))"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:65"$65$".setPid(r.getInt(""pid""))"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:66"$66$".setResourceType(ResourceType.valueOf(r.getInt(""resource_type_id"")))"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:67"$67$".setTaskId(r.getString(""task_id""))"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:68"$68$".setValue(r.getBigDecimal(""value""));"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:69"$69$"}"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:70"$70$"}"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\TaskResourceUsageRepository.java:71"$71$"}"$"ignore"$0$"..\sql-dataset\test\secured\TaskResourceUsageRepository.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:1"$1$"package org.sahsu.rif.dataloader.datastorage.ms;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:2"$2$"import java.sql.Connection;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:3"$3$"import org.sahsu.rif.dataloader.concepts.DataSetFieldConfiguration;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:4"$4$"import org.sahsu.rif.generic.system.RIFServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:5"$5$"/**"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:6"$6$"* Performs a number of utility operations that involve getting various "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:7"$7$"* kinds of information about the schema.  For example, it will retrieve"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:8"$8$"* the names of functions used for cleaning or validation.  These are "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:9"$9$"* important for when users are able to define their own data types and"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:10"$10$"* specify database functions to do various activities.  It should also"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:11"$11$"* have a method to retrieve a frequency breakdown of values so that "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:12"$12$"* RIF managers may check whether they have designed cleaning and validation"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:13"$13$"* rules to anticipate all the different types of values thay have in an"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:14"$14$"* imported data set."$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:15"$15$"*"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:16"$16$"* <hr>"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:17"$17$"* Copyright 2017 Imperial College London, developed by the Small Area"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:18"$18$"* Health Statistics Unit. "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:19"$19$"*"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:20"$20$"* <pre> "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:21"$21$"* This file is part of the Rapid Inquiry Facility (RIF) project."$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:22"$22$"* RIF is free software: you can redistribute it and/or modify"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:23"$23$"* it under the terms of the GNU Lesser General Public License as published by"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:24"$24$"* the Free Software Foundation, either version 3 of the License, or"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:25"$25$"* (at your option) any later version."$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:26"$26$"* RIF is distributed in the hope that it will be useful,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:27"$27$"* but WITHOUT ANY WARRANTY; without even the implied warranty of"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:28"$28$"* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:29"$29$"* GNU Lesser General Public License for more details."$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:30"$30$"*"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:31"$31$"* You should have received a copy of the GNU Lesser General Public License"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:32"$32$"* along with RIF.  If not, see <http://www.gnu.org/licenses/>."$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:33"$33$"* </pre>"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:34"$34$"*"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:35"$35$"* <hr>"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:36"$36$"* Kevin Garwood"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:37"$37$"* @author kgarwood"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:38"$38$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:39"$39$"/*"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:40"$40$"* Code Road Map:"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:41"$41$"* --------------"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:42"$42$"* Code is organised into the following sections.  Wherever possible, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:43"$43$"* methods are classified based on an order of precedence described in "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:44"$44$"* parentheses (..).  For example, if you're trying to find a method "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:45"$45$"* 'getName(...)' that is both an interface method and an accessor "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:46"$46$"* method, the order tells you it should appear under interface."$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:47"$47$"* "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:48"$48$"* Order of "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:49"$49$"* Precedence     Section"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:50"$50$"* ==========     ======"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:51"$51$"* (1)            Section Constants"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:52"$52$"* (2)            Section Properties"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:53"$53$"* (3)            Section Construction"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:54"$54$"* (7)            Section Accessors and Mutators"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:55"$55$"* (6)            Section Errors and Validation"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:56"$56$"* (5)            Section Interfaces"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:57"$57$"* (4)            Section Override"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:58"$58$"*"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:59"$59$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:60"$60$"public class MSSQLDatabaseSchemaInformationManager {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:61"$61$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:62"$62$"// Section Constants"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:63"$63$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:64"$64$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:65"$65$"// Section Properties"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:66"$66$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:67"$67$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:68"$68$"// Section Construction"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:69"$69$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:70"$70$"public MSSQLDatabaseSchemaInformationManager() {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:71"$71$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:72"$72$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:73"$73$"// Section Accessors and Mutators"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:74"$74$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:75"$75$"public String[][] getVarianceInFieldData("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:76"$76$"final Connection connection,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:77"$77$"final DataSetFieldConfiguration _dataSetFieldConfiguration)"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:78"$78$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:79"$79$"/*		"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:80"$80$"//Defensively copy parameters and guard against blocked rifManagers"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:81"$81$"User rifManager = User.createCopy(_rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:82"$82$"if (sqlConnectionManager.isUserBlocked(rifManager) == true) {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:83"$83$"return null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:84"$84$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:85"$85$"DataSetConfiguration dataSetConfiguration"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:86"$86$"= DataSetConfiguration.createCopy(_dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:87"$87$"DataSetFieldConfiguration dataSetFieldConfiguration"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:88"$88$"=dataSetConfiguration.getFieldHavingConvertFieldName(fieldName);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:89"$89$"String[][] results = new String[0][0];"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:90"$90$"try {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:91"$91$"//Check for empty parameters"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:92"$92$"FieldValidationUtility fieldValidationUtility"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:93"$93$"= new FieldValidationUtility();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:94"$94$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:95"$95$"""getVarianceInFieldData"","$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:96"$96$"""rifManager"","$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:97"$97$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:98"$98$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:99"$99$"""getVarianceInFieldData"","$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:100"$100$"""dataSetFieldConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:101"$101$"dataSetFieldConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:102"$102$"//Check for security violations"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:103"$103$"validateUser(rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:104"$104$"String coreDataSetName"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:105"$105$"= dataSetFieldConfiguration.getCoreFieldName()"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:106"$106$"String loadTableName"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:107"$107$"= RIFTemporaryTablePrefixes.LOAD.getTableName(coreDataSetName);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:108"$108$"String fieldOfInterest"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:109"$109$"= tableFieldCleaningConfiguration.getLoadTableFieldName();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:110"$110$"//Audit attempt to do operation"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:111"$111$"RIFLogger rifLogger = RIFLogger.getLogger();				"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:112"$112$"String auditTrailMessage"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:113"$113$"= RIFDataLoaderToolMessages.getMessage(""logging.getVarianceInFieldData"","$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:114"$114$"rifManager.getUserID(),"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:115"$115$"rifManager.getIPAddress(),"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:116"$116$"loadTableName,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:117"$117$"fieldOfInterest);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:118"$118$"rifLogger.info("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:119"$119$"getClass(),"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:120"$120$"auditTrailMessage);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:121"$121$"Connection connection "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:122"$122$"= sqlConnectionManager.assignPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:123"$123$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:124"$124$"results"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:125"$125$"= cleanWorkflowManager.getVarianceInFieldData("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:126"$126$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:127"$127$"tableFieldCleaningConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:128"$128$"sqlConnectionManager.reclaimPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:129"$129$"rifManager, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:130"$130$"connection);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:131"$131$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:132"$132$"catch(RIFServiceException rifServiceException) {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:133"$133$"//Audit failure of operation"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:134"$134$"logException("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:135"$135$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:136"$136$"""cleaningDetectedErrorValue"","$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:137"$137$"rifServiceException);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:138"$138$"}		"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:139"$139$"return results;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:140"$140$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:141"$141$"return null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:142"$142$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:143"$143$"public String getFunctionDescription("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:144"$144$"final Connection connection, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:145"$145$"final String functionName) "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:146"$146$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:147"$147$"return ""Description of "" + functionName;		"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:148"$148$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:149"$149$"public String[] getCleaningFunctionNames("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:150"$150$"final Connection connection)"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:151"$151$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:152"$152$"String[] validationFunctionNames = new String[4];"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:153"$153$"validationFunctionNames[0] = ""clean_age"";"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:154"$154$"validationFunctionNames[1] = ""clean_date"";"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:155"$155$"validationFunctionNames[2] = ""clean_uk_postal_code"";"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:156"$156$"validationFunctionNames[3] = ""clean_year"";"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:157"$157$"return validationFunctionNames;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:158"$158$"//return getDatabaseFunctionNames(_rifManager, ""^clean.*"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:159"$159$"}	"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:160"$160$"public String[] getValidationFunctionNames("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:161"$161$"final Connection connection) "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:162"$162$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:163"$163$"//return getDatabaseFunctionNames(_rifManager, ""^is_valid.*"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:164"$164$"//@TODO: make this come from the database"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:165"$165$"String[] validationFunctionNames = new String[4];"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:166"$166$"validationFunctionNames[0] = ""is_valid_uk_postal_code"";"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:167"$167$"//validationFunctionNames[1] = ""is_valid_icd_code"";"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:168"$168$"//validationFunctionNames[2] = ""is_valid_sex"";"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:169"$169$"//validationFunctionNames[3] = ""is_valid_age"";"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:170"$170$"return validationFunctionNames;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:171"$171$"}	"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:172"$172$"/*	"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:173"$173$"public String[] getDatabaseFunctionNames("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:174"$174$"final User _rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:175"$175$"final String functionNamePattern) "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:176"$176$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:177"$177$"//Defensively copy parameters and guard against blocked rifManagers"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:178"$178$"User rifManager = User.createCopy(_rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:179"$179$"if (sqlConnectionManager == null) {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:180"$180$"System.out.println(""getDBFunctionNames 1"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:181"$181$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:182"$182$"else if (rifManager == null) {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:183"$183$"System.out.println(""getDBFunctionNames 2"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:184"$184$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:185"$185$"if (sqlConnectionManager.isUserBlocked(rifManager) == true) {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:186"$186$"return new String[0];"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:187"$187$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:188"$188$"ArrayList<String> results = new ArrayList<String>();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:189"$189$"ResultSet resultSet = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:190"$190$"PreparedStatement statement = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:191"$191$"try {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:192"$192$"SQLGeneralQueryFormatter queryFormatter "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:193"$193$"= new SQLGeneralQueryFormatter();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:194"$194$"queryFormatter.addQueryLine(0, ""SELECT"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:195"$195$"queryFormatter.addQueryLine(1, ""pg_proc.proname AS function_name"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:196"$196$"queryFormatter.addQueryLine(0, ""FROM"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:197"$197$"queryFormatter.addQueryLine(1, ""pg_proc"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:198"$198$"queryFormatter.addQueryLine(0, ""INNER JOIN pg_namespace ON "");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:199"$199$"queryFormatter.addQueryLine(1, ""pg_proc.pronamespace = pg_namespace.oid"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:200"$200$"queryFormatter.addQueryLine(0, ""WHERE"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:201"$201$"queryFormatter.addQueryPhrase(1, ""pg_namespace = 'public' AND "");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:202"$202$"queryFormatter.addQueryPhrase(""pg_proc.proname ~ ? "");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:203"$203$"queryFormatter.padAndFinishLine();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:204"$204$"queryFormatter.addQueryLine(0, ""ORDER BY"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:205"$205$"queryFormatter.addQueryLine(1, ""pg_proc.proname"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:206"$206$"Connection connection "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:207"$207$"= sqlConnectionManager.assignPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:208"$208$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:209"$209$"System.out.println(""ADLS queryFormatter==""+queryFormatter.generateQuery()+""=="");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:210"$210$"statement = connection.prepareStatement(queryFormatter.generateQuery());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:211"$211$"String functionFilterExpression = ""^clean.*"";"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:212"$212$"statement.setString(1, functionFilterExpression);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:213"$213$"resultSet = statement.executeQuery();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:214"$214$"while (resultSet.next()) {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:215"$215$"results.add(resultSet.getString(1));"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:216"$216$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:217"$217$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:218"$218$"catch(SQLException sqlException) {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:219"$219$"sqlException.printStackTrace(System.out);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:220"$220$"SQLQueryUtility.close(resultSet);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:221"$221$"SQLQueryUtility.close(statement);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:222"$222$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:223"$223$"return results.toArray(new String[0]);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:224"$224$"//@TODO: make this come from the database"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:225"$225$"String[] cleaningFunctionNames = new String[5];"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:226"$226$"cleaningFunctionNames[0] = ""clean_uk_postal_code"";"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:227"$227$"cleaningFunctionNames[1] = ""clean_icd_code"";"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:228"$228$"cleaningFunctionNames[2] = ""clean_sex"";"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:229"$229$"cleaningFunctionNames[3] = ""clean_age"";"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:230"$230$"cleaningFunctionNames[4] = ""clean_year"";"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:231"$231$"return cleaningFunctionNames;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:232"$232$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:233"$233$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:234"$234$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:235"$235$"// Section Errors and Validation"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:236"$236$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:237"$237$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:238"$238$"// Section Interfaces"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:239"$239$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:240"$240$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:241"$241$"// Section Override"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:242"$242$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MSSQLDatabaseSchemaInformationManager.java:243"$243$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLDatabaseSchemaInformationManager.java"
"secured\MapsFragment.java:1"$1$"package com.pgnewell.cdc.circdacite;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:2"$2$"import android.annotation.SuppressLint;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:3"$3$"import android.app.AlertDialog;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:4"$4$"import android.app.DialogFragment;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:5"$5$"import android.content.DialogInterface;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:6"$6$"import android.content.Intent;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:7"$7$"import android.database.Cursor;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:8"$8$"import android.graphics.Color;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:9"$9$"import android.location.Criteria;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:10"$10$"import android.location.Location;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:11"$11$"import android.location.LocationManager;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:12"$12$"import android.os.Build;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:13"$13$"import android.support.v4.app.FragmentActivity;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:14"$14$"import android.os.Bundle;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:15"$15$"import android.text.SpannableString;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:16"$16$"import android.text.style.ForegroundColorSpan;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:17"$17$"import android.view.View;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:18"$18$"import android.view.ViewTreeObserver;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:19"$19$"import android.widget.Button;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:20"$20$"import android.widget.EditText;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:21"$21$"import android.widget.ImageView;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:22"$22$"import android.widget.LinearLayout;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:23"$23$"import android.widget.TextView;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:24"$24$"import android.widget.Toast;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:25"$25$"import com.google.android.gms.maps.CameraUpdateFactory;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:26"$26$"import com.google.android.gms.maps.GoogleMap;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:27"$27$"import com.google.android.gms.maps.GoogleMap.InfoWindowAdapter;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:28"$28$"import com.google.android.gms.maps.OnMapReadyCallback;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:29"$29$"import com.google.android.gms.maps.SupportMapFragment;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:30"$30$"import com.google.android.gms.maps.model.BitmapDescriptor;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:31"$31$"import com.google.android.gms.maps.model.BitmapDescriptorFactory;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:32"$32$"import com.google.android.gms.maps.model.LatLng;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:33"$33$"import com.google.android.gms.maps.model.LatLngBounds;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:34"$34$"import com.google.android.gms.maps.model.Marker;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:35"$35$"import com.google.android.gms.maps.model.MarkerOptions;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:36"$36$"import com.google.android.gms.maps.model.PolylineOptions;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:37"$37$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:38"$38$"import java.util.List;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:39"$39$"import android.os.Handler;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:40"$40$"public class MapsFragment extends FragmentActivity implements"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:41"$41$"GoogleMap.OnMarkerClickListener,"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:42"$42$"GoogleMap.OnInfoWindowClickListener,"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:43"$43$"GoogleMap.OnMarkerDragListener,"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:44"$44$"OnMapReadyCallback,"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:45"$45$"SaveLocationFragment.SaveLocationDialogListener,"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:46"$46$"MyResultReceiver.Receiver {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:47"$47$"private static final LatLng KENDALL = new LatLng(42.3628735,-71.0900971);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:48"$48$"private static enum PathCommands {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:49"$49$"ADD_NEW_PATH,"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:50"$50$"ADD_TO_PATH,"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:51"$51$"REMOVE_FROM_PATH,"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:52"$52$"REMOVE_LOCATION"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:53"$53$"};"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:54"$54$"private GoogleMap mMap; // Might be null if Google Play services APK is not available."$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:55"$55$"private LatLngBounds mBounds;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:56"$56$"private Marker mLastSelectedMarker;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:57"$57$"private TextView mTopText;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:58"$58$"private LocationsDbAdapter dbHelper;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:59"$59$"private Path mCurrentPath;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:60"$60$"LinearLayout pathFrame;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:61"$61$"EditText mCurrentPathName;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:62"$62$"Button pathSaveButton;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:63"$63$"private BitmapDescriptor mStartMarker;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:64"$64$"MyResultReceiver mReceiver;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:65"$65$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:66"$66$"protected void onCreate(Bundle savedInstanceState) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:67"$67$"super.onCreate(savedInstanceState);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:68"$68$"setContentView(R.layout.activity_maps);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:69"$69$"mTopText = (TextView) findViewById(R.id.top_text);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:70"$70$"pathFrame = (LinearLayout)"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:71"$71$"this.findViewById(R.id.path_frame);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:72"$72$"mCurrentPathName = (EditText)"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:73"$73$"this.findViewById(R.id.new_path_name);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:74"$74$"mStartMarker ="$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:75"$75$"BitmapDescriptorFactory.fromResource(R.drawable.start_marker);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:76"$76$"pathSaveButton = (Button) MapsFragment.this.findViewById(R.id.path_save_button);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:77"$77$"mReceiver = new MyResultReceiver(new Handler());"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:78"$78$"mReceiver.setReceiver(this);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:79"$79$"//        final Intent intent = new Intent(Intent.ACTION_SYNC, null, this, QueryService.class);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:80"$80$"//        intent.putExtra(""receiver"", mReceiver);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:81"$81$"//        intent.putExtra(""command"", ""query"");"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:82"$82$"//        startService(intent);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:83"$83$"dbHelper = new LocationsDbAdapter(this);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:84"$84$"try {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:85"$85$"dbHelper.open(true);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:86"$86$"} catch (SQLException e) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:87"$87$"e.printStackTrace();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:88"$88$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:89"$89$"setUpMapIfNeeded();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:90"$90$"SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.map);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:91"$91$"mapFragment.getMapAsync( this );"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:92"$92$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:93"$93$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:94"$94$"protected void onResume() {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:95"$95$"super.onResume();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:96"$96$"setUpMapIfNeeded();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:97"$97$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:98"$98$"class CustomInfoWindowAdapter implements InfoWindowAdapter {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:99"$99$"// These a both viewgroups containing an ImageView with id ""badge"" and two TextViews with id"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:100"$100$"// ""title"" and ""snippet""."$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:101"$101$"private final View mWindow;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:102"$102$"private final View mContents;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:103"$103$"CustomInfoWindowAdapter() {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:104"$104$"mWindow = getLayoutInflater().inflate(R.layout.location_info_window, null);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:105"$105$"mContents = getLayoutInflater().inflate(R.layout.location_info_contents, null);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:106"$106$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:107"$107$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:108"$108$"public View getInfoWindow(Marker marker) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:109"$109$"render(marker, mWindow);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:110"$110$"return mWindow;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:111"$111$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:112"$112$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:113"$113$"public View getInfoContents(Marker marker) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:114"$114$"render(marker, mContents);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:115"$115$"return mContents;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:116"$116$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:117"$117$"private void render(Marker marker, View view) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:118"$118$"int badge = R.drawable.ic_launcher;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:119"$119$"((ImageView) view.findViewById(R.id.loc_icon)).setImageResource(badge);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:120"$120$"String title = marker.getTitle().toString();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:121"$121$"TextView titleUi = ((TextView) view.findViewById(R.id.loc_edit_name));"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:122"$122$"if (title != null) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:123"$123$"// Spannable string allows us to edit the formatting of the text."$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:124"$124$"SpannableString titleText = new SpannableString(title);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:125"$125$"titleText.setSpan(new ForegroundColorSpan(Color.RED), 0, titleText.length(), 0);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:126"$126$"titleUi.setText(titleText);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:127"$127$"} else {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:128"$128$"titleUi.setText("""");"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:129"$129$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:130"$130$"String snippet = marker.getSnippet();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:131"$131$"TextView snippetUi = ((TextView) view.findViewById(R.id.snippet));"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:132"$132$"snippetUi.setText(snippet);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:133"$133$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:134"$134$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:135"$135$"/**"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:136"$136$"* Sets up the map if it is possible to do so (i.e., the Google Play services APK is correctly"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:137"$137$"* installed) and the map has not already been instantiated.. This will ensure that we only ever"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:138"$138$"* call {@link #setUpMap()} once when {@link #mMap} is not null."$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:139"$139$"* <p/>"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:140"$140$"* If it isn't installed {@link SupportMapFragment} (and"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:141"$141$"* {@link com.google.android.gms.maps.MapView MapView}) will show a prompt for the user to"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:142"$142$"* install/update the Google Play services APK on their device."$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:143"$143$"* <p/>"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:144"$144$"* A user can return to this FragmentActivity after following the prompt and correctly"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:145"$145$"* installing/updating/enabling the Google Play services. Since the FragmentActivity may not"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:146"$146$"* have been completely destroyed during this process (it is likely that it would only be"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:147"$147$"* stopped or paused), {@link #onCreate(Bundle)} may not be called again so we should call this"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:148"$148$"* method in {@link #onResume()} to guarantee that it will be called."$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:149"$149$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:150"$150$"private void setUpMapIfNeeded() {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:151"$151$"// Do a null check to confirm that we have not already instantiated the map."$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:152"$152$"if (mMap == null) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:153"$153$"// Try to obtain the map from the SupportMapFragment."$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:154"$154$"mMap = ((SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.map))"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:155"$155$".getMap();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:156"$156$"// Check if we were successful in obtaining the map."$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:157"$157$"if (mMap != null) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:158"$158$"setUpMap();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:159"$159$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:160"$160$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:161"$161$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:162"$162$"/**"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:163"$163$"* This is where we can add markers or lines, add listeners or move the camera. In this case, we"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:164"$164$"* just add a marker near Africa."$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:165"$165$"* <p/>"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:166"$166$"* This should only be called once and when we are sure that {@link #mMap} is not null."$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:167"$167$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:168"$168$"private void setUpMap() {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:169"$169$"LatLng ll = KENDALL;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:170"$170$"mMap.setMyLocationEnabled(true);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:171"$171$"LocationManager lm = (LocationManager) getSystemService(LOCATION_SERVICE);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:172"$172$"Criteria c = new Criteria();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:173"$173$"String p = lm.getBestProvider(c, true);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:174"$174$"Location loc = lm.getLastKnownLocation(p);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:175"$175$"if(loc!=null) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:176"$176$"ll = new LatLng(loc.getLatitude(), loc.getLongitude());"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:177"$177$"mMap.addMarker(new MarkerOptions().position(ll).title(""You're here""));"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:178"$178$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:179"$179$"mMap.setOnMapClickListener(new GoogleMap.OnMapClickListener() {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:180"$180$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:181"$181$"public void onMapClick(LatLng position) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:182"$182$"//mMap.addMarker(new MarkerOptions().position(position).title(""New location""));"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:183"$183$"DialogFragment dialog = SaveLocationFragment.newInstance(position);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:184"$184$"dialog.show(getFragmentManager(), ""SaveLocation"");"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:185"$185$"// mMap.setOnMarkerDragListener( );"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:186"$186$"//path.add(new PathLocation(position, current_type, """"));"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:187"$187$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:188"$188$"});"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:189"$189$"mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(ll, 15));"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:190"$190$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:191"$191$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:192"$192$"public void onMapReady(GoogleMap map) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:193"$193$"mMap = map;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:194"$194$"// Hide the zoom controls as the button panel will cover it."$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:195"$195$"mMap.getUiSettings().setZoomControlsEnabled(false);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:196"$196$"// Add lots of markers to the map."$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:197"$197$"addMarkersToMap();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:198"$198$"// Setting an info window adapter allows us to change the both the contents and look of the"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:199"$199$"// info window."$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:200"$200$"mMap.setInfoWindowAdapter(new CustomInfoWindowAdapter());"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:201"$201$"// Set listeners for marker events.  See the bottom of this class for their behavior."$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:202"$202$"mMap.setOnMarkerClickListener(this);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:203"$203$"mMap.setOnInfoWindowClickListener(this);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:204"$204$"mMap.setOnMarkerDragListener(this);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:205"$205$"// Override the default content description on the view, for accessibility mode."$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:206"$206$"// Ideally this string would be localised."$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:207"$207$"map.setContentDescription(""Map with lots of markers."");"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:208"$208$"// Pan to see all markers in view."$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:209"$209$"// Cannot zoom to bounds until the map has a size."$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:210"$210$"final View mapView = getSupportFragmentManager().findFragmentById(R.id.map).getView();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:211"$211$"if (mapView.getViewTreeObserver().isAlive()) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:212"$212$"mapView.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener() {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:213"$213$"@SuppressWarnings(""deprecation"") // We use the new method when supported"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:214"$214$"@SuppressLint(""NewApi"") // We check which build version we are using."$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:215"$215$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:216"$216$"public void onGlobalLayout() {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:217"$217$"if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:218"$218$"mapView.getViewTreeObserver().removeGlobalOnLayoutListener(this);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:219"$219$"} else {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:220"$220$"mapView.getViewTreeObserver().removeOnGlobalLayoutListener(this);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:221"$221$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:222"$222$"mMap.moveCamera(CameraUpdateFactory.newLatLngBounds(mBounds, 50));"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:223"$223$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:224"$224$"});"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:225"$225$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:226"$226$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:227"$227$"private void addMarkersToMap() {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:228"$228$"Cursor cursor = dbHelper.fetchAllLocations();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:229"$229$"LatLngBounds.Builder boundsBuilder = new LatLngBounds.Builder();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:230"$230$"while (!cursor.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:231"$231$"CDCLocation loc = dbHelper.fetchNextLocation(cursor);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:232"$232$"mMap.addMarker(new MarkerOptions()"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:233"$233$".position(loc.getLatLng())"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:234"$234$".title(loc.getName())"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:235"$235$".snippet(loc.getAddress())"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:236"$236$".draggable(true)"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:237"$237$");"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:238"$238$"boundsBuilder.include(loc.getLatLng());"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:239"$239$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:240"$240$"mBounds = boundsBuilder.build();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:241"$241$"// Uses a colored icon."$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:242"$242$"//        .icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_AZURE)));"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:243"$243$"// Uses a custom icon with the info window popping out of the center of the icon."$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:244"$244$"//      .icon(BitmapDescriptorFactory.fromResource(R.drawable.arrow))"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:245"$245$"//      .infoWindowAnchor(0.5f, 0.5f));"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:246"$246$"// Creates a draggable marker. Long press to drag."$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:247"$247$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:248"$248$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:249"$249$"public boolean onMarkerClick(final Marker marker) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:250"$250$"mLastSelectedMarker = marker;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:251"$251$"// We return false to indicate that we have not consumed the event and that we wish"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:252"$252$"// for the default behavior to occur (which is for the camera to move such that the"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:253"$253$"// marker is centered and for the marker's info window to open, if it has one)."$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:254"$254$"return false;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:255"$255$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:256"$256$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:257"$257$"public void onInfoWindowClick(final Marker marker) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:258"$258$"String title = marker.getTitle().toString();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:259"$259$"final AlertDialog.Builder builder = new AlertDialog.Builder(this);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:260"$260$"final double lat = marker.getPosition().latitude;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:261"$261$"final double lng = marker.getPosition().longitude;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:262"$262$"final CDCLocation loc;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:263"$263$"try {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:264"$264$"loc = dbHelper.fetchLocationByName(marker.getTitle());"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:265"$265$"marker.setPosition(loc.getLatLng());"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:266"$266$"builder.setTitle(""Choice"");"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:267"$267$"int drop_menu;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:268"$268$"final PathCommands[] act_map;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:269"$269$"if (mCurrentPath == null || mCurrentPath.empty()) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:270"$270$"drop_menu = R.array.empty_path;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:271"$271$"act_map = new PathCommands[] {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:272"$272$"PathCommands.ADD_NEW_PATH,"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:273"$273$"PathCommands.REMOVE_LOCATION"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:274"$274$"};"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:275"$275$"} else {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:276"$276$"drop_menu = R.array.new_location;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:277"$277$"act_map = new PathCommands[] {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:278"$278$"PathCommands.ADD_TO_PATH,"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:279"$279$"PathCommands.REMOVE_LOCATION"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:280"$280$"};"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:281"$281$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:282"$282$"builder.setItems(drop_menu, new DialogInterface.OnClickListener() {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:283"$283$"public void onClick(DialogInterface dialog, int which) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:284"$284$"pathSaveButton.setOnClickListener(new View.OnClickListener() {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:285"$285$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:286"$286$"public void onClick(View v) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:287"$287$"dbHelper.createPath(mCurrentPath);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:288"$288$"pathFrame.setVisibility(View.GONE);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:289"$289$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:290"$290$"});"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:291"$291$"switch (act_map[which]) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:292"$292$"// 0 is create a path and add the clicked location"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:293"$293$"case ADD_NEW_PATH:"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:294"$294$"mCurrentPath = new Path(mCurrentPathName.getText().toString());"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:295"$295$"mCurrentPath.addLocation(loc);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:296"$296$"marker.setIcon(mStartMarker);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:297"$297$"pathFrame.setVisibility(View.VISIBLE);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:298"$298$"break;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:299"$299$"// add to an existing path"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:300"$300$"case ADD_TO_PATH:"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:301"$301$"mCurrentPath.addLocation(loc);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:302"$302$"pathFrame.setVisibility(View.VISIBLE);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:303"$303$"mMap.addPolyline(new PolylineOptions()).setPoints(mCurrentPath.latLngs());"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:304"$304$"break;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:305"$305$"// remove the location from the map"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:306"$306$"case REMOVE_LOCATION:"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:307"$307$"marker.remove();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:308"$308$"break;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:309"$309$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:310"$310$"dialog.dismiss();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:311"$311$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:312"$312$"});"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:313"$313$"final AlertDialog mAlertDialog = builder.create();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:314"$314$"mAlertDialog.show();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:315"$315$"} catch (SQLException e) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:316"$316$"e.printStackTrace();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:317"$317$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:318"$318$"//        setContentView(R.layout.fragment_pathmenuitem);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:319"$319$"//        PathMenuFragment pathMenu = PathMenuFragment.newInstance(""a"",""b"");"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:320"$320$"//        pathMenu.show(getFragmentManager(), ""path_menu"");"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:321"$321$"//        String tag = ""path"";"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:322"$322$"//        getFragmentManager().beginTransaction()"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:323"$323$"//                .add(new Fragment(),tag)"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:324"$324$"//                .commit();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:325"$325$"//Toast.makeText(this, ""Why is "" + title + "" coming up"", Toast.LENGTH_SHORT).show();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:326"$326$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:327"$327$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:328"$328$"public void onMarkerDragStart(Marker marker) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:329"$329$"String title = marker.getTitle();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:330"$330$"try {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:331"$331$"CDCLocation loc = dbHelper.fetchLocationByName(title);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:332"$332$"} catch (SQLException e) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:333"$333$"e.printStackTrace();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:334"$334$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:335"$335$"mTopText.setText(""onMarkerDragStart"");"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:336"$336$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:337"$337$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:338"$338$"public void onMarkerDragEnd(Marker marker) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:339"$339$"mTopText.setText(""onMarkerDragEnd"");"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:340"$340$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:341"$341$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:342"$342$"public void onMarkerDrag(Marker marker) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:343"$343$"mTopText.setText(""onMarkerDrag.  Current Position: "" + marker.getPosition());"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:344"$344$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:345"$345$"// The dialog fragment receives a reference to this Activity through the"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:346"$346$"// Fragment.onAttach() callback, which it uses to call the following methods"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:347"$347$"// defined by the NoticeDialogFragment.NoticeDialogListener interface"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:348"$348$"public void onDialogPositiveClick(DialogFragment dialog) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:349"$349$"Bundle args = dialog.getArguments();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:350"$350$"double locLat = args.getDouble(SaveLocationFragment.ARG_LATITUDE);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:351"$351$"double locLong = args.getDouble(SaveLocationFragment.ARG_LONGITUDE);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:352"$352$"// User touched the dialog's positive button"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:353"$353$"EditText locName = (EditText)"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:354"$354$"dialog.getDialog().findViewById(R.id.edit_location_name);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:355"$355$"EditText locAddress = (EditText)"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:356"$356$"dialog.getDialog().findViewById(R.id.edit_location_address);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:357"$357$"CDCLocation location = new CDCLocation("$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:358"$358$"locName.getText().toString(), locAddress.getText().toString(), locLat, locLong"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:359"$359$");"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:360"$360$"dbHelper.createLocation(location);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:361"$361$"mMap.addMarker(new MarkerOptions()"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:362"$362$".position(location.getLatLng())"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:363"$363$".title(location.getName())"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:364"$364$".snippet(location.getAddress())"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:365"$365$");"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:366"$366$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:367"$367$"public void onDialogNegativeClick(DialogFragment dialog) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:368"$368$"// User touched the dialog's negative button"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:369"$369$"dialog.getDialog().cancel();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:370"$370$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:371"$371$"private void onPathMenuClick( DialogFragment dialog) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:372"$372$"String choice = dialog.getString(R.string.app_name);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:373"$373$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:374"$374$"private boolean checkReady() {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:375"$375$"if (mMap == null) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:376"$376$"Toast.makeText(this, R.string.map_not_ready, Toast.LENGTH_SHORT).show();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:377"$377$"return false;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:378"$378$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:379"$379$"return true;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:380"$380$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:381"$381$"/** Called when the Clear button is clicked. */"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:382"$382$"public void onClearMap(View view) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:383"$383$"if (!checkReady()) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:384"$384$"return;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:385"$385$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:386"$386$"mMap.clear();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:387"$387$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:388"$388$"/** Called when the Reset button is clicked. */"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:389"$389$"public void onResetMap(View view) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:390"$390$"if (!checkReady()) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:391"$391$"return;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:392"$392$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:393"$393$"// Clear the map because we don't want duplicates of the markers."$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:394"$394$"mMap.clear();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:395"$395$"addMarkersToMap();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:396"$396$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:397"$397$"private void onSaveCurrentPath () {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:398"$398$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:399"$399$"// I am leaving this here as a simplistic example of how the OnClick can be done."$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:400"$400$"// The above anonymous version works here because it has a closure."$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:401"$401$"//    private final class PathMenuOnClickListener implements"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:402"$402$"//            DialogInterface.OnClickListener {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:403"$403$"//        public void onClick(DialogInterface dialog, int which) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:404"$404$"//            LinearLayout pathFrame = (LinearLayout)"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:405"$405$"//                    MapsFragment.this.findViewById(R.id.path_frame);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:406"$406$"//            switch (which) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:407"$407$"//                case 0:"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:408"$408$"//                    mCurrentPath = new Path(mCurrentPathName.getText().toString());"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:409"$409$"//                case 1:"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:410"$410$"//                    pathFrame.setVisibility(View.GONE);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:411"$411$"//                    break;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:412"$412$"//                case 2:"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:413"$413$"//                    pathFrame.setVisibility(View.VISIBLE);"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:414"$414$"//                    break;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:415"$415$"//            }"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:416"$416$"//"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:417"$417$"//            dialog.dismiss();"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:418"$418$"//        }"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:419"$419$"//    }"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:420"$420$"public void onReceiveResult(int resultCode, Bundle resultData) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:421"$421$"switch (resultCode) {"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:422"$422$"case 1:"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:423"$423$"//show progress"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:424"$424$"break;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:425"$425$"case 2:"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:426"$426$"//List results = resultData.getParcelableList(""results"");"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:427"$427$"// do something interesting"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:428"$428$"// hide progress"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:429"$429$"break;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:430"$430$"case 3:"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:431"$431$"// handle the error;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:432"$432$"break;"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:433"$433$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:434"$434$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\MapsFragment.java:435"$435$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapsFragment.java"
"secured\AddBitstreamsAction.java:1"$1$"/**"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:2"$2$"* The contents of this file are subject to the license and copyright"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:3"$3$"* detailed in the LICENSE and NOTICE files at the root of the source"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:4"$4$"* tree and available online at"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:5"$5$"*"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:6"$6$"* http://www.dspace.org/license/"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:7"$7$"*/"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:8"$8$"package org.dspace.app.itemupdate;"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:9"$9$"import java.io.BufferedInputStream;"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:10"$10$"import java.io.File;"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:11"$11$"import java.io.FileInputStream;"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:12"$12$"import java.io.IOException;"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:13"$13$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:14"$14$"import java.text.ParseException;"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:15"$15$"import java.util.ArrayList;"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:16"$16$"import java.util.List;"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:17"$17$"import org.dspace.authorize.AuthorizeException;"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:18"$18$"import org.dspace.authorize.AuthorizeManager;"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:19"$19$"import org.dspace.authorize.ResourcePolicy;"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:20"$20$"import org.dspace.content.Bitstream;"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:21"$21$"import org.dspace.content.BitstreamFormat;"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:22"$22$"import org.dspace.content.Bundle;"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:23"$23$"import org.dspace.content.DCDate;"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:24"$24$"import org.dspace.content.FormatIdentifier;"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:25"$25$"import org.dspace.content.InstallItem;"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:26"$26$"import org.dspace.content.Item;"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:27"$27$"import org.dspace.core.Context;"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:28"$28$"import org.dspace.eperson.Group;"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:29"$29$"/**"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:30"$30$"* 	 Action to add bitstreams listed in item contents file to the item in DSpace	"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:31"$31$"*   "$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:32"$32$"*"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:33"$33$"*/"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:34"$34$"public class AddBitstreamsAction extends UpdateBitstreamsAction {"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:35"$35$"public AddBitstreamsAction()"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:36"$36$"{"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:37"$37$"//empty	"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:38"$38$"}"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:39"$39$"/**"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:40"$40$"* 	Adds bitstreams from the archive as listed in the contents file."$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:41"$41$"* "$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:42"$42$"*  @param context"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:43"$43$"*  @param itarch"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:44"$44$"*  @param isTest"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:45"$45$"*  @param suppressUndo"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:46"$46$"*  @throws IllegalArgumentException"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:47"$47$"*  @throws ParseException"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:48"$48$"*  @throws IOException"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:49"$49$"*  @throws AuthorizeException"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:50"$50$"*  @throws SQLException"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:51"$51$"*/"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:52"$52$"public void execute(Context context, ItemArchive itarch, boolean isTest,"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:53"$53$"boolean suppressUndo) throws IllegalArgumentException,"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:54"$54$"ParseException, IOException, AuthorizeException, SQLException "$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:55"$55$"{"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:56"$56$"Item item = itarch.getItem();"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:57"$57$"File dir = itarch.getDirectory();"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:58"$58$"List<ContentsEntry> contents = MetadataUtilities.readContentsFile(new File(dir, ItemUpdate.CONTENTS_FILE));"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:59"$59$"if (contents.isEmpty())"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:60"$60$"{"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:61"$61$"ItemUpdate.pr(""Contents is empty - no bitstreams to add"");"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:62"$62$"return;"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:63"$63$"}"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:64"$64$"ItemUpdate.pr(""Contents bitstream count: "" + contents.size());"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:65"$65$"String[] files = dir.list(ItemUpdate.fileFilter);"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:66"$66$"List<String> fileList = new ArrayList<String>();"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:67"$67$"for (String filename : files)"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:68"$68$"{"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:69"$69$"fileList.add(filename);"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:70"$70$"ItemUpdate.pr(""file: "" + filename);"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:71"$71$"}"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:72"$72$"for (ContentsEntry ce : contents)"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:73"$73$"{"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:74"$74$"//validate match to existing file in archive"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:75"$75$"if (!fileList.contains(ce.filename))"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:76"$76$"{"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:77"$77$"throw new IllegalArgumentException(""File listed in contents is missing: "" + ce.filename);"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:78"$78$"}"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:79"$79$"}"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:80"$80$"//now okay to add"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:81"$81$"for (ContentsEntry ce : contents)"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:82"$82$"{        				"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:83"$83$"addBitstream(context, itarch, item, dir, ce, suppressUndo, isTest);"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:84"$84$"}"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:85"$85$"}"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:86"$86$"private void addBitstream(Context context, ItemArchive itarch, Item item, File dir, "$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:87"$87$"ContentsEntry ce, boolean suppressUndo, boolean isTest)"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:88"$88$"throws IOException, IllegalArgumentException, SQLException, AuthorizeException, ParseException"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:89"$89$"{"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:90"$90$"ItemUpdate.pr(""contents entry for bitstream: "" + ce.toString());"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:91"$91$"File f = new File(dir, ce.filename);"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:92"$92$"// get an input stream"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:93"$93$"BufferedInputStream bis = new BufferedInputStream(new FileInputStream(f));"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:94"$94$"Bitstream bs = null;"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:95"$95$"String newBundleName = ce.bundlename;"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:96"$96$"if (ce.bundlename == null)  // should be required but default convention established"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:97"$97$"{"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:98"$98$"if (ce.filename.equals(""license.txt""))"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:99"$99$"{"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:100"$100$"newBundleName = ""LICENSE"";"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:101"$101$"}"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:102"$102$"else  "$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:103"$103$"{"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:104"$104$"newBundleName = ""ORIGINAL"";"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:105"$105$"}"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:106"$106$"}"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:107"$107$"ItemUpdate.pr(""  Bitstream "" + ce.filename + "" to be added to bundle: "" + newBundleName);"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:108"$108$"if (!isTest)"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:109"$109$"{"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:110"$110$"// find the bundle"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:111"$111$"Bundle[] bundles = item.getBundles(newBundleName);"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:112"$112$"Bundle targetBundle = null;"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:113"$113$"if (bundles.length < 1)"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:114"$114$"{"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:115"$115$"// not found, create a new one"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:116"$116$"targetBundle = item.createBundle(newBundleName);"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:117"$117$"}"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:118"$118$"else"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:119"$119$"{"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:120"$120$"//verify bundle + name are not duplicates"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:121"$121$"for (Bundle b : bundles)"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:122"$122$"{"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:123"$123$"Bitstream[] bitstreams = b.getBitstreams();"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:124"$124$"for (Bitstream bsm : bitstreams)"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:125"$125$"{"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:126"$126$"if (bsm.getName().equals(ce.filename))"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:127"$127$"{"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:128"$128$"throw new IllegalArgumentException(""Duplicate bundle + filename cannot be added: "" "$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:129"$129$"+ b.getName() + "" + "" + bsm.getName());"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:130"$130$"}"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:131"$131$"}"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:132"$132$"}"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:133"$133$"// select first bundle"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:134"$134$"targetBundle = bundles[0];"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:135"$135$"}"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:136"$136$"bs = targetBundle.createBitstream(bis);	"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:137"$137$"bs.setName(ce.filename);"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:138"$138$"// Identify the format"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:139"$139$"// FIXME - guessing format guesses license.txt incorrectly as a text file format!"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:140"$140$"BitstreamFormat fmt = FormatIdentifier.guessFormat(context, bs);"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:141"$141$"bs.setFormat(fmt);"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:142"$142$"if (ce.description != null)"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:143"$143$"{"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:144"$144$"bs.setDescription(ce.description);"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:145"$145$"}"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:146"$146$"if ((ce.permissionsActionId != -1) && (ce.permissionsGroupName != null))"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:147"$147$"{"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:148"$148$"Group group = Group.findByName(context, ce.permissionsGroupName);"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:149"$149$"if (group != null)"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:150"$150$"{"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:151"$151$"AuthorizeManager.removeAllPolicies(context, bs);  // remove the default policy"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:152"$152$"ResourcePolicy rp = ResourcePolicy.create(context);"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:153"$153$"rp.setResource(bs);"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:154"$154$"rp.setAction(ce.permissionsActionId);"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:155"$155$"rp.setGroup(group);		"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:156"$156$"rp.update();"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:157"$157$"}"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:158"$158$"}"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:159"$159$"if (alterProvenance && !targetBundle.getName().equals(""THUMBNAIL"") "$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:160"$160$"&& !targetBundle.getName().equals(""TEXT""))"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:161"$161$"{"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:162"$162$"DtoMetadata dtom = DtoMetadata.create(""dc.description.provenance"", ""en"", """");"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:163"$163$"String append = ""Bitstream added on "" + DCDate.getCurrent() + "" : "" "$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:164"$164$"+ InstallItem.getBitstreamProvenanceMessage(item);"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:165"$165$"MetadataUtilities.appendMetadata(item, dtom, false, append);"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:166"$166$"}"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:167"$167$"//update after all changes are applied, even metadata ones"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:168"$168$"bs.update();"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:169"$169$"if (!suppressUndo)"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:170"$170$"{"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:171"$171$"itarch.addUndoDeleteContents(bs.getID());"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:172"$172$"}"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:173"$173$"}"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:174"$174$"}"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"secured\AddBitstreamsAction.java:175"$175$"}"$"ignore"$0$"..\sql-dataset\test\secured\AddBitstreamsAction.java"
"flawed\SincronizarCursos.java:1"$1$"package com.example.android.utime.app;"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:2"$2$"import android.content.ContentValues;"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:3"$3$"import android.content.Context;"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:4"$4$"import android.database.sqlite.SQLiteDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:5"$5$"import android.os.AsyncTask;"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:6"$6$"import android.text.format.Time;"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:7"$7$"import java.sql.Connection;"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:8"$8$"import java.sql.DriverManager;"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:9"$9$"import java.sql.ResultSet;"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:10"$10$"import java.sql.ResultSetMetaData;"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:11"$11$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:12"$12$"import java.sql.Statement;"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:13"$13$"import java.util.ArrayList;"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:14"$14$"import java.util.HashMap;"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:15"$15$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:16"$16$"* Created by Pau on 20/11/2014."$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:17"$17$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:18"$18$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:19"$19$"* Clase que se encarga de conectarse con la base de datos externa y de traer los datos de los cursos del"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:20"$20$"* usuario especfico"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:21"$21$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:22"$22$"public class SincronizarCursos extends AsyncTask<String, Void, String> {"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:23"$23$"private static String databaseBaseURL = ""jdbc:mysql://Paula.db.4676399.hostedresource.com:3306/Paula"";"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:24"$24$"public String user = ""Paula"";"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:25"$25$"public String pass = ""Lopez123#"";"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:26"$26$"private Connection con;"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:27"$27$"private String usuario;"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:28"$28$"private Context contexto;"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:29"$29$"public String sincronizacionNotas = """";"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:30"$30$"ArrayList<HashMap<String, String>> cursoListSinc = new ArrayList<HashMap<String, String>>();"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:31"$31$"private DBhelper dbHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:32"$32$"HashMap<String, String> cursoSinc;"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:33"$33$"String id, name, profesor, aula, dias, horas, semestre, anno = """";"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:34"$34$"public SincronizarCursos(String usuario, Context context) {"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:35"$35$"this.usuario = usuario;"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:36"$36$"this.contexto = context;"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:37"$37$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:38"$38$"/*"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:39"$39$"* Mtodo que se encarga de abrir una conexin con la base de datos remota"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:40"$40$"* y de traer los datos de la base remota"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:41"$41$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:42"$42$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:43"$43$"protected String doInBackground(String... strings) {"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:44"$44$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:45"$45$"//Driver para abrir la conexin con la base de mysql"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:46"$46$"Class.forName(""com.mysql.jdbc.Driver"");"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:47"$47$"con = DriverManager.getConnection(databaseBaseURL, user, pass);"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:48"$48$"} catch (ClassNotFoundException e) {"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:49"$49$"} catch (SQLException e) {"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:50"$50$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:51"$51$"if (con != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:52"$52$"System.out.println(""Database connection success"");"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:53"$53$"Statement statement = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:54"$54$"String result = """";"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:55"$55$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:56"$56$"Statement st = con.createStatement();"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:57"$57$"ResultSet rs = st.executeQuery(""select * from Curso WHERE idUsuario = '"" + usuario + ""' ;"");"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:58"$58$"int i = 0;"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:59"$59$"//Hacer la lista nueva"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:60"$60$"dbHelper = new DBhelper(contexto);"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:61"$61$"SQLiteDatabase db = dbHelper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:62"$62$"db.execSQL(""DELETE FROM CURSO"");"$"count"$1$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:63"$63$"while (rs.next()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:64"$64$"cursoSinc = new HashMap<String, String>();"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:65"$65$"id = rs.getString(2);"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:66"$66$"name = rs.getString(3);"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:67"$67$"profesor = rs.getString(4);"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:68"$68$"aula = rs.getString(5);"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:69"$69$"dias = rs.getString(6);"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:70"$70$"horas = rs.getString(7);"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:71"$71$"cursoSinc.put(""id"", id);"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:72"$72$"cursoSinc.put(""name"", name);"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:73"$73$"if (cursoListSinc.isEmpty()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:74"$74$"cursoListSinc.add(cursoSinc);"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:75"$75$"} else {"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:76"$76$"if (!cursoListSinc.contains(cursoSinc)) {"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:77"$77$"cursoListSinc.add(cursoSinc);"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:78"$78$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:79"$79$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:80"$80$"result += rs.getString(1) + ""|"";"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:81"$81$"result += rs.getInt(2) + ""|"";"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:82"$82$"result += rs.getString(3) + ""|"";"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:83"$83$"result += rs.getString(4) + ""|"";"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:84"$84$"result += rs.getString(5) + ""|"";"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:85"$85$"result += rs.getString(6) + ""|"";"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:86"$86$"result += rs.getString(7) + ""|"";"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:87"$87$"result += ""\n"";"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:88"$88$"++i;"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:89"$89$"Time now = new Time();"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:90"$90$"now.setToNow();"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:91"$91$"anno = Integer.toString(now.year);"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:92"$92$"if(now.month < 7){"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:93"$93$"semestre =  ""I"";"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:94"$94$"}else{"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:95"$95$"semestre = ""II"";"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:96"$96$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:97"$97$"dbHelper = new DBhelper(contexto);"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:98"$98$"db = dbHelper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:99"$99$"ContentValues values = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:100"$100$"values.put(""horas"", horas);"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:101"$101$"values.put(""dias"", dias);"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:102"$102$"values.put(""aula"", aula);"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:103"$103$"values.put(""profesor"", profesor);"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:104"$104$"values.put(""name"", name);"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:105"$105$"values.put(""semestre"", semestre);"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:106"$106$"values.put(""anno"", anno);"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:107"$107$"//db.insert(""Curso"", id, values);"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:108"$108$"long curso_Id = db.insert(Curso.TABLE, null, values);"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:109"$109$"// Insertando filas"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:110"$110$"db.close(); // Cerrando la connecion de la base de datos"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:111"$111$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:112"$112$"result += ""\n"";"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:113"$113$"System.out.println(""Resultado Cursos: \n"" + result);"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:114"$114$"this.sincronizacionNotas = result;"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:115"$115$"} catch (SQLException ex) {"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:116"$116$"// handle any errors"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:117"$117$"ex.printStackTrace();"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:118"$118$"System.out.println(""SQLException: "" + ex.getMessage());"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:119"$119$"System.out.println(""SQLState: "" + ex.getSQLState());"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:120"$120$"System.out.println(""VendorError: "" + ex.getErrorCode());"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:121"$121$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:122"$122$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:123"$123$"return ""Fin"";"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:124"$124$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"flawed\SincronizarCursos.java:125"$125$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SincronizarCursos.java"
"secured\MSSQLCleanWorkflowManager.java:1"$1$"package org.sahsu.rif.dataloader.datastorage.ms;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:2"$2$"import java.io.FileWriter;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:3"$3$"import java.io.Writer;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:4"$4$"import java.sql.Connection;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:5"$5$"import java.sql.PreparedStatement;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:6"$6$"import java.sql.ResultSet;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:7"$7$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:8"$8$"import org.sahsu.rif.dataloader.concepts.DataLoadingResultTheme;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:9"$9$"import org.sahsu.rif.dataloader.concepts.DataSetConfiguration;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:10"$10$"import org.sahsu.rif.dataloader.concepts.DataSetFieldConfiguration;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:11"$11$"import org.sahsu.rif.dataloader.concepts.WorkflowState;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:12"$12$"import org.sahsu.rif.dataloader.system.RIFDataLoaderToolError;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:13"$13$"import org.sahsu.rif.dataloader.system.RIFDataLoaderToolMessages;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:14"$14$"import org.sahsu.rif.dataloader.system.RIFTemporaryTablePrefixes;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:15"$15$"import org.sahsu.rif.generic.concepts.RIFResultTable;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:16"$16$"import org.sahsu.rif.generic.datastorage.SelectQueryFormatter;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:17"$17$"import org.sahsu.rif.generic.datastorage.SQLQueryUtility;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:18"$18$"import org.sahsu.rif.generic.datastorage.ms.MSSQLCountQueryFormatter;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:19"$19$"import org.sahsu.rif.generic.datastorage.ms.MSSQLSelectQueryFormatter;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:20"$20$"import org.sahsu.rif.generic.system.RIFServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:21"$21$"import org.sahsu.rif.generic.util.RIFLogger;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:22"$22$"/**"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:23"$23$"* manages database calls related to cleaning a data source."$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:24"$24$"*"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:25"$25$"* <hr>"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:26"$26$"* Copyright 2017 Imperial College London, developed by the Small Area"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:27"$27$"* Health Statistics Unit. "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:28"$28$"*"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:29"$29$"* <pre> "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:30"$30$"* This file is part of the Rapid Inquiry Facility (RIF) project."$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:31"$31$"* RIF is free software: you can redistribute it and/or modify"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:32"$32$"* it under the terms of the GNU Lesser General Public License as published by"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:33"$33$"* the Free Software Foundation, either version 3 of the License, or"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:34"$34$"* (at your option) any later version."$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:35"$35$"* RIF is distributed in the hope that it will be useful,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:36"$36$"* but WITHOUT ANY WARRANTY; without even the implied warranty of"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:37"$37$"* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:38"$38$"* GNU Lesser General Public License for more details."$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:39"$39$"*"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:40"$40$"* You should have received a copy of the GNU Lesser General Public License"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:41"$41$"* along with RIF.  If not, see <http://www.gnu.org/licenses/>."$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:42"$42$"* </pre>"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:43"$43$"*"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:44"$44$"* <hr>"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:45"$45$"* Kevin Garwood"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:46"$46$"* @author kgarwood"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:47"$47$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:48"$48$"/*"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:49"$49$"* Code Road Map:"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:50"$50$"* --------------"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:51"$51$"* Code is organised into the following sections.  Wherever possible, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:52"$52$"* methods are classified based on an order of precedence described in "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:53"$53$"* parentheses (..).  For example, if you're trying to find a method "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:54"$54$"* 'getName(...)' that is both an interface method and an accessor "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:55"$55$"* method, the order tells you it should appear under interface."$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:56"$56$"* "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:57"$57$"* Order of "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:58"$58$"* Precedence     Section"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:59"$59$"* ==========     ======"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:60"$60$"* (1)            Section Constants"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:61"$61$"* (2)            Section Properties"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:62"$62$"* (3)            Section Construction"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:63"$63$"* (7)            Section Accessors and Mutators"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:64"$64$"* (6)            Section Errors and Validation"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:65"$65$"* (5)            Section Interfaces"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:66"$66$"* (4)            Section Override"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:67"$67$"*"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:68"$68$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:69"$69$"final public class MSSQLCleanWorkflowManager "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:70"$70$"extends AbstractMSSQLDataLoaderStepManager {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:71"$71$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:72"$72$"// Section Constants"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:73"$73$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:74"$74$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:75"$75$"// Section Properties"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:76"$76$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:77"$77$"private MSSQLChangeAuditManager changeAuditManager;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:78"$78$"private MSSQLDataSetManager dataSetManager;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:79"$79$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:80"$80$"// Section Construction"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:81"$81$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:82"$82$"public MSSQLCleanWorkflowManager("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:83"$83$"final MSSQLDataSetManager dataSetManager,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:84"$84$"final MSSQLChangeAuditManager changeAuditManager) {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:85"$85$"this.dataSetManager = dataSetManager;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:86"$86$"this.changeAuditManager = changeAuditManager;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:87"$87$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:88"$88$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:89"$89$"// Section Accessors and Mutators"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:90"$90$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:91"$91$"public RIFResultTable getCleanedTableData("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:92"$92$"final Connection connection,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:93"$93$"final FileWriter logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:94"$94$"final DataSetConfiguration dataSetConfiguration)"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:95"$95$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:96"$96$"RIFResultTable resultTable = new RIFResultTable();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:97"$97$"String coreDataSetName = dataSetConfiguration.getName();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:98"$98$"String searchReplaceTableName"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:99"$99$"= RIFTemporaryTablePrefixes.CLEAN_CASTING.getTableName(coreDataSetName);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:100"$100$"String[] cleanFieldNames = dataSetConfiguration.getCleanFieldNames();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:101"$101$"try {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:102"$102$"resultTable "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:103"$103$"= getTableData("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:104"$104$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:105"$105$"searchReplaceTableName, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:106"$106$"cleanFieldNames);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:107"$107$"return resultTable;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:108"$108$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:109"$109$"catch(SQLException sqlException) {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:110"$110$"logSQLException("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:111"$111$"logFileWriter, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:112"$112$"sqlException);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:113"$113$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:114"$114$"finally {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:115"$115$"SQLQueryUtility.close(connection);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:116"$116$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:117"$117$"return resultTable;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:118"$118$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:119"$119$"public void cleanConfiguration("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:120"$120$"final Connection connection,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:121"$121$"final Writer logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:122"$122$"final String exportDirectoryPath,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:123"$123$"final DataSetConfiguration dataSetConfiguration) "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:124"$124$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:125"$125$"RIFLogger logger = RIFLogger.getLogger();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:126"$126$"PreparedStatement searchReplaceStatement = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:127"$127$"PreparedStatement validationStatement = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:128"$128$"PreparedStatement castingStatement = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:129"$129$"try {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:130"$130$"String coreDataSetName"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:131"$131$"= dataSetConfiguration.getName();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:132"$132$"int dataSetIdentifier"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:133"$133$"= dataSetManager.getDataSetIdentifier("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:134"$134$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:135"$135$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:136"$136$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:137"$137$"/*"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:138"$138$"* Part I: Perform search and replace values to help substitute"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:139"$139$"* poor field values for better ones"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:140"$140$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:141"$141$"MSSQLDataTypeSearchReplaceUtility searchReplaceUtility"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:142"$142$"= new MSSQLDataTypeSearchReplaceUtility();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:143"$143$"String searchReplaceQuery"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:144"$144$"= searchReplaceUtility.generateSearchReplaceTableStatement(dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:145"$145$"logSQLQuery("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:146"$146$"logFileWriter, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:147"$147$"""createCleaningSearchReplaceTable"", "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:148"$148$"searchReplaceQuery);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:149"$149$"searchReplaceStatement"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:150"$150$"= connection.prepareStatement(searchReplaceQuery);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:151"$151$"System.out.println(searchReplaceQuery);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:152"$152$"searchReplaceStatement.executeUpdate();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:153"$153$"exportTable("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:154"$154$"connection,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:155"$155$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:156"$156$"exportDirectoryPath,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:157"$157$"DataLoadingResultTheme.ARCHIVE_STAGES,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:158"$158$"RIFTemporaryTablePrefixes.CLEAN_SEARCH_REPLACE.getTableName(coreDataSetName));"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:159"$159$"//check that the search replace table has just as many rows as the"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:160"$160$"//original load table			"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:161"$161$"checkTotalRowsMatch("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:162"$162$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:163"$163$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:164"$164$"coreDataSetName,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:165"$165$"RIFTemporaryTablePrefixes.EXTRACT,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:166"$166$"RIFTemporaryTablePrefixes.CLEAN_SEARCH_REPLACE);			"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:167"$167$"/*"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:168"$168$"* Part II: Now validate the results, and change the field value to "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:169"$169$"* 'rif_error' if it fails validation"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:170"$170$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:171"$171$"MSSQLDataTypeValidationUtility validationUtility"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:172"$172$"= new MSSQLDataTypeValidationUtility();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:173"$173$"String validationQuery"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:174"$174$"= validationUtility.generateValidationTableStatement(dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:175"$175$"logSQLQuery("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:176"$176$"logFileWriter, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:177"$177$"""createCleaningValidationTable"", "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:178"$178$"validationQuery);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:179"$179$"validationStatement"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:180"$180$"= connection.prepareStatement(validationQuery);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:181"$181$"validationStatement.executeUpdate();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:182"$182$"exportTable("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:183"$183$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:184"$184$"logFileWriter, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:185"$185$"exportDirectoryPath, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:186"$186$"DataLoadingResultTheme.ARCHIVE_STAGES, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:187"$187$"RIFTemporaryTablePrefixes.CLEAN_VALIDATION.getTableName(coreDataSetName));			"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:188"$188$"checkTotalRowsMatch("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:189"$189$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:190"$190$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:191"$191$"coreDataSetName,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:192"$192$"RIFTemporaryTablePrefixes.CLEAN_SEARCH_REPLACE,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:193"$193$"RIFTemporaryTablePrefixes.CLEAN_VALIDATION);			"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:194"$194$"/*"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:195"$195$"* Part III: Finally, cast each field to its appropriate data type (eg: int,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:196"$196$"* double, etc).  If any of the field values have 'rif_error' then cast the"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:197"$197$"* NULL value."$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:198"$198$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:199"$199$"MSSQLCastingUtility castingUtility = new MSSQLCastingUtility();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:200"$200$"String castingQuery"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:201"$201$"= castingUtility.generateCastingTableQuery(dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:202"$202$"logSQLQuery("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:203"$203$"logFileWriter, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:204"$204$"""createCleaningCastingTable"", "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:205"$205$"castingQuery);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:206"$206$"castingStatement"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:207"$207$"= connection.prepareStatement(castingQuery);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:208"$208$"castingStatement.executeUpdate();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:209"$209$"exportTable("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:210"$210$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:211"$211$"logFileWriter, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:212"$212$"exportDirectoryPath, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:213"$213$"DataLoadingResultTheme.ARCHIVE_STAGES, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:214"$214$"RIFTemporaryTablePrefixes.CLEAN_CASTING.getTableName(coreDataSetName));			"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:215"$215$"checkTotalRowsMatch("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:216"$216$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:217"$217$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:218"$218$"coreDataSetName,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:219"$219$"RIFTemporaryTablePrefixes.CLEAN_VALIDATION,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:220"$220$"RIFTemporaryTablePrefixes.CLEAN_CASTING);			"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:221"$221$"/*"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:222"$222$"* Copy the contents of the casting table and call it"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:223"$223$"* the final cleaning table.  Note that in future we may well"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:224"$224$"* just rename the casting table.  But I'm not sure whether we may"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:225"$225$"* need to retain it for other purposes."$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:226"$226$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:227"$227$"String cleaningCastingTableName"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:228"$228$"= RIFTemporaryTablePrefixes.CLEAN_CASTING.getTableName(coreDataSetName);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:229"$229$"String finalCleaningTableName"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:230"$230$"= RIFTemporaryTablePrefixes.CLEAN_FINAL.getTableName(coreDataSetName);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:231"$231$"deleteTable("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:232"$232$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:233"$233$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:234"$234$"finalCleaningTableName);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:235"$235$"renameTable("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:236"$236$"connection,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:237"$237$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:238"$238$"cleaningCastingTableName,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:239"$239$"finalCleaningTableName);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:240"$240$"exportTable("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:241"$241$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:242"$242$"logFileWriter, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:243"$243$"exportDirectoryPath, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:244"$244$"DataLoadingResultTheme.ARCHIVE_STAGES, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:245"$245$"finalCleaningTableName);			"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:246"$246$"/*"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:247"$247$"* Part IV: Audit changes that happened between the load table"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:248"$248$"* values and the search and replace values.  Also audit rows"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:249"$249$"* that still failed validation, even after all the cleaning"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:250"$250$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:251"$251$"changeAuditManager.auditDataCleaningChanges("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:252"$252$"connection,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:253"$253$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:254"$254$"exportDirectoryPath,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:255"$255$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:256"$256$"changeAuditManager.auditValidationFailures("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:257"$257$"connection,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:258"$258$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:259"$259$"exportDirectoryPath,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:260"$260$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:261"$261$"updateLastCompletedWorkState("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:262"$262$"connection,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:263"$263$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:264"$264$"dataSetConfiguration,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:265"$265$"WorkflowState.CLEAN);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:266"$266$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:267"$267$"catch(SQLException sqlException) {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:268"$268$"logSQLException("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:269"$269$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:270"$270$"sqlException);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:271"$271$"String cleanedTableName"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:272"$272$"= RIFTemporaryTablePrefixes.CLEAN_CASTING.getTableName("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:273"$273$"dataSetConfiguration.getName());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:274"$274$"String errorMessage"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:275"$275$"= RIFDataLoaderToolMessages.getMessage("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:276"$276$"""cleaningStepManager.error.createCleanedTable"","$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:277"$277$"cleanedTableName);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:278"$278$"RIFServiceException RIFServiceException"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:279"$279$"= new RIFServiceException("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:280"$280$"RIFDataLoaderToolError.CLEAN_TABLE,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:281"$281$"errorMessage);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:282"$282$"throw RIFServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:283"$283$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:284"$284$"finally {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:285"$285$"SQLQueryUtility.close(searchReplaceStatement);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:286"$286$"SQLQueryUtility.close(validationStatement);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:287"$287$"SQLQueryUtility.close(castingStatement);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:288"$288$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:289"$289$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:290"$290$"public Integer getCleaningTotalBlankValues("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:291"$291$"final Connection connection,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:292"$292$"final Writer logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:293"$293$"final DataSetConfiguration dataSetConfiguration)"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:294"$294$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:295"$295$"MSSQLCountQueryFormatter queryFormatter "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:296"$296$"= new MSSQLCountQueryFormatter();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:297"$297$"//KLG_SCHEMA"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:298"$298$"//queryFormatter.setDatabaseSchemaName(""dbo"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:299"$299$"queryFormatter.setCountField(""data_source_id"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:300"$300$"queryFormatter.addFromTable(""rif_audit_table"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:301"$301$"queryFormatter.addWhereParameter(""data_source_id"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:302"$302$"queryFormatter.addWhereParameter(""event_type"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:303"$303$"RIFLogger logger = RIFLogger.getLogger();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:304"$304$"logger.debugQuery("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:305"$305$"this, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:306"$306$"""getCleaningTotalBlankValues"","$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:307"$307$"queryFormatter.generateQuery());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:308"$308$"Integer result = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:309"$309$"PreparedStatement statement = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:310"$310$"ResultSet resultSet = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:311"$311$"try {			"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:312"$312$"int dataSetIdentifier"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:313"$313$"= dataSetManager.getDataSetIdentifier("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:314"$314$"connection,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:315"$315$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:316"$316$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:317"$317$"statement "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:318"$318$"= connection.prepareStatement(queryFormatter.generateQuery());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:319"$319$"statement.setInt(1, dataSetIdentifier);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:320"$320$"statement.setString(2, ""blank"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:321"$321$"resultSet = statement.executeQuery();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:322"$322$"resultSet.next();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:323"$323$"result = resultSet.getInt(1);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:324"$324$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:325"$325$"catch(SQLException sqlException) {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:326"$326$"String errorMessage"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:327"$327$"= RIFDataLoaderToolMessages.getMessage("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:328"$328$"""getCleaningTotalBlankValues.error.unableToGetTotal"","$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:329"$329$"dataSetConfiguration.getDisplayName());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:330"$330$"RIFServiceException RIFServiceException"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:331"$331$"= new RIFServiceException("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:332"$332$"RIFDataLoaderToolError.DATABASE_QUERY_FAILED, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:333"$333$"errorMessage);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:334"$334$"throw RIFServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:335"$335$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:336"$336$"finally {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:337"$337$"SQLQueryUtility.close(resultSet);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:338"$338$"SQLQueryUtility.close(statement);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:339"$339$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:340"$340$"return result;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:341"$341$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:342"$342$"public Integer getCleaningTotalChangedValues("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:343"$343$"final Connection connection,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:344"$344$"final Writer logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:345"$345$"final DataSetConfiguration dataSetConfiguration)"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:346"$346$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:347"$347$"MSSQLCountQueryFormatter queryFormatter "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:348"$348$"= new MSSQLCountQueryFormatter();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:349"$349$"//KLG_SCHEMA"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:350"$350$"//queryFormatter.setDatabaseSchemaName(""dbo"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:351"$351$"queryFormatter.setCountField(""data_source_id"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:352"$352$"queryFormatter.addFromTable(""rif_audit_table"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:353"$353$"queryFormatter.addWhereParameter(""data_source_id"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:354"$354$"queryFormatter.addWhereParameter(""event_type"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:355"$355$"RIFLogger logger = RIFLogger.getLogger();		"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:356"$356$"logger.debugQuery("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:357"$357$"this, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:358"$358$"""getCleaningTotalChangedValues"","$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:359"$359$"queryFormatter.generateQuery());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:360"$360$"Integer result = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:361"$361$"PreparedStatement statement = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:362"$362$"ResultSet resultSet = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:363"$363$"try {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:364"$364$"int dataSetIdentifier"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:365"$365$"= dataSetManager.getDataSetIdentifier("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:366"$366$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:367"$367$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:368"$368$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:369"$369$"statement "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:370"$370$"= connection.prepareStatement(queryFormatter.generateQuery());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:371"$371$"statement.setInt(1, dataSetIdentifier);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:372"$372$"statement.setString(2, ""value_changed"");			"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:373"$373$"resultSet = statement.executeQuery();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:374"$374$"resultSet.next();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:375"$375$"result = resultSet.getInt(1);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:376"$376$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:377"$377$"catch(SQLException sqlException) {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:378"$378$"String errorMessage"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:379"$379$"= RIFDataLoaderToolMessages.getMessage("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:380"$380$"""getCleaningTotalChangedValues.error.unableToGetTotal"","$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:381"$381$"dataSetConfiguration.getDisplayName());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:382"$382$"RIFServiceException RIFServiceException"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:383"$383$"= new RIFServiceException("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:384"$384$"RIFDataLoaderToolError.DATABASE_QUERY_FAILED, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:385"$385$"errorMessage);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:386"$386$"throw RIFServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:387"$387$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:388"$388$"finally {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:389"$389$"SQLQueryUtility.close(resultSet);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:390"$390$"SQLQueryUtility.close(statement);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:391"$391$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:392"$392$"return result;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:393"$393$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:394"$394$"public Integer getCleaningTotalErrorValues("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:395"$395$"final Connection connection,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:396"$396$"final Writer logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:397"$397$"final DataSetConfiguration dataSetConfiguration)"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:398"$398$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:399"$399$"MSSQLCountQueryFormatter queryFormatter "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:400"$400$"= new MSSQLCountQueryFormatter();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:401"$401$"//KLG_SCHEMA"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:402"$402$"//queryFormatter.setDatabaseSchemaName(""dbo"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:403"$403$"queryFormatter.setCountField(""data_source_id"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:404"$404$"queryFormatter.addFromTable(""rif_audit_table"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:405"$405$"queryFormatter.addWhereParameter(""data_source_id"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:406"$406$"queryFormatter.addWhereParameter(""event_type"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:407"$407$"RIFLogger logger = RIFLogger.getLogger();		"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:408"$408$"logger.debugQuery("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:409"$409$"this, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:410"$410$"""getCleaningTotalErrorValues"","$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:411"$411$"queryFormatter.generateQuery());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:412"$412$"Integer result = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:413"$413$"PreparedStatement statement = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:414"$414$"ResultSet resultSet = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:415"$415$"try {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:416"$416$"int dataSetIdentifier"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:417"$417$"= dataSetManager.getDataSetIdentifier("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:418"$418$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:419"$419$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:420"$420$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:421"$421$"statement "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:422"$422$"= connection.prepareStatement(queryFormatter.generateQuery());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:423"$423$"statement.setInt(1, dataSetIdentifier);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:424"$424$"statement.setString(2, ""error"");			"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:425"$425$"resultSet = statement.executeQuery();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:426"$426$"resultSet.next();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:427"$427$"result = resultSet.getInt(1);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:428"$428$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:429"$429$"catch(SQLException sqlException) {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:430"$430$"String errorMessage"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:431"$431$"= RIFDataLoaderToolMessages.getMessage("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:432"$432$"""getCleaningTotalErrorValues.error.unableToGetTotal"","$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:433"$433$"dataSetConfiguration.getDisplayName());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:434"$434$"RIFServiceException RIFServiceException"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:435"$435$"= new RIFServiceException("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:436"$436$"RIFDataLoaderToolError.DATABASE_QUERY_FAILED, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:437"$437$"errorMessage);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:438"$438$"throw RIFServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:439"$439$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:440"$440$"finally {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:441"$441$"SQLQueryUtility.close(resultSet);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:442"$442$"SQLQueryUtility.close(statement);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:443"$443$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:444"$444$"return result;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:445"$445$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:446"$446$"public Boolean cleaningDetectedBlankValue("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:447"$447$"final Connection connection,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:448"$448$"final Writer logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:449"$449$"final DataSetConfiguration dataSetConfiguration,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:450"$450$"final int rowNumber,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:451"$451$"final String targetBaseFieldName)"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:452"$452$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:453"$453$"SelectQueryFormatter queryFormatter"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:454"$454$"= new MSSQLSelectQueryFormatter();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:455"$455$"//KLG_SCHEMA"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:456"$456$"//queryFormatter.setDatabaseSchemaName(""dbo"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:457"$457$"queryFormatter.addSelectField(""data_source_id"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:458"$458$"queryFormatter.addFromTable(""rif_audit_table"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:459"$459$"queryFormatter.addWhereParameter(""data_source_id"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:460"$460$"queryFormatter.addWhereParameter(""row_number"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:461"$461$"queryFormatter.addWhereParameter(""field_name"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:462"$462$"queryFormatter.addWhereParameter(""event_type"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:463"$463$"RIFLogger logger = RIFLogger.getLogger();		"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:464"$464$"logger.debugQuery("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:465"$465$"this, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:466"$466$"""cleaningDetectedBlankValue"","$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:467"$467$"queryFormatter.generateQuery());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:468"$468$"Boolean result = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:469"$469$"PreparedStatement statement = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:470"$470$"ResultSet resultSet = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:471"$471$"try {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:472"$472$"int dataSetIdentifier"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:473"$473$"= dataSetManager.getDataSetIdentifier("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:474"$474$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:475"$475$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:476"$476$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:477"$477$"statement "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:478"$478$"= connection.prepareStatement(queryFormatter.generateQuery());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:479"$479$"statement.setInt(1, dataSetIdentifier);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:480"$480$"statement.setInt(2, rowNumber);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:481"$481$"statement.setString(3, targetBaseFieldName);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:482"$482$"statement.setString(4, ""blank"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:483"$483$"resultSet = statement.executeQuery();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:484"$484$"result = resultSet.next();			"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:485"$485$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:486"$486$"catch(SQLException sqlException) {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:487"$487$"String errorMessage"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:488"$488$"= RIFDataLoaderToolMessages.getMessage("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:489"$489$"""cleaningDetectedBlankValue.error.unableToGetStatus"","$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:490"$490$"String.valueOf(rowNumber),"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:491"$491$"targetBaseFieldName,					"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:492"$492$"dataSetConfiguration.getDisplayName());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:493"$493$"RIFServiceException RIFServiceException"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:494"$494$"= new RIFServiceException("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:495"$495$"RIFDataLoaderToolError.DATABASE_QUERY_FAILED, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:496"$496$"errorMessage);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:497"$497$"throw RIFServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:498"$498$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:499"$499$"finally {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:500"$500$"SQLQueryUtility.close(resultSet);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:501"$501$"SQLQueryUtility.close(statement);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:502"$502$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:503"$503$"return result;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:504"$504$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:505"$505$"public Boolean cleaningDetectedChangedValue("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:506"$506$"final Connection connection,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:507"$507$"final Writer logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:508"$508$"final DataSetConfiguration dataSetConfiguration,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:509"$509$"final int rowNumber,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:510"$510$"final String targetBaseFieldName)"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:511"$511$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:512"$512$"SelectQueryFormatter queryFormatter"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:513"$513$"= new MSSQLSelectQueryFormatter();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:514"$514$"//KLG_SCHEMA"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:515"$515$"//queryFormatter.setDatabaseSchemaName(""dbo"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:516"$516$"queryFormatter.addSelectField(""data_source_id"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:517"$517$"queryFormatter.addFromTable(""rif_audit_table"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:518"$518$"queryFormatter.addWhereParameter(""data_source_id"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:519"$519$"queryFormatter.addWhereParameter(""row_number"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:520"$520$"queryFormatter.addWhereParameter(""field_name"");		"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:521"$521$"queryFormatter.addWhereParameter(""event_type"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:522"$522$"RIFLogger logger = RIFLogger.getLogger();		"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:523"$523$"logger.debugQuery("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:524"$524$"this, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:525"$525$"""cleaningDetectedChangedValue"","$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:526"$526$"queryFormatter.generateQuery());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:527"$527$"Boolean result = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:528"$528$"PreparedStatement statement = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:529"$529$"ResultSet resultSet = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:530"$530$"try {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:531"$531$"int dataSetIdentifier"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:532"$532$"= dataSetManager.getDataSetIdentifier("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:533"$533$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:534"$534$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:535"$535$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:536"$536$"statement "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:537"$537$"= connection.prepareStatement(queryFormatter.generateQuery());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:538"$538$"statement.setInt(1, dataSetIdentifier);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:539"$539$"statement.setInt(2, rowNumber);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:540"$540$"statement.setString(3, targetBaseFieldName);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:541"$541$"statement.setString(4, ""value_changed"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:542"$542$"resultSet = statement.executeQuery();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:543"$543$"result = resultSet.next();			"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:544"$544$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:545"$545$"catch(SQLException sqlException) {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:546"$546$"String errorMessage"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:547"$547$"= RIFDataLoaderToolMessages.getMessage("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:548"$548$"""cleaningDetectedChangedValue.error.unableToGetStatus"","$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:549"$549$"String.valueOf(rowNumber),"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:550"$550$"targetBaseFieldName,					"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:551"$551$"dataSetConfiguration.getDisplayName());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:552"$552$"RIFServiceException RIFServiceException"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:553"$553$"= new RIFServiceException("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:554"$554$"RIFDataLoaderToolError.DATABASE_QUERY_FAILED, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:555"$555$"errorMessage);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:556"$556$"throw RIFServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:557"$557$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:558"$558$"finally {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:559"$559$"SQLQueryUtility.close(resultSet);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:560"$560$"SQLQueryUtility.close(statement);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:561"$561$"}		"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:562"$562$"return result;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:563"$563$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:564"$564$"public Boolean cleaningDetectedErrorValue("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:565"$565$"final Connection connection,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:566"$566$"final Writer logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:567"$567$"final DataSetConfiguration dataSetConfiguration,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:568"$568$"final int rowNumber,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:569"$569$"final String targetBaseFieldName)"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:570"$570$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:571"$571$"SelectQueryFormatter queryFormatter"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:572"$572$"= new MSSQLSelectQueryFormatter();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:573"$573$"//KLG_SCHEMA"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:574"$574$"//queryFormatter.setDatabaseSchemaName(""dbo"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:575"$575$"queryFormatter.addSelectField(""data_source_id"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:576"$576$"queryFormatter.addFromTable(""rif_audit_table"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:577"$577$"queryFormatter.addWhereParameter(""data_source_id"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:578"$578$"queryFormatter.addWhereParameter(""row_number"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:579"$579$"queryFormatter.addWhereParameter(""field_name"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:580"$580$"queryFormatter.addWhereParameter(""event_type"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:581"$581$"RIFLogger logger = RIFLogger.getLogger();		"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:582"$582$"logger.debugQuery("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:583"$583$"this, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:584"$584$"""cleaningDetectedErrorValue"","$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:585"$585$"queryFormatter.generateQuery());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:586"$586$"Boolean result = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:587"$587$"PreparedStatement statement = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:588"$588$"ResultSet resultSet = null;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:589"$589$"try {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:590"$590$"int dataSetIdentifier"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:591"$591$"= dataSetManager.getDataSetIdentifier("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:592"$592$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:593"$593$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:594"$594$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:595"$595$"statement "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:596"$596$"= connection.prepareStatement(queryFormatter.generateQuery());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:597"$597$"statement.setInt(1, dataSetIdentifier);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:598"$598$"statement.setInt(2, rowNumber);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:599"$599$"statement.setString(3, targetBaseFieldName);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:600"$600$"statement.setString(4, ""error"");"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:601"$601$"resultSet = statement.executeQuery();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:602"$602$"result = resultSet.next();			"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:603"$603$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:604"$604$"catch(SQLException sqlException) {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:605"$605$"String errorMessage"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:606"$606$"= RIFDataLoaderToolMessages.getMessage("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:607"$607$"""cleaningDetectedErrorValue.error.unableToGetStatus"","$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:608"$608$"String.valueOf(rowNumber),"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:609"$609$"targetBaseFieldName,					"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:610"$610$"dataSetConfiguration.getDisplayName());"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:611"$611$"RIFServiceException RIFServiceException"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:612"$612$"= new RIFServiceException("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:613"$613$"RIFDataLoaderToolError.DATABASE_QUERY_FAILED, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:614"$614$"errorMessage);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:615"$615$"throw RIFServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:616"$616$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:617"$617$"finally {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:618"$618$"SQLQueryUtility.close(resultSet);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:619"$619$"SQLQueryUtility.close(statement);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:620"$620$"}		"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:621"$621$"return result;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:622"$622$"}	"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:623"$623$"public String[][] getVarianceInFieldData("$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:624"$624$"final Connection connection, "$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:625"$625$"final DataSetFieldConfiguration dataSetFieldConfiguration)"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:626"$626$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:627"$627$"String fieldOfInterest"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:628"$628$"= dataSetFieldConfiguration.getLoadFieldName();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:629"$629$"String coreDataSetName"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:630"$630$"= dataSetFieldConfiguration.getCoreFieldName();"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:631"$631$"String loadTableName"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:632"$632$"= RIFTemporaryTablePrefixes.EXTRACT.getTableName(coreDataSetName);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:633"$633$"//KLG: @TODO - eliminate junk data and uncomment code below"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:634"$634$"//to make it obtain real data"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:635"$635$"String[][] results = new String[50][2];"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:636"$636$"for (int i = 0; i < 50; i++) {"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:637"$637$"results[i][0] = ""value""+ String.valueOf(i);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:638"$638$"results[i][1] = String.valueOf(50 - i);"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:639"$639$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:640"$640$"return results;"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:641"$641$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:642"$642$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:643"$643$"// Section Errors and Validation"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:644"$644$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:645"$645$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:646"$646$"// Section Interfaces"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:647"$647$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:648"$648$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:649"$649$"// Section Override"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:650"$650$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"secured\MSSQLCleanWorkflowManager.java:651"$651$"}"$"ignore"$0$"..\sql-dataset\test\secured\MSSQLCleanWorkflowManager.java"
"flawed\ListViewFragment.java:1"$1$"package com.example.biorobot.memorymanager2;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:2"$2$"import android.app.AlarmManager;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:3"$3$"import android.app.Fragment;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:4"$4$"import android.app.FragmentManager;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:5"$5$"import android.app.FragmentTransaction;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:6"$6$"import android.app.PendingIntent;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:7"$7$"import android.content.ContentValues;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:8"$8$"import android.content.Context;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:9"$9$"import android.content.Intent;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:10"$10$"import android.database.Cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:11"$11$"import android.database.sqlite.SQLiteDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:12"$12$"import android.os.Bundle;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:13"$13$"import android.util.Log;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:14"$14$"import android.view.LayoutInflater;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:15"$15$"import android.view.View;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:16"$16$"import android.view.ViewGroup;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:17"$17$"import android.widget.AdapterView;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:18"$18$"import android.widget.ArrayAdapter;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:19"$19$"import android.widget.Button;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:20"$20$"import android.widget.ListView;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:21"$21$"import android.widget.TextView;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:22"$22$"import android.widget.Toast;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:23"$23$"import com.example.biorobot.memorymanager2.Event;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:24"$24$"import com.example.biorobot.memorymanager2.R;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:25"$25$"import com.example.biorobot.memorymanager2.Reminder;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:26"$26$"import com.example.biorobot.memorymanager2.ReminderContract.ReminderEntry;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:27"$27$"import java.sql.SQLOutput;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:28"$28$"import java.util.ArrayList;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:29"$29$"import java.util.GregorianCalendar;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:30"$30$"import java.util.List;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:31"$31$"public class ListViewFragment extends Fragment {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:32"$32$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:33"$33$"* reassign list in savedInstanceState?"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:34"$34$"* or simply move it there?"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:35"$35$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:36"$36$"ListView item_list;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:37"$37$"View itemView;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:38"$38$"Button createReminderButton;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:39"$39$"Button clearButton;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:40"$40$"//saves position when user clicks on a list item."$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:41"$41$"int mPosition = 0;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:42"$42$"List<Reminder> reminder_list = new ArrayList<Reminder>();"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:43"$43$"Communicator comm;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:44"$44$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:45"$45$"public void onActivityCreated(Bundle savedInstanceState) {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:46"$46$"super.onActivityCreated(savedInstanceState);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:47"$47$"comm = (Communicator) getActivity();"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:48"$48$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:49"$49$"public void getReminder(Reminder reminderGet) {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:50"$50$"if (reminderGet.isDoSetAlarm() == true) {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:51"$51$"Long time = reminderGet.getTime();"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:52"$52$"Intent intentAlarm = new Intent(getActivity(), Alarm.class);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:53"$53$"AlarmManager alarmManager = (AlarmManager) getActivity().getSystemService(Context.ALARM_SERVICE);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:54"$54$"alarmManager.set(AlarmManager.RTC_WAKEUP, time, PendingIntent.getBroadcast(getActivity(), 1, intentAlarm, PendingIntent.FLAG_UPDATE_CURRENT));"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:55"$55$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:56"$56$"reminder_list.add(reminderGet);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:57"$57$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:58"$58$"public void replaceReminder(Reminder pushReminder) {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:59"$59$"reminder_list.set(mPosition, pushReminder);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:60"$60$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:61"$61$"public void removeReminder() {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:62"$62$"reminder_list.remove(mPosition);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:63"$63$"item_list.deferNotifyDataSetChanged();"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:64"$64$"ReminderDbHelper mDbHelper = new ReminderDbHelper(getActivity());"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:65"$65$"SQLiteDatabase db = mDbHelper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:66"$66$"db.execSQL(""DELETE FROM Reminder WHERE reminderid = "" + mPosition);"$"count"$1$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:67"$67$"db.close();"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:68"$68$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:69"$69$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:70"$70$"public void onPause() {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:71"$71$"super.onPause();"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:72"$72$"ReminderDbHelper mDbHelper = new ReminderDbHelper(getActivity());"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:73"$73$"SQLiteDatabase db = mDbHelper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:74"$74$"db.execSQL(""DELETE FROM Reminder;"");"$"count"$1$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:75"$75$"for(int x = 0; x < reminder_list.size(); x++) {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:76"$76$"Reminder r = reminder_list.get(x);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:77"$77$"ContentValues values = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:78"$78$"values.put(ReminderEntry.COLUMN_NAME_REMINDER_ID, x);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:79"$79$"values.put(ReminderEntry.COLUMN_NAME_TYPE, r.getType());"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:80"$80$"values.put(ReminderEntry.COLUMN_NAME_DESCRIPTION, r.getDescription());"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:81"$81$"values.put(ReminderEntry.COLUMN_NAME_TIME, r.getTime());"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:82"$82$"values.put(ReminderEntry.COLUMN_NAME_ALARM, r.isDoSetAlarm());"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:83"$83$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:84"$84$"db.insert("$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:85"$85$"ReminderEntry.TABLE_NAME,"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:86"$86$"null,"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:87"$87$"values);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:88"$88$"} catch (Exception e) {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:89"$89$"Log.e(""reminder_save"", e.getMessage());"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:90"$90$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:91"$91$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:92"$92$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:93"$93$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:94"$94$"public void onResume() {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:95"$95$"super.onResume();"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:96"$96$"try"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:97"$97$"{"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:98"$98$"if(reminder_list == null) {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:99"$99$"reminder_list = new ArrayList<Reminder>();"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:100"$100$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:101"$101$"ReminderDbHelper mDbHelper = new ReminderDbHelper(getActivity());"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:102"$102$"SQLiteDatabase db = mDbHelper.getReadableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:103"$103$"String [] projection = {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:104"$104$"ReminderEntry.COLUMN_NAME_TYPE,"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:105"$105$"ReminderEntry.COLUMN_NAME_DESCRIPTION,"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:106"$106$"ReminderEntry.COLUMN_NAME_TIME,"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:107"$107$"ReminderEntry.COLUMN_NAME_REMINDER_ID,"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:108"$108$"ReminderEntry.COLUMN_NAME_ALARM"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:109"$109$"};"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:110"$110$"String sortOrder ="$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:111"$111$"ReminderEntry.COLUMN_NAME_REMINDER_ID + "" ASC"";"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:112"$112$"Cursor c = db.query("$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:113"$113$"ReminderEntry.TABLE_NAME,"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:114"$114$"projection,"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:115"$115$"null,"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:116"$116$"null,"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:117"$117$"null,"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:118"$118$"null,"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:119"$119$"sortOrder"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:120"$120$");"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:121"$121$"if(c.moveToFirst())"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:122"$122$"{"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:123"$123$"do {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:124"$124$"int typeColIndex = c.getColumnIndex(ReminderEntry.COLUMN_NAME_TYPE);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:125"$125$"String type = c.getString(typeColIndex);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:126"$126$"int descColIndex = c.getColumnIndex(ReminderEntry.COLUMN_NAME_DESCRIPTION);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:127"$127$"String desc = c.getString(descColIndex);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:128"$128$"int timeColIndex = c.getColumnIndex(ReminderEntry.COLUMN_NAME_TIME);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:129"$129$"long time = c.getLong(timeColIndex);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:130"$130$"int alarmColIndex = c.getColumnIndex(ReminderEntry.COLUMN_NAME_ALARM);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:131"$131$"int valueAlarm = c.getInt(alarmColIndex);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:132"$132$"boolean alarm = false;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:133"$133$"if (valueAlarm == 0) {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:134"$134$"alarm = false;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:135"$135$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:136"$136$"else if (valueAlarm == 1) {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:137"$137$"alarm = true;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:138"$138$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:139"$139$"else if (valueAlarm == -1) {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:140"$140$"Log.e(""inside cursor in listViewFragment."", ""FATAL: alarm == -1 error"");"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:141"$141$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:142"$142$"else {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:143"$143$"Log.e(""listView cursor for alarm is wrong! valueAlarm = "", valueAlarm + """");"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:144"$144$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:145"$145$"Reminder r = new Reminder(type,desc,time,alarm);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:146"$146$"int reminderIdColIndex = c.getColumnIndex(ReminderEntry.COLUMN_NAME_REMINDER_ID);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:147"$147$"int reminderID = c.getInt(reminderIdColIndex);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:148"$148$"if (reminderID >= reminder_list.size()) {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:149"$149$"reminder_list.add(r);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:150"$150$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:151"$151$"} while(c.moveToNext()); //runs while there are rows in the cursor.."$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:152"$152$"c.close();"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:153"$153$"// continue to the next row"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:154"$154$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:155"$155$"} catch (Exception e) {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:156"$156$"Log.e(""ListViewFragment_OnResume"", e.getMessage());"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:157"$157$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:158"$158$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:159"$159$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:160"$160$"public void onSaveInstanceState(Bundle saveData) {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:161"$161$"super.onSaveInstanceState(saveData);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:162"$162$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:163"$163$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:164"$164$"public void onCreate(Bundle savedInstanceState) {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:165"$165$"super.onCreate(savedInstanceState);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:166"$166$"if (savedInstanceState == null) {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:167"$167$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:168"$168$"else {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:169"$169$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:170"$170$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:171"$171$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:172"$172$"public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:173"$173$"if (savedInstanceState == null)"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:174"$174$"{"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:175"$175$"if (item_list != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:176"$176$"item_list.deferNotifyDataSetChanged();"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:177"$177$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:178"$178$"itemView = inflater.inflate(R.layout.list_view_fragment, container, false);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:179"$179$"createReminderButton = (Button) itemView.findViewById(R.id.addReminderButton);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:180"$180$"clearButton = (Button) itemView.findViewById(R.id.clearButton);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:181"$181$"createReminderButton.setOnClickListener(new View.OnClickListener() {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:182"$182$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:183"$183$"* this is the ADD BUTTON"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:184"$184$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:185"$185$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:186"$186$"public void onClick(View view) {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:187"$187$"AddReminderButtonCommunicator a = (AddReminderButtonCommunicator)getActivity();"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:188"$188$"a.onCreateReminderClicked();"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:189"$189$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:190"$190$"});"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:191"$191$"clearButton.setOnClickListener(new View.OnClickListener() {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:192"$192$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:193"$193$"public void onClick(View view) {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:194"$194$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:195"$195$"ReminderDbHelper mDbHelper = new ReminderDbHelper(getActivity());"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:196"$196$"SQLiteDatabase db = mDbHelper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:197"$197$"db.execSQL(""DELETE FROM Reminder;"");"$"count"$1$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:198"$198$"reminder_list.clear();"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:199"$199$"item_list = populateListView(itemView);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:200"$200$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:201"$201$"catch (Exception e) {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:202"$202$"Log.e(""clearButton clicked Error! -- "", e.getMessage());"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:203"$203$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:204"$204$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:205"$205$"});"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:206"$206$"item_list = populateListView(itemView);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:207"$207$"item_list.setOnItemClickListener(new AdapterView.OnItemClickListener() {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:208"$208$"public void onItemClick(AdapterView<?> parent, View view, int position, long id) {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:209"$209$"String toast_text = parent.getItemAtPosition(position).toString();"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:210"$210$"Toast.makeText(getActivity().getApplicationContext(), toast_text, Toast.LENGTH_LONG).show();"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:211"$211$"Log.v(""inside ListViewFragment onItemClick. Position == "", position + """");"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:212"$212$"EventCommunicator eventComm = (EventCommunicator) getActivity();"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:213"$213$"Reminder ful_reminder = reminder_list.get(position);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:214"$214$"mPosition = position;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:215"$215$"eventComm.readReminder(ful_reminder);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:216"$216$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:217"$217$"});"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:218"$218$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:219"$219$"return itemView;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:220"$220$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:221"$221$"private class MyListAdapter extends ArrayAdapter<Reminder> {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:222"$222$"public MyListAdapter() {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:223"$223$"super(getActivity(), R.layout.item_view, reminder_list);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:224"$224$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:225"$225$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:226"$226$"public View getView(int position, View convertView, ViewGroup parent) {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:227"$227$"View itemView = convertView;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:228"$228$"if (itemView == null) {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:229"$229$"itemView = getActivity().getLayoutInflater().inflate(R.layout.item_view, parent, false);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:230"$230$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:231"$231$"Reminder currentReminder = reminder_list.get(position);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:232"$232$"System.out.println(currentReminder.getType());"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:233"$233$"TextView typeText = (TextView) itemView.findViewById(R.id.item_textType);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:234"$234$"typeText.setText(currentReminder.getType());"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:235"$235$"TextView descText = (TextView) itemView.findViewById(R.id.item_textDesc);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:236"$236$"descText.setText(currentReminder.getDescription());"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:237"$237$"TextView timeText = (TextView) itemView.findViewById(R.id.item_textTime);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:238"$238$"timeText.setText("""" + currentReminder.getFormatedDateAndTime());"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:239"$239$"return itemView;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:240"$240$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:241"$241$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:242"$242$"private ListView populateListView(View itemView) {"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:243"$243$"ArrayAdapter<Reminder> adapter = new MyListAdapter();"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:244"$244$"ListView list = (ListView) itemView.findViewById(R.id.eventListView);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:245"$245$"list.setAdapter(adapter);"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:246"$246$"return list;"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:247"$247$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"flawed\ListViewFragment.java:248"$248$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ListViewFragment.java"
"secured\MariaDBCatalogFactory.java:1"$1$"/*"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:2"$2$"* This file is part of Relaxe."$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:3"$3$"* Copyright (c) 2014 Topi Nieminen"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:4"$4$"* Author: Topi Nieminen <topi.nieminen@gmail.com>"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:5"$5$"*"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:6"$6$"* This program is free software; you can redistribute it and/or modify"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:7"$7$"* it under the terms of the GNU Affero General Public License version 3"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:8"$8$"* as published by the Free Software Foundation."$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:9"$9$"*"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:10"$10$"* This program is distributed in the hope that it will be useful, but"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:11"$11$"* WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:12"$12$"* or FITNESS FOR A PARTICULAR PURPOSE."$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:13"$13$"* See the GNU Affero General Public License for more details."$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:14"$14$"* You should have received a copy of the GNU Affero General Public License"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:15"$15$"* along with this program; if not, see http://www.gnu.org/licenses or write to"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:16"$16$"* the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:17"$17$"* Boston, MA, 02110-1301 USA."$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:18"$18$"*"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:19"$19$"* The interactive user interfaces in modified source and object code versions"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:20"$20$"* of this program must display Appropriate Legal Notices, as required under"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:21"$21$"* Section 5 of the GNU Affero General Public License."$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:22"$22$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:23"$23$"package com.appspot.relaxe.rdbms.mariadb;"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:24"$24$"import java.sql.Connection;"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:25"$25$"import java.sql.DatabaseMetaData;"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:26"$26$"import java.sql.ResultSet;"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:27"$27$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:28"$28$"import org.slf4j.Logger;"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:29"$29$"import org.slf4j.LoggerFactory;"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:30"$30$"import com.appspot.relaxe.env.mariadb.MariaDBEnvironment;"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:31"$31$"import com.appspot.relaxe.expr.Identifier;"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:32"$32$"import com.appspot.relaxe.expr.SchemaName;"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:33"$33$"import com.appspot.relaxe.meta.ImmutableSchema;"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:34"$34$"import com.appspot.relaxe.meta.PrimaryKey;"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:35"$35$"import com.appspot.relaxe.rdbms.DefaultCatalogFactory;"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:36"$36$"public class MariaDBCatalogFactory extends DefaultCatalogFactory {"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:37"$37$"private static Logger logger = LoggerFactory.getLogger(MariaDBCatalogFactory.class);"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:38"$38$"public MariaDBCatalogFactory(MariaDBEnvironment env) {"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:39"$39$"super(env);	"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:40"$40$"}"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:41"$41$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:42"$42$"public String getCatalogNameFromSchemas(DatabaseMetaData meta, ResultSet schemas)"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:43"$43$"throws SQLException {		"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:44"$44$"return null;"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:45"$45$"}"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:46"$46$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:47"$47$"public String getSchemaNameFromSchemas(DatabaseMetaData meta, ResultSet rs) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:48"$48$"return rs.getString(1);"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:49"$49$"}"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:50"$50$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:51"$51$"public String getCatalogNameFromTables(DatabaseMetaData meta, ResultSet tables) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:52"$52$"return null;"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:53"$53$"}"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:54"$54$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:55"$55$"public String getSchemaNameFromTables(DatabaseMetaData meta, ResultSet tables)"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:56"$56$"throws SQLException {		"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:57"$57$"return tables.getString(1);"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:58"$58$"}"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:59"$59$"public static Logger logger() {"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:60"$60$"return MariaDBCatalogFactory.logger;"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:61"$61$"}"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:62"$62$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:63"$63$"protected String getCatalogPattern(SchemaName s) {"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:64"$64$"// yes, schema pattern"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:65"$65$"return super.getSchemaPattern(s);"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:66"$66$"}"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:67"$67$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:68"$68$"protected String getSchemaPattern(SchemaName s) {"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:69"$69$"// yes, null"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:70"$70$"return null;		"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:71"$71$"}"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:72"$72$"//	@Override"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:73"$73$"//	protected Schema getSchema(DefaultMutableCatalog catalog, String sch, String cat) {		"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:74"$74$"//		return catalog.schemas().get(sch);"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:75"$75$"//	}"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:76"$76$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:77"$77$"public ResultSet getSchemas(DatabaseMetaData meta) throws SQLException {	 "$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:78"$78$"return meta.getCatalogs();"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:79"$79$"}"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:80"$80$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:81"$81$"public String getSchemaNameFromPrimaryKeys(DatabaseMetaData meta, ResultSet pkcols) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:82"$82$"return pkcols.getString(1);     "$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:83"$83$"}"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:84"$84$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:85"$85$"public String getCatalogNameFromPrimaryKeys(DatabaseMetaData meta, ResultSet pkcols) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:86"$86$"return null;     "$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:87"$87$"}"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:88"$88$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:89"$89$"protected String getCatalogNameParameter(SchemaName s) {"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:90"$90$"return s.getSchemaName().getContent();"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:91"$91$"}"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:92"$92$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:93"$93$"protected String getSchemaNameParameter(SchemaName s) {"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:94"$94$"return null;"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:95"$95$"}"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:96"$96$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:97"$97$"public String getCatalogNameFromImportedKeys(DatabaseMetaData meta, ResultSet fkcols) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:98"$98$"return null;     "$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:99"$99$"}"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:100"$100$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:101"$101$"protected String getSchemaNameFromImportedKeys(DatabaseMetaData meta, ResultSet fkcols) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:102"$102$"return fkcols.getString(1);     "$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:103"$103$"}"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:104"$104$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:105"$105$"public String getReferencingTableCatalogName(DatabaseMetaData meta, ResultSet fkcols) throws SQLException {       "$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:106"$106$"return null;"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:107"$107$"}"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:108"$108$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:109"$109$"public String getReferencingTableSchemaName(DatabaseMetaData meta, ResultSet fkcols) throws SQLException {        "$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:110"$110$"return fkcols.getString(5);"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:111"$111$"}"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:112"$112$"//    @Override"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:113"$113$"//    public CatalogMap createAll(Connection c) throws QueryException,"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:114"$114$"//            SQLException {        "$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:115"$115$"//        DefaultCatalogMap cm = new DefaultCatalogMap(getEnvironment());        "$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:116"$116$"//        Catalog cat = this.create(c);"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:117"$117$"//        cm.add((DefaultMutableCatalog) cat);"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:118"$118$"//        return cm;"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:119"$119$"//    }"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:120"$120$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:121"$121$"protected void addPrimaryKey(PrimaryKey pk, ImmutableSchema.Builder sb) {"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:122"$122$"Identifier pkname = (pk == null) ? null : pk.getUnqualifiedName();"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:123"$123$"String name = (pkname == null) ? null : pkname.getContent();"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:124"$124$"if (name != null && (!""PRIMARY"".equals(name))) {"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:125"$125$"sb.add(pk);"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:126"$126$"}"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:127"$127$"}	"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:128"$128$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:129"$129$"public String getCatalogName(Connection c) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:130"$130$"return null;"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:131"$131$"}"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:132"$132$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:133"$133$"protected Identifier id(String name) {"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:134"$134$"return (name == null) ? null : getEnvironment().getIdentifierRules().toDelimitedIdentifier(name);		"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:135"$135$"}"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"secured\MariaDBCatalogFactory.java:136"$136$"}"$"ignore"$0$"..\sql-dataset\test\secured\MariaDBCatalogFactory.java"
"flawed\UserActionsDataSource.java:1"$1$"package com.aqib.icrave.model;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:2"$2$"import android.content.ContentValues;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:3"$3$"import android.content.Context;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:4"$4$"import android.database.Cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:5"$5$"import android.database.CursorIndexOutOfBoundsException;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:6"$6$"import android.database.sqlite.SQLiteDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:7"$7$"import android.util.Log;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:8"$8$"import org.apache.http.HttpEntity;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:9"$9$"import org.apache.http.HttpResponse;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:10"$10$"import org.apache.http.client.HttpClient;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:11"$11$"import org.apache.http.client.methods.HttpPut;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:12"$12$"import org.apache.http.conn.HttpHostConnectException;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:13"$13$"import org.apache.http.entity.StringEntity;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:14"$14$"import org.apache.http.util.EntityUtils;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:15"$15$"import org.json.JSONArray;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:16"$16$"import org.json.JSONException;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:17"$17$"import org.json.simple.JSONObject;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:18"$18$"import java.io.IOException;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:19"$19$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:20"$20$"import java.text.MessageFormat;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:21"$21$"import java.text.ParseException;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:22"$22$"import java.util.ArrayList;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:23"$23$"import java.util.Date;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:24"$24$"import java.util.List;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:25"$25$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:26"$26$"* Created by aqib on 22/01/14."$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:27"$27$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:28"$28$"public class UserActionsDataSource {"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:29"$29$"private SQLiteDatabase db;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:30"$30$"private DatabaseHandler dbHandler;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:31"$31$"public UserActionsDataSource(Context context) {"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:32"$32$"dbHandler = DatabaseHandler.getDatabaseHandlder(context);"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:33"$33$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:34"$34$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:35"$35$"* Creates a connection to the database"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:36"$36$"*"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:37"$37$"* @throws SQLException"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:38"$38$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:39"$39$"public void open() throws SQLException {"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:40"$40$"db = dbHandler.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:41"$41$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:42"$42$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:43"$43$"* Closes the connection to the database"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:44"$44$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:45"$45$"public void close() {"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:46"$46$"db.close();"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:47"$47$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:48"$48$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:49"$49$"* Creates a new User Action with the default values"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:50"$50$"*"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:51"$51$"* @return _id of the new User Action"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:52"$52$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:53"$53$"public long createUserAction() {"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:54"$54$"ContentValues values = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:55"$55$"values.put(UserAction.COLUMN_NAME_CREATED_TIME, new Date().getTime() / 1000);"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:56"$56$"return db.insert(UserAction.TABLE_NAME, null, values);"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:57"$57$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:58"$58$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:59"$59$"* Get the row count for all cravings (only active record)"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:60"$60$"* @return A row count"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:61"$61$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:62"$62$"public long getActiveRowCount() {"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:63"$63$"return queryAllHistory().getCount();"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:64"$64$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:65"$65$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:66"$66$"* Get the row count for a specific craving decision (only active record)"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:67"$67$"* @param cravingDecisionId The craving decision to count"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:68"$68$"* @return A row count"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:69"$69$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:70"$70$"public long getRowCount (int cravingDecisionId) {"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:71"$71$"String query = MessageFormat.format("$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:72"$72$"""SELECT {3}.{0}, {4}.{1}, {3}.{2}, {4}.{6} "" +"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:73"$73$"""FROM {3} "" +"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:74"$74$"""INNER JOIN {4} ON {3}.{0}={4}.{5} "" +"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:75"$75$"""WHERE {3}.{7}=\""TRUE\"" "" +"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:76"$76$"""AND {4}.{6} = {8}"","$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:77"$77$"UserAction.COLUMN_NAME_ID,"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:78"$78$"UserActionImage.COLUMN_NAME_CREATED_TIME,"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:79"$79$"UserAction.COLUMN_NAME_SYNCHRONISED,"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:80"$80$"UserAction.TABLE_NAME,"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:81"$81$"UserActionImage.TABLE_NAME,"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:82"$82$"UserActionImage.COLUMN_NAME_USER_ACTION_ID,"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:83"$83$"UserActionImage.COLUMN_NAME_EATING_DECISION_ID,"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:84"$84$"UserAction.COLUMN_NAME_ACTIVE,"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:85"$85$"cravingDecisionId"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:86"$86$");"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:87"$87$"Log.d(""UserActionDataSource"", String.format(""getRowCount: %s"", query));"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:88"$88$"return db.rawQuery(query, null).getCount();"$"count"$1$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:89"$89$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:90"$90$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:91"$91$"* Get the last user action ID"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:92"$92$"*"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:93"$93$"* @return ID as long"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:94"$94$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:95"$95$"public long getLastId() {"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:96"$96$"Cursor c = db.query(UserAction.TABLE_NAME, new String[]{UserAction.COLUMN_NAME_ID}, null, null, null, null, String.format(""%s DESC"", UserAction.COLUMN_NAME_ID), ""1"");"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:97"$97$"c.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:98"$98$"return c.getLong(0);"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:99"$99$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:100"$100$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:101"$101$"* Get the last *active* user action ID which has a UserActionImage"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:102"$102$"*"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:103"$103$"* @return ID as long"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:104"$104$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:105"$105$"public long getLastActiveId() throws CursorIndexOutOfBoundsException {"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:106"$106$"Cursor c = db.rawQuery(MessageFormat.format("$"count"$1$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:107"$107$"""SELECT {1}.{0} "" +"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:108"$108$"""FROM {1} "" +"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:109"$109$"""INNER JOIN {2} "" +"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:110"$110$"""ON {1}.{0} = {2}.{3} "" +"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:111"$111$"""WHERE {1}.{5} = \""TRUE\"" "" +"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:112"$112$"""ORDER BY {1}.{4} DESC "" +"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:113"$113$"""LIMIT 1;"","$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:114"$114$"UserAction.COLUMN_NAME_ID,"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:115"$115$"UserAction.TABLE_NAME,"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:116"$116$"UserActionImage.TABLE_NAME,"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:117"$117$"UserActionImage.COLUMN_NAME_USER_ACTION_ID,"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:118"$118$"UserAction.COLUMN_NAME_CREATED_TIME,"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:119"$119$"UserAction.COLUMN_NAME_ACTIVE"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:120"$120$"), null);"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:121"$121$"c.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:122"$122$"return c.getLong(0);"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:123"$123$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:124"$124$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:125"$125$"* The the last created time of the most recent active record."$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:126"$126$"* @return The date if the action exists, otherwise a newly initialised date object."$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:127"$127$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:128"$128$"public UserAction getLastCreated() throws CursorIndexOutOfBoundsException {"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:129"$129$"long lastId = getLastActiveId();"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:130"$130$"Cursor c = db.query("$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:131"$131$"UserAction.TABLE_NAME,"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:132"$132$"UserAction.ALL_COLUMNS,"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:133"$133$"String.format(""%s=?"", UserAction.COLUMN_NAME_ID),"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:134"$134$"new String[] {String.valueOf(lastId)},"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:135"$135$"null,"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:136"$136$"null,"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:137"$137$"null"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:138"$138$");"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:139"$139$"if (c.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:140"$140$"return getUserAction(c);"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:141"$141$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:142"$142$"throw new CursorIndexOutOfBoundsException(""No row to return"");"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:143"$143$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:144"$144$"private UserAction getUserAction(Cursor c) {"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:145"$145$"UserAction action = new UserAction();"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:146"$146$"action.setActive(c.getString(c.getColumnIndex(UserAction.COLUMN_NAME_ACTIVE)).equals(""TRUE""));"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:147"$147$"action.setCreatedTime(new Date(c.getLong(c.getColumnIndex(UserAction.COLUMN_NAME_CREATED_TIME))));"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:148"$148$"action.setId(c.getLong(c.getColumnIndex(UserAction.COLUMN_NAME_ID)));"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:149"$149$"action.setSynchronised(c.getString(c.getColumnIndex(UserAction.COLUMN_NAME_ID)).equals(""TRUE""));"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:150"$150$"action.setUndoTime(new Date(c.getLong(c.getColumnIndex(UserAction.COLUMN_NAME_UNDO_TIME))));"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:151"$151$"return action;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:152"$152$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:153"$153$"public List<UserAction> getAllUnsynced() throws ParseException {"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:154"$154$"List<UserAction> actions = new ArrayList<UserAction>();"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:155"$155$"Cursor c = db.query(UserAction.TABLE_NAME, UserAction.ALL_COLUMNS, String.format(""%s=?"", UserAction.COLUMN_NAME_SYNCHRONISED), new String[]{""FALSE""}, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:156"$156$"while (c.moveToNext()) {"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:157"$157$"actions.add(getUserAction(c));"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:158"$158$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:159"$159$"Log.d(""UserActionDataSource/getAllUnsynced"", String.format(""Return %d user actions"", actions.size()));"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:160"$160$"return actions;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:161"$161$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:162"$162$"public Cursor queryAllHistory () {"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:163"$163$"String query = MessageFormat.format("$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:164"$164$"""SELECT {3}.{0}, {4}.{1}, {3}.{2}, {4}.{6} "" +"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:165"$165$"""FROM {3} "" +"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:166"$166$"""INNER JOIN {4} ON {3}.{0}={4}.{5} "" +"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:167"$167$"""WHERE {3}.{7}=\""TRUE\"" "" +"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:168"$168$"""AND {4}.{6} != {8} "" +"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:169"$169$"""ORDER BY {4}.{1} DESC;"","$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:170"$170$"UserAction.COLUMN_NAME_ID,"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:171"$171$"UserActionImage.COLUMN_NAME_CREATED_TIME,"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:172"$172$"UserAction.COLUMN_NAME_SYNCHRONISED,"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:173"$173$"UserAction.TABLE_NAME,"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:174"$174$"UserActionImage.TABLE_NAME,"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:175"$175$"UserActionImage.COLUMN_NAME_USER_ACTION_ID,"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:176"$176$"UserActionImage.COLUMN_NAME_EATING_DECISION_ID,"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:177"$177$"UserAction.COLUMN_NAME_ACTIVE,"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:178"$178$"CravingDecision.ANOTHER_IMAGE"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:179"$179$");"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:180"$180$"Log.d(""UserActionDataSource"", String.format(""queryAllHistory: %s"", query));"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:181"$181$"return db.rawQuery(query, null);"$"count"$1$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:182"$182$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:183"$183$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:184"$184$"* Update the sync attribute of a UserAction"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:185"$185$"*"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:186"$186$"* @param action The action to update"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:187"$187$"* @return Whether or not the record was updated"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:188"$188$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:189"$189$"public boolean updateSync(UserAction action) {"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:190"$190$"ContentValues values = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:191"$191$"values.put(UserAction.COLUMN_NAME_SYNCHRONISED, action.isSynchronised());"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:192"$192$"return db.update(UserAction.TABLE_NAME, values, String.format(""%s=?"", UserAction.COLUMN_NAME_ID), new String[]{action.getId() + """"}) > 0;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:193"$193$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:194"$194$"public boolean deleteById (long id) {"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:195"$195$"ContentValues values = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:196"$196$"values.put(UserAction.COLUMN_NAME_ACTIVE, ""FALSE"");"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:197"$197$"values.put(UserAction.COLUMN_NAME_UNDO_TIME, new Date().getTime() / 1000);"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:198"$198$"values.put(UserAction.COLUMN_NAME_SYNCHRONISED, ""FALSE"");"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:199"$199$"return db.update(UserAction.TABLE_NAME, values, String.format(""%s=?"", UserAction.COLUMN_NAME_ID), new String[]{id + """"}) > 0;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:200"$200$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:201"$201$"public static boolean putUserActions(String url, List<UserAction> actions, List<UserActionImage> images) throws IOException, HttpHostConnectException {"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:202"$202$"//Build JSON object"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:203"$203$"JSONArray jsonActions = new JSONArray();"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:204"$204$"Log.d(""UserActionsDataSource/putUserActions"", String.format(""Adding %d actions to the JSON array"", actions.size()));"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:205"$205$"for (UserAction action : actions) {"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:206"$206$"JSONObject jsonAction = new JSONObject();"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:207"$207$"jsonAction.put(UserAction.COLUMN_NAME_ID, action.getId());"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:208"$208$"jsonAction.put(UserAction.COLUMN_NAME_CREATED_TIME, action.getCreatedTime().getTime());"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:209"$209$"jsonAction.put(UserAction.COLUMN_NAME_ACTIVE, action.isActive() ? 1 : 0);"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:210"$210$"jsonAction.put(UserAction.COLUMN_NAME_UNDO_TIME, action.getUndoTime().getTime());"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:211"$211$"//array for all images associated with this action"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:212"$212$"JSONArray jsonImages = new JSONArray();"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:213"$213$"for (int i = 0; i < images.size(); i++) {"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:214"$214$"if (images.get(i).getUserActionId() == action.getId()) {    //If the image belongs to this 'action'"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:215"$215$"JSONObject image = new JSONObject();"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:216"$216$"image.put(UserActionImage.COLUMN_NAME_SERVER_IMAGE_ID, images.get(i).getServerImageId());"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:217"$217$"image.put(UserActionImage.COLUMN_NAME_CREATED_TIME, images.get(i).getCreatedTime().getTime());"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:218"$218$"image.put(UserActionImage.COLUMN_NAME_RATING, images.get(i).getRating());"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:219"$219$"image.put(UserActionImage.COLUMN_NAME_EATING_DECISION_ID, images.get(i).getEatingDecisionId());"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:220"$220$"jsonImages.put(image);"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:221"$221$"//remove this image from the list so we do less work for the next action"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:222"$222$"images.remove(i--);"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:223"$223$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:224"$224$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:225"$225$"Log.d(""UserActionsDataSource/putUserActions"", String.format(""Adding %d images to the action"", jsonImages.length()));"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:226"$226$"jsonAction.put(""userActionImages"", jsonImages); //Add the images to their associated actions"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:227"$227$"jsonActions.put(jsonAction);    //Add the action to the array of actions"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:228"$228$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:229"$229$"//RESTful request"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:230"$230$"HttpClient client = MySSLSocketFactory.getNewHttpClient();"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:231"$231$"HttpPut request = new HttpPut(url);"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:232"$232$"request.addHeader(""Content-Type"", ""application/json"");"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:233"$233$"request.addHeader(""Accept"", ""application/json"");"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:234"$234$"Log.d(""UserActionsDataSource/putUserActions"", jsonActions.toString());"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:235"$235$"StringEntity input = new StringEntity(jsonActions.toString());"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:236"$236$"request.setEntity(input);"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:237"$237$"//Execute the query"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:238"$238$"HttpResponse response = client.execute(request);"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:239"$239$"Log.v(""UserActionDataSource/putUserActions"", String.format(""status line: %s"", response.getStatusLine()));"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:240"$240$"//Get the server response"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:241"$241$"HttpEntity entity = response.getEntity();"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:242"$242$"String content = EntityUtils.toString(entity);"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:243"$243$"content = content.substring(1, content.length() - 1);"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:244"$244$"content = content.replaceAll(""\\\\"", """");"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:245"$245$"Log.v(""UserActionDataSource/putUserActions"", String.format(""content: %s"", content));"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:246"$246$"JSONArray result;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:247"$247$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:248"$248$"result = new JSONArray(content);"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:249"$249$"} catch (JSONException e) {"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:250"$250$"Log.d(""UserActionDataSource/putUserActions"", String.format(""Result JSON array could not be parsed: %s"", content));"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:251"$251$"e.printStackTrace();"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:252"$252$"return false;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:253"$253$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:254"$254$"// Go through all the user actions and check which ones have been updated on the server"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:255"$255$"// Update successful records to have synchronised = 1"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:256"$256$"boolean passed = true;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:257"$257$"for (int i = 0; i < result.length(); i++) {"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:258"$258$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:259"$259$"if (!result.getJSONObject(i).getBoolean(""result""))"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:260"$260$"passed = false;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:261"$261$"else"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:262"$262$"//set synced"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:263"$263$"for (UserAction action : actions)"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:264"$264$"if (action.getId() == result.getJSONObject(i).getInt(""actionId""))"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:265"$265$"action.setSynchronised(true);"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:266"$266$"} catch (JSONException e) {"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:267"$267$"e.printStackTrace();"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:268"$268$"passed = false;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:269"$269$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:270"$270$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:271"$271$"return passed;"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:272"$272$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"flawed\UserActionsDataSource.java:273"$273$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UserActionsDataSource.java"
"secured\MapSolutions.java:1"$1$"package com.ideas.routeOptimization;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:2"$2$"import java.sql.Time;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:3"$3$"import java.util.ArrayList;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:4"$4$"import java.util.Map;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:5"$5$"import java.util.TreeMap;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:6"$6$"import com.google.maps.DirectionsApiRequest;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:7"$7$"import com.google.maps.DistanceMatrixApiRequest;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:8"$8$"import com.google.maps.GeoApiContext;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:9"$9$"import com.google.maps.model.DirectionsRoute;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:10"$10$"import com.google.maps.model.DistanceMatrix;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:11"$11$"import com.google.maps.model.DistanceMatrixElement;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:12"$12$"import com.google.maps.model.LatLng;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:13"$13$"import com.google.maps.model.TravelMode;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:14"$14$"import com.google.maps.model.Unit;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:15"$15$"public class MapSolutions {"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:16"$16$"private GeoApiContext context = new GeoApiContext();"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:17"$17$"private final String apiKey = ""AIzaSyCTlxwHduFeKFsF-xhyPxZHjyKPyKqr1BM"";"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:18"$18$"private final LatLng ideas = new LatLng(18.567054, 73.769757);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:19"$19$"private int loopOverTimesMap;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:20"$20$"public ArrayList<TreeMap<Time, ArrayList<ArrayList<Object>>>> computeRoute("$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:21"$21$"ArrayList<TreeMap<Time, ArrayList<ArrayList<DataPoint>>>> timesMapList) throws Exception {"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:22"$22$"this.setInitialContext();"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:23"$23$"ArrayList<TreeMap<Time, ArrayList<ArrayList<Object>>>> timesMapOutputList = new ArrayList<TreeMap<Time, ArrayList<ArrayList<Object>>>>();"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:24"$24$"for (loopOverTimesMap = 0; loopOverTimesMap < timesMapList.size(); loopOverTimesMap++) {"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:25"$25$"TreeMap<Time, ArrayList<ArrayList<Object>>> timesMap = new TreeMap<Time, ArrayList<ArrayList<Object>>>();"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:26"$26$"for (Time time : timesMapList.get(loopOverTimesMap).keySet()) {"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:27"$27$"ArrayList<ArrayList<Object>> clusterArray = new ArrayList<ArrayList<Object>>();"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:28"$28$"for (int loopInsideArrayOfClusters = 0; loopInsideArrayOfClusters < timesMapList"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:29"$29$".get(loopOverTimesMap).get(time).size(); loopInsideArrayOfClusters++) {"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:30"$30$"ArrayList<LatLng> originLatLng = new ArrayList<LatLng>();"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:31"$31$"for (int loopInsideOneCluster = 0; loopInsideOneCluster < timesMapList"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:32"$32$".get(loopOverTimesMap).get(time)"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:33"$33$".get(loopInsideArrayOfClusters).size(); loopInsideOneCluster++) {"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:34"$34$"double latitutde = timesMapList.get(loopOverTimesMap)"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:35"$35$".get(time).get(loopInsideArrayOfClusters)"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:36"$36$".get(loopInsideOneCluster).getX();"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:37"$37$"double longitude = timesMapList.get(loopOverTimesMap)"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:38"$38$".get(time).get(loopInsideArrayOfClusters)"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:39"$39$".get(loopInsideOneCluster).getY();"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:40"$40$"originLatLng.add(new LatLng(latitutde, longitude));"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:41"$41$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:42"$42$"ArrayList<Object> destinationsArrayAndSortableMapList = computeDistanceMatrix(originLatLng);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:43"$43$"String[] destinations = (String[]) destinationsArrayAndSortableMapList.get(0);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:44"$44$"Map<Double,String> sortableMap = (Map<Double, String>) destinationsArrayAndSortableMapList.get(1);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:45"$45$"Route route = computeStartpointWaypointEndpoint(destinations, sortableMap);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:46"$46$"ArrayList<Object> orderedLatLngWithDistance = calculateRoute(route);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:47"$47$"clusterArray.add(orderedLatLngWithDistance);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:48"$48$"Thread.sleep(600);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:49"$49$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:50"$50$"timesMap.put(time, clusterArray);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:51"$51$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:52"$52$"timesMapOutputList.add(timesMap);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:53"$53$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:54"$54$"return timesMapOutputList;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:55"$55$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:56"$56$"private ArrayList<Object> computeDistanceMatrix(ArrayList<LatLng> originLatLng)"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:57"$57$"throws Exception {"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:58"$58$"DistanceMatrixApiRequest distanceMatrixApiRequest = setDirectionMatrixApiRequest(originLatLng.toArray(new LatLng[originLatLng.size()]));"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:59"$59$"DistanceMatrix result = distanceMatrixApiRequest.await();"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:60"$60$"ArrayList<Object> destinationsArrayAndSortableMapList = callbackDistanceMatrixService(result);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:61"$61$"return destinationsArrayAndSortableMapList;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:62"$62$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:63"$63$"private DistanceMatrixApiRequest setDirectionMatrixApiRequest("$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:64"$64$"LatLng[] templatLng) {"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:65"$65$"DistanceMatrixApiRequest distanceMatrixApiRequest = new DistanceMatrixApiRequest(context);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:66"$66$"if (loopOverTimesMap==0){"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:67"$67$"distanceMatrixApiRequest.origins(templatLng);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:68"$68$"distanceMatrixApiRequest.destinations(ideas);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:69"$69$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:70"$70$"else {"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:71"$71$"distanceMatrixApiRequest.origins(ideas);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:72"$72$"distanceMatrixApiRequest.destinations(templatLng);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:73"$73$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:74"$74$"distanceMatrixApiRequest.mode(TravelMode.DRIVING);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:75"$75$"distanceMatrixApiRequest.units(Unit.METRIC);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:76"$76$"return distanceMatrixApiRequest;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:77"$77$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:78"$78$"private ArrayList<Object> callbackDistanceMatrixService(DistanceMatrix result) throws Exception {"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:79"$79$"ArrayList<Object> destinationsArrayAndSortableMapList = new ArrayList<Object>();"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:80"$80$"Map<Double, String> sortableMap = new TreeMap<Double, String>();"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:81"$81$"ArrayList<String[]> originDestinations = new ArrayList<String[]>();"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:82"$82$"originDestinations.add(result.originAddresses);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:83"$83$"originDestinations.add(result.destinationAddresses);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:84"$84$"sortWaypointsAccordingToDistance(result, sortableMap, originDestinations.get(loopOverTimesMap));"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:85"$85$"destinationsArrayAndSortableMapList.add(originDestinations.get(loopOverTimesMap==0?1:0));"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:86"$86$"destinationsArrayAndSortableMapList.add(sortableMap);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:87"$87$"return destinationsArrayAndSortableMapList; "$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:88"$88$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:89"$89$"private void sortWaypointsAccordingToDistance(DistanceMatrix result,"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:90"$90$"Map<Double, String> sortableMap, String[] places) {"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:91"$91$"for (int i = 0; i < places.length; i++) {"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:92"$92$"DistanceMatrixElement distanceMatrixElement;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:93"$93$"if(loopOverTimesMap == 0)"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:94"$94$"{distanceMatrixElement = result.rows[i].elements[0];}"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:95"$95$"else{"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:96"$96$"distanceMatrixElement = result.rows[0].elements[i];"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:97"$97$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:98"$98$"double distance = distanceMatrixElement.distance.inMeters;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:99"$99$"sortableMap.put(distance, places[i]);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:100"$100$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:101"$101$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:102"$102$"private Route computeStartpointWaypointEndpoint(String[] destinations,"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:103"$103$"Map<Double, String> sortableMap) throws Exception {"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:104"$104$"ArrayList<String> wayPoints = new ArrayList<String>();"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:105"$105$"int counter = 0;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:106"$106$"String start = """";"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:107"$107$"for (Double distance : sortableMap.keySet()) {"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:108"$108$"if (counter < sortableMap.size() - 1)"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:109"$109$"wayPoints.add(sortableMap.get(distance));"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:110"$110$"else"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:111"$111$"start = sortableMap.get(distance);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:112"$112$"counter++;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:113"$113$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:114"$114$"String end = destinations[0];"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:115"$115$"Route route = loopOverTimesMap==0?(new Route(start,end,wayPoints)):(new Route(end,start,wayPoints));"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:116"$116$"return route;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:117"$117$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:118"$118$"private ArrayList<Object> calculateRoute(Route route) throws Exception {"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:119"$119$"DirectionsApiRequest directionsApiRequest = setDirectionsApiRequest("$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:120"$120$"route.getStart(), route.getEnd(), route.getWayPoints());"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:121"$121$"DirectionsRoute[] result = directionsApiRequest.await();"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:122"$122$"ArrayList<Object>orderedLatLngArrayWithDistance = callbackDirectionService(result);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:123"$123$"return orderedLatLngArrayWithDistance;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:124"$124$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:125"$125$"private DirectionsApiRequest setDirectionsApiRequest(String start,"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:126"$126$"String end, ArrayList<String> wayPoints) {"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:127"$127$"DirectionsApiRequest directionsApiRequest = new DirectionsApiRequest("$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:128"$128$"context);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:129"$129$"directionsApiRequest.origin(start);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:130"$130$"directionsApiRequest.destination(end);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:131"$131$"directionsApiRequest.waypoints(wayPoints.toArray(new String[wayPoints"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:132"$132$".size()]));"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:133"$133$"directionsApiRequest.optimizeWaypoints(true);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:134"$134$"directionsApiRequest.mode(TravelMode.DRIVING);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:135"$135$"return directionsApiRequest;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:136"$136$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:137"$137$"private ArrayList<Object> callbackDirectionService(DirectionsRoute[] result) {"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:138"$138$"double distance = calculateTotalDistance(result[0]);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:139"$139$"ArrayList<Object> orderedLatLngArrayWithDistance = createOrderedLatLngArray(result);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:140"$140$"orderedLatLngArrayWithDistance.add(distance);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:141"$141$"return orderedLatLngArrayWithDistance;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:142"$142$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:143"$143$"private ArrayList<Object> createOrderedLatLngArray(DirectionsRoute[] result) {"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:144"$144$"ArrayList<Object> orderedLatLngArray = new ArrayList<Object>();"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:145"$145$"for (int i=0;i<result[0].legs.length;i++){"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:146"$146$"orderedLatLngArray.add(result[0].legs[i].startLocation);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:147"$147$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:148"$148$"return orderedLatLngArray;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:149"$149$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:150"$150$"private double calculateTotalDistance(DirectionsRoute directionsRoute) {"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:151"$151$"double distance = 0;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:152"$152$"for (int i = 0; i < directionsRoute.legs.length; i++) {"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:153"$153$"distance += directionsRoute.legs[i].distance.inMeters;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:154"$154$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:155"$155$"return distance;"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:156"$156$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:157"$157$"private void setInitialContext() {"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:158"$158$"context.setApiKey(apiKey);"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:159"$159$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"secured\MapSolutions.java:160"$160$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapSolutions.java"
"flawed\SelfieDataSource.java:1"$1$"package com.example.selfie.utils.data;"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:2"$2$"import android.content.ContentValues;"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:3"$3$"import android.content.Context;"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:4"$4$"import android.database.Cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:5"$5$"import android.database.sqlite.SQLiteDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:6"$6$"import android.net.Uri;"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:7"$7$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:8"$8$"import java.util.ArrayList;"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:9"$9$"import java.util.List;"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:10"$10$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:11"$11$"* Created by dpavlov on 18.6.2014 .."$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:12"$12$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:13"$13$"public class SelfieDataSource {"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:14"$14$"private SQLiteDatabase database;"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:15"$15$"private SelfieSQLHelper sqlHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:16"$16$"private String[] allColumns = {SelfieSQLHelper.COLUMN_ID,"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:17"$17$"SelfieSQLHelper.COLUMN_SELFIE_PATH,"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:18"$18$"SelfieSQLHelper.COLUMN_SELFIE_THUMB_PATH};"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:19"$19$"private String[] allColumnsMySelfie = {SelfieSQLHelper.COLUMN_ID,"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:20"$20$"SelfieSQLHelper.COLUMN_MY_SELFIE_ID,"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:21"$21$"SelfieSQLHelper.COLUMN_SELFIE_THUMB_PATH};"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:22"$22$"public SelfieDataSource(Context context){"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:23"$23$"sqlHelper = new SelfieSQLHelper(context);"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:24"$24$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:25"$25$"public void open() {"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:26"$26$"database = sqlHelper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:27"$27$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:28"$28$"public void close(){"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:29"$29$"sqlHelper.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:30"$30$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:31"$31$"public Selfie createSelfie(String path, String thumbPath){"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:32"$32$"ContentValues values = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:33"$33$"values.put(SelfieSQLHelper.COLUMN_SELFIE_PATH, path);"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:34"$34$"values.put(SelfieSQLHelper.COLUMN_SELFIE_THUMB_PATH, thumbPath);"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:35"$35$"long insertId = database.insert(SelfieSQLHelper.TABLE_FAVORITE_SELFIES, null, values);"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:36"$36$"Cursor cursor = database.query(SelfieSQLHelper.TABLE_FAVORITE_SELFIES, allColumns,"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:37"$37$"SelfieSQLHelper.COLUMN_ID + "" = "" + insertId, null, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:38"$38$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:39"$39$"Selfie newSelfie = cursorToSelfie(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:40"$40$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:41"$41$"return newSelfie;"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:42"$42$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:43"$43$"public void createMySelfie(String selfieId, String thumb){"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:44"$44$"ContentValues values = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:45"$45$"values.put(SelfieSQLHelper.COLUMN_MY_SELFIE_ID, selfieId);"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:46"$46$"values.put(SelfieSQLHelper.COLUMN_SELFIE_THUMB_PATH, thumb);"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:47"$47$"database.insert(SelfieSQLHelper.TABLE_MY_SELFIES, null, values);"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:48"$48$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:49"$49$"public Boolean findByPath(String path){"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:50"$50$"Cursor cursor = database.query(SelfieSQLHelper.TABLE_FAVORITE_SELFIES, allColumns,"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:51"$51$"SelfieSQLHelper.COLUMN_SELFIE_PATH + "" = '"" + path + ""'"", null, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:52"$52$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:53"$53$"return cursor.isAfterLast();"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:54"$54$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:55"$55$"public Selfie findById(long id){"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:56"$56$"Cursor cursor = database.query(SelfieSQLHelper.TABLE_FAVORITE_SELFIES, allColumns,"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:57"$57$"SelfieSQLHelper.COLUMN_ID + "" = '"" + id + ""'"", null, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:58"$58$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:59"$59$"if(!cursor.isAfterLast()){"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:60"$60$"return cursorToSelfie(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:61"$61$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:62"$62$"return null;"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:63"$63$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:64"$64$"public MySelfie findMySelfieById(long id){"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:65"$65$"Cursor cursor = database.query(SelfieSQLHelper.TABLE_MY_SELFIES, allColumnsMySelfie,"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:66"$66$"SelfieSQLHelper.COLUMN_MY_SELFIE_ID + "" = '"" + id + ""'"", null, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:67"$67$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:68"$68$"if(!cursor.isAfterLast()){"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:69"$69$"return cursorToMySelfie(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:70"$70$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:71"$71$"return null;"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:72"$72$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:73"$73$"public MySelfie findMySelfieById(String id){"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:74"$74$"Cursor cursor = database.query(SelfieSQLHelper.TABLE_MY_SELFIES, allColumnsMySelfie,"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:75"$75$"SelfieSQLHelper.COLUMN_MY_SELFIE_ID + "" = '"" + id + ""'"", null, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:76"$76$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:77"$77$"if(!cursor.isAfterLast()){"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:78"$78$"return cursorToMySelfie(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:79"$79$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:80"$80$"return null;"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:81"$81$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:82"$82$"public void deleteSelfie(Selfie selfie){"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:83"$83$"long id = selfie.getId();"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:84"$84$"database.delete(SelfieSQLHelper.TABLE_FAVORITE_SELFIES, SelfieSQLHelper.COLUMN_ID"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:85"$85$"+ "" = "" + id, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:86"$86$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:87"$87$"public void deleteMySelfie(String selfieId){"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:88"$88$"database.delete(SelfieSQLHelper.TABLE_MY_SELFIES, SelfieSQLHelper.COLUMN_MY_SELFIE_ID"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:89"$89$"+ "" = "" + selfieId, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:90"$90$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:91"$91$"public List<Selfie> getAllSelfis(){"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:92"$92$"List<Selfie> selfieList = new ArrayList<Selfie>();"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:93"$93$"Cursor cursor = database"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:94"$94$".rawQuery(""select * from ""+SelfieSQLHelper.TABLE_FAVORITE_SELFIES, null);"$"count"$1$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:95"$95$"if(cursor.moveToFirst()){"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:96"$96$"while (!cursor.isAfterLast()){"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:97"$97$"selfieList.add(cursorToSelfie(cursor));"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:98"$98$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:99"$99$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:100"$100$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:101"$101$"return selfieList;"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:102"$102$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:103"$103$"public List<MySelfie> getAllMySelfies(){"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:104"$104$"List<MySelfie> mySelfiesList = new ArrayList<MySelfie>();"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:105"$105$"Cursor cursor = database"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:106"$106$".rawQuery(""select * from "" + SelfieSQLHelper.TABLE_MY_SELFIES, null);"$"count"$1$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:107"$107$"if(cursor.moveToFirst()){"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:108"$108$"while (!cursor.isAfterLast()){"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:109"$109$"mySelfiesList.add(cursorToMySelfie(cursor));"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:110"$110$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:111"$111$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:112"$112$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:113"$113$"return mySelfiesList;"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:114"$114$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:115"$115$"private Selfie cursorToSelfie(Cursor cursor) {"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:116"$116$"Selfie selfie = new Selfie();"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:117"$117$"selfie.setId(cursor.getLong(0));"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:118"$118$"selfie.setPath(cursor.getString(1));"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:119"$119$"selfie.setThumbPath(cursor.getString(2));"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:120"$120$"return selfie;"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:121"$121$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:122"$122$"private MySelfie cursorToMySelfie(Cursor cursor) {"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:123"$123$"MySelfie mySelfie = new MySelfie();"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:124"$124$"mySelfie.setId(cursor.getLong(0));"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:125"$125$"mySelfie.setSelfieId(cursor.getString(1));"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:126"$126$"mySelfie.setThumbName(cursor.getString(2));"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:127"$127$"return mySelfie;"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:128"$128$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"flawed\SelfieDataSource.java:129"$129$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SelfieDataSource.java"
"secured\SqlDateColumnSetter.java:1"$1$"package org.embulk.output.jdbc.setter;"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:2"$2$"import java.util.Calendar;"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:3"$3$"import java.io.IOException;"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:4"$4$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:5"$5$"import java.time.Instant;"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:6"$6$"import org.embulk.output.jdbc.JdbcColumn;"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:7"$7$"import org.embulk.output.jdbc.BatchInsert;"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:8"$8$"import org.msgpack.value.Value;"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:9"$9$"public class SqlDateColumnSetter"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:10"$10$"extends ColumnSetter"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:11"$11$"{"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:12"$12$"protected final Calendar calendar;"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:13"$13$"public SqlDateColumnSetter(BatchInsert batch, JdbcColumn column,"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:14"$14$"DefaultValueSetter defaultValue,"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:15"$15$"Calendar calendar)"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:16"$16$"{"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:17"$17$"super(batch, column, defaultValue);"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:18"$18$"this.calendar = calendar;"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:19"$19$"}"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:20"$20$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:21"$21$"public void nullValue() throws IOException, SQLException"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:22"$22$"{"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:23"$23$"defaultValue.setSqlDate();"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:24"$24$"}"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:25"$25$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:26"$26$"public void booleanValue(boolean v) throws IOException, SQLException"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:27"$27$"{"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:28"$28$"defaultValue.setSqlDate();"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:29"$29$"}"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:30"$30$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:31"$31$"public void longValue(long v) throws IOException, SQLException"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:32"$32$"{"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:33"$33$"defaultValue.setSqlDate();"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:34"$34$"}"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:35"$35$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:36"$36$"public void doubleValue(double v) throws IOException, SQLException"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:37"$37$"{"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:38"$38$"defaultValue.setSqlDate();"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:39"$39$"}"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:40"$40$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:41"$41$"public void stringValue(String v) throws IOException, SQLException"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:42"$42$"{"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:43"$43$"defaultValue.setSqlDate();"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:44"$44$"}"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:45"$45$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:46"$46$"public void timestampValue(final Instant v) throws IOException, SQLException"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:47"$47$"{"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:48"$48$"batch.setSqlDate(v, calendar);"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:49"$49$"}"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:50"$50$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:51"$51$"public void jsonValue(Value v) throws IOException, SQLException"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:52"$52$"{"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:53"$53$"defaultValue.setSqlDate();"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:54"$54$"}"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"secured\SqlDateColumnSetter.java:55"$55$"}"$"ignore"$0$"..\sql-dataset\test\secured\SqlDateColumnSetter.java"
"flawed\ExerciseDatabase.java:1"$1$"package com.example.ashu4642.ironplanner;"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:2"$2$"import android.content.ContentValues;"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:3"$3$"import android.content.Context;"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:4"$4$"import android.database.Cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:5"$5$"import android.database.sqlite.SQLiteDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:6"$6$"import android.database.sqlite.SQLiteOpenHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:7"$7$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:8"$8$"public class ExerciseDatabase {"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:9"$9$"public static final int DATABASE_VERSION = 1;"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:10"$10$"public static final String DATABASE_NAME = ""exercisedb"";"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:11"$11$"public static final String DATABASE_TABLE = ""exercise"";"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:12"$12$"// Field names -- use the KEY_XXX constants here and in"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:13"$13$"// client code, so it's all consistent and checked at compile-time."$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:14"$14$"public static final String KEY_ROWID = ""_id"";  // Android requires exactly this key name"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:15"$15$"public static final int INDEX_ROWID = 0;"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:16"$16$"public static final String KEY_TITLE = ""title""; //name of exercise ""Bicep Curls"""$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:17"$17$"public static final int INDEX_TITLE = 1;"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:18"$18$"public static final String KEY_GROUP = ""group""; //Muscle group it works out ""Arms"""$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:19"$19$"public static final int INDEX_GROUP = 2;"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:20"$20$"public static final String KEY_REPS = ""reps""; //Repititions for each set as a string ""10,10,10"""$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:21"$21$"public static final int INDEX_STATE = 3;"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:22"$22$"public static final String KEY_WEIGHT = ""weight""; //25 pounds"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:23"$23$"public static final int INDEX_WEIGHT = 4;"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:24"$24$"public static final String[] KEYS_ALL ="$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:25"$25$"{ExerciseDatabase.KEY_ROWID,"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:26"$26$"ExerciseDatabase.KEY_TITLE,"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:27"$27$"ExerciseDatabase.KEY_GROUP,"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:28"$28$"ExerciseDatabase.KEY_REPS,"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:29"$29$"ExerciseDatabase.KEY_WEIGHT};"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:30"$30$"private Context mContext;"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:31"$31$"private SQLiteDatabase mDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:32"$32$"private ExerciseDBHelper mHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:33"$33$"public ExerciseDatabase(Context context) {"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:34"$34$"mContext = context;"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:35"$35$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:36"$36$"public void open() throws SQLException {"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:37"$37$"mHelper = new ExerciseDBHelper(mContext);"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:38"$38$"mDatabase = mHelper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:39"$39$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:40"$40$"public void close() {"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:41"$41$"mHelper.close();"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:42"$42$"mHelper = null;"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:43"$43$"mDatabase = null;"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:44"$44$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:45"$45$"public long createRow(ContentValues values) {"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:46"$46$"return mDatabase.insert(DATABASE_TABLE, null, values);"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:47"$47$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:48"$48$"public boolean updateRow(long rowId, ContentValues values) {"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:49"$49$"return (mDatabase.update(DATABASE_TABLE, values,"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:50"$50$"ExerciseDatabase.KEY_ROWID + ""="" + rowId, null) > 0);"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:51"$51$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:52"$52$"public boolean deleteRow(long rowId) {"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:53"$53$"return (mDatabase.delete(DATABASE_TABLE, ExerciseDatabase.KEY_ROWID"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:54"$54$"+""=""+rowId,null) > 0);"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:55"$55$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:56"$56$"public Cursor queryAll() {"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:57"$57$"return mDatabase.query(DATABASE_TABLE, KEYS_ALL, null, null, null, null,"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:58"$58$"KEY_GROUP + "" ASC, "" + KEY_TITLE + "" ASC,"");"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:59"$59$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:60"$60$"public Cursor query(long rowId) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:61"$61$"Cursor cursor = mDatabase.query(true, DATABASE_TABLE, KEYS_ALL,"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:62"$62$"KEY_ROWID+""=""+rowId, null, null, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:63"$63$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:64"$64$"return cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:65"$65$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:66"$66$"public int getRows()"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:67"$67$"{"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:68"$68$"return this.queryAll().getCount();"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:69"$69$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:70"$70$"public int getColumns()"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:71"$71$"{"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:72"$72$"return this.queryAll().getColumnCount();"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:73"$73$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:74"$74$"public String[][] getSQLMatrix()"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:75"$75$"{"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:76"$76$"Cursor cursor = this.queryAll();"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:77"$77$"String[][] results = new String[cursor.getCount()][cursor.getColumnCount()];"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:78"$78$"for(int i=0;i<results.length;i++)"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:79"$79$"{"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:80"$80$"if(cursor.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:81"$81$"for (int j = 0; j < results[0].length; j++) {"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:82"$82$"results[i][j] = cursor.getString(j);"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:83"$83$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:84"$84$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:85"$85$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:86"$86$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:87"$87$"return results;"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:88"$88$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:89"$89$"public ContentValues createContentValues(String title, String group, String reps, String weight) {"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:90"$90$"ContentValues values = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:91"$91$"values.put(ExerciseDatabase.KEY_TITLE, title);"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:92"$92$"values.put(ExerciseDatabase.KEY_GROUP, Integer.parseInt(group));"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:93"$93$"values.put(ExerciseDatabase.KEY_REPS, reps);"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:94"$94$"values.put(ExerciseDatabase.KEY_WEIGHT,weight);"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:95"$95$"return values;"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:96"$96$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:97"$97$"private static class ExerciseDBHelper extends SQLiteOpenHelper {"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:98"$98$"private static final String DATABASE_CREATE ="$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:99"$99$"""create table "" + DATABASE_TABLE + "" ("" +"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:100"$100$"ExerciseDatabase.KEY_ROWID  + "" integer primary key autoincrement, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:101"$101$"ExerciseDatabase.KEY_TITLE  + ""text not null, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:102"$102$"ExerciseDatabase.KEY_GROUP  + ""integer not null, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:103"$103$"ExerciseDatabase.KEY_REPS   + ""text not null, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:104"$104$"ExerciseDatabase.KEY_WEIGHT + ""text not null "" +"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:105"$105$""");"";"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:106"$106$"public ExerciseDBHelper(Context context) {"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:107"$107$"super(context, DATABASE_NAME, null, DATABASE_VERSION);"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:108"$108$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:109"$109$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:110"$110$"public void onCreate(SQLiteDatabase database) {"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:111"$111$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:112"$112$"database.execSQL(DATABASE_CREATE);"$"count"$1$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:113"$113$"} catch (Exception e) {"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:114"$114$"e.printStackTrace();"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:115"$115$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:116"$116$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:117"$117$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:118"$118$"public void onUpgrade(SQLiteDatabase database, int oldVersion, int newVersion) {"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:119"$119$"//"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:120"$120$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:121"$121$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\ExerciseDatabase.java:122"$122$"}"$"ignore"$0$"..\sql-dataset\test\flawed\ExerciseDatabase.java"
"flawed\pwTempDBMgr.java:1"$1$"package com.example.peter.mobilecourseworkpwatt200;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:2"$2$"import android.content.ContentValues;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:3"$3$"import android.content.Context;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:4"$4$"import android.database.Cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:5"$5$"import android.database.sqlite.SQLiteDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:6"$6$"import android.database.sqlite.SQLiteException;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:7"$7$"import android.database.sqlite.SQLiteOpenHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:8"$8$"import android.util.Log;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:9"$9$"import java.io.FileOutputStream;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:10"$10$"import java.io.IOException;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:11"$11$"import java.io.InputStream;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:12"$12$"import java.io.OutputStream;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:13"$13$"import java.sql.SQLDataException;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:14"$14$"import java.util.ArrayList;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:15"$15$"import java.util.List;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:16"$16$"import java.util.Locale;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:17"$17$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:18"$18$"* Created by Peter on 12/12/2014."$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:19"$19$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:20"$20$"public class pwTempDBMgr extends SQLiteOpenHelper {"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:21"$21$"private static final int DB_VER = 1;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:22"$22$"private static final String DB_PATH = ""/data/data/com.example.peter.mobilecourseworkpwatt200/databases/"";"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:23"$23$"private static final String DB_NAME = ""glasgowTemperature.s3db"";"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:24"$24$"private static final String TBL_GLASGOWTEMPERATURE = ""glasgowTemperature"";"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:25"$25$"public static final String COL_TEMPID = ""id"";"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:26"$26$"public static final String COL_TEMPMAX = ""Max"";"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:27"$27$"public static final String COL_TEMPAVG = ""Avg"";"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:28"$28$"public static final String COL_TEMPMIN = ""Min"";"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:29"$29$"private final Context appContext;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:30"$30$"public pwTempDBMgr(Context context, String name, SQLiteDatabase.CursorFactory factory,int version){"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:31"$31$"super(context, name, factory, version);"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:32"$32$"this.appContext = context;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:33"$33$"}"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:34"$34$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:35"$35$"public void onCreate(SQLiteDatabase db){"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:36"$36$"String CREATE_TEMP_TABLE = ""CREATE TABLE IF NOT EXISTS "" + TBL_GLASGOWTEMPERATURE + ""("" + COL_TEMPID + ""INTEGER PRIMARY KEY,"" + COL_TEMPMAX + "" TEXT,"" + COL_TEMPAVG + "" TEXT,"" + COL_TEMPMIN + "" TEXT"" + "")"";"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:37"$37$"db.execSQL(CREATE_TEMP_TABLE);"$"count"$1$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:38"$38$"}"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:39"$39$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:40"$40$"public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion){"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:41"$41$"if(newVersion > oldVersion){"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:42"$42$"db.execSQL(""DROP TABLE IF EXISTS "" + TBL_GLASGOWTEMPERATURE);"$"count"$1$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:43"$43$"onCreate(db);"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:44"$44$"}"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:45"$45$"}"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:46"$46$"// ================================================================================"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:47"$47$"// Creates a empty database on the system and rewrites it with your own database."$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:48"$48$"// ================================================================================"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:49"$49$"public void dbCreate() throws IOException{"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:50"$50$"boolean dbExist = dbCheck();"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:51"$51$"if(!dbExist){"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:52"$52$"//By calling this method an empty database will be created into the default system path"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:53"$53$"//of your application so we can overwrite that database with our database."$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:54"$54$"this.getReadableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:55"$55$"try{"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:56"$56$"copyDBFromAssets();"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:57"$57$"} catch (IOException e){"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:58"$58$"throw new Error(""Error copying database"");"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:59"$59$"}"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:60"$60$"}"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:61"$61$"}"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:62"$62$"// ============================================================================================"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:63"$63$"// Check if the database already exist to avoid re-copying the file each time you open the application."$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:64"$64$"// @return true if it exists, false if it doesn't"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:65"$65$"// ============================================================================================"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:66"$66$"private boolean dbCheck(){"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:67"$67$"SQLiteDatabase db = null;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:68"$68$"try{"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:69"$69$"String dbPath = DB_PATH + DB_NAME;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:70"$70$"db = SQLiteDatabase.openDatabase(dbPath,null,SQLiteDatabase.OPEN_READONLY);"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:71"$71$"db.setLocale(Locale.getDefault());"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:72"$72$"db.setVersion(1);"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:73"$73$"} catch (SQLiteException e){"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:74"$74$"Log.e(""SQLHelper"" , ""Database not Found!"");"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:75"$75$"}"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:76"$76$"if(db != null){"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:77"$77$"db.close();"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:78"$78$"}"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:79"$79$"return db != null ? true : false;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:80"$80$"}"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:81"$81$"// ============================================================================================"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:82"$82$"// Copies your database from your local assets-folder to the just created empty database in the"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:83"$83$"// system folder, from where it can be accessed and handled."$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:84"$84$"// This is done by transfering bytestream."$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:85"$85$"// ============================================================================================"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:86"$86$"private void copyDBFromAssets() throws IOException{"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:87"$87$"InputStream dbInput = null;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:88"$88$"OutputStream dbOutput = null;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:89"$89$"String dbFileName = DB_PATH + DB_NAME;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:90"$90$"try{"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:91"$91$"dbInput = appContext.getAssets().open(DB_NAME);"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:92"$92$"dbOutput = new FileOutputStream(dbFileName);"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:93"$93$"//transfer bytes from the dbInput to the dbOutput"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:94"$94$"byte[] buffer = new byte[1024];"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:95"$95$"int length;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:96"$96$"while((length = dbInput.read(buffer)) > 0){"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:97"$97$"dbOutput.write(buffer,0,length);"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:98"$98$"}"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:99"$99$"//Close the streams"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:100"$100$"dbOutput.flush();"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:101"$101$"dbOutput.close();"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:102"$102$"dbInput.close();"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:103"$103$"} catch (IOException e){"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:104"$104$"throw new Error(""Problems copying DB!"");"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:105"$105$"}"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:106"$106$"}"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:107"$107$"public void addTempInfo(pwTempInfo aTempInfo){"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:108"$108$"ContentValues values = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:109"$109$"values.put(COL_TEMPID, aTempInfo.getTempID());"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:110"$110$"values.put(COL_TEMPMAX, aTempInfo.getMaxTemp());"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:111"$111$"values.put(COL_TEMPAVG, aTempInfo.getAvgTemp());"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:112"$112$"values.put(COL_TEMPMIN, aTempInfo.getMinTemp());"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:113"$113$"SQLiteDatabase db = this.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:114"$114$"db.insert(TBL_GLASGOWTEMPERATURE, null, values);"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:115"$115$"db.close();"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:116"$116$"}"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:117"$117$"public pwTempInfo findWeatherStation(String aTempInfo){"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:118"$118$"String query = ""SELECT * FROM "" + TBL_GLASGOWTEMPERATURE + "" WHERE "" + COL_TEMPID +"" = \"""" + aTempInfo + ""\"""";"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:119"$119$"SQLiteDatabase db = this.getReadableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:120"$120$"Cursor cursor = db.rawQuery(query, null);"$"count"$1$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:121"$121$"pwTempInfo TempInfo = new pwTempInfo();"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:122"$122$"if(cursor.moveToFirst()){"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:123"$123$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:124"$124$"TempInfo.setTempID(cursor.getString(0));"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:125"$125$"TempInfo.setMaxTemp(Float.parseFloat(cursor.getString(1)));"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:126"$126$"TempInfo.setAvgTemp(Float.parseFloat(cursor.getString(2)));"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:127"$127$"TempInfo.setMinTemp(Float.parseFloat(cursor.getString(3)));"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:128"$128$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:129"$129$"} else {"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:130"$130$"TempInfo = null;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:131"$131$"}"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:132"$132$"db.close();"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:133"$133$"return TempInfo;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:134"$134$"}"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:135"$135$"public boolean removeWeatherStation(String aTempInfo){"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:136"$136$"boolean result = false;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:137"$137$"String query = ""SELECT * FROM "" + TBL_GLASGOWTEMPERATURE + "" WHERE "" + COL_TEMPID + "" = \"""" + aTempInfo +""\"""";"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:138"$138$"SQLiteDatabase db = this.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:139"$139$"Cursor cursor = db.rawQuery(query, null);"$"count"$1$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:140"$140$"pwTempInfo TempInfo = new pwTempInfo();"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:141"$141$"if(cursor.moveToFirst()){"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:142"$142$"TempInfo.setTempID(cursor.getString(0));"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:143"$143$"db.delete(TBL_GLASGOWTEMPERATURE,COL_TEMPID + "" = ?"", new String[] { String.valueOf(TempInfo.getTempID()) });"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:144"$144$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:145"$145$"result = true;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:146"$146$"}"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:147"$147$"db.close();"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:148"$148$"return result;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:149"$149$"}"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:150"$150$"public List<pwTempInfo> allTempInfo(){"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:151"$151$"String query = ""SELECT * FROM "" + TBL_GLASGOWTEMPERATURE;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:152"$152$"List<pwTempInfo> pwTempInfosList = new ArrayList<pwTempInfo>();"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:153"$153$"SQLiteDatabase db = this.getReadableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:154"$154$"Cursor cursor = db.rawQuery(query, null);"$"count"$1$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:155"$155$"if(cursor.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:156"$156$"while(cursor.isAfterLast() == false){"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:157"$157$"pwTempInfo TempInfoEntry = new pwTempInfo();"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:158"$158$"TempInfoEntry.setTempID(cursor.getString(0));"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:159"$159$"TempInfoEntry.setMaxTemp(Float.parseFloat(cursor.getString(1)));"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:160"$160$"TempInfoEntry.setAvgTemp(Float.parseFloat(cursor.getString(2)));"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:161"$161$"TempInfoEntry.setMinTemp(Float.parseFloat(cursor.getString(3)));"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:162"$162$"pwTempInfosList.add(TempInfoEntry);"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:163"$163$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:164"$164$"}"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:165"$165$"} else {"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:166"$166$"pwTempInfosList.add(null);"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:167"$167$"}"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:168"$168$"db.close();"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:169"$169$"return pwTempInfosList;"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:170"$170$"}"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\pwTempDBMgr.java:171"$171$"}"$"ignore"$0$"..\sql-dataset\test\flawed\pwTempDBMgr.java"
"flawed\RecurringItemDataSource.java:1"$1$"package com.mad.shinypenny.Logic;"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:2"$2$"import android.content.ContentValues;"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:3"$3$"import android.content.Context;"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:4"$4$"import android.database.Cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:5"$5$"import android.database.sqlite.SQLiteDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:6"$6$"import com.mad.shinypenny.data.DBHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:7"$7$"import com.mad.shinypenny.data.RecurringItem;"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:8"$8$"import com.mad.shinypenny.data.TransactionItem;"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:9"$9$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:10"$10$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:11"$11$"* Created by chin on 19/3/2015."$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:12"$12$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:13"$13$"public class RecurringItemDataSource {"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:14"$14$"private SQLiteDatabase database;"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:15"$15$"private DBHelper dbHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:16"$16$"public RecurringItemDataSource(Context context) {"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:17"$17$"dbHelper = new DBHelper(context);"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:18"$18$"}"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:19"$19$"public void open() throws SQLException {"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:20"$20$"database = dbHelper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:21"$21$"}"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:22"$22$"public void close() {"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:23"$23$"dbHelper.close();"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:24"$24$"}"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:25"$25$"public String generateID() {"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:26"$26$"int iD = 1000;"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:27"$27$"String getID = """", lastID = """", newID = """";"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:28"$28$"String selectQuery = ""SELECT "" + DBHelper.KEY_rId + "" FROM "" + dbHelper.TABLE_RecurringItem;"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:29"$29$"database = dbHelper.getReadableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:30"$30$"Cursor c = database.rawQuery(selectQuery, null);"$"count"$1$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:31"$31$"if (c != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:32"$32$"c.moveToLast();"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:33"$33$"lastID = c.getString(c.getColumnIndex(dbHelper.KEY_rId));"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:34"$34$"for (int i = 1; i < 5; i++) {"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:35"$35$"getID += lastID.charAt(i);"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:36"$36$"}"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:37"$37$"iD = Integer.parseInt(getID) + 1;"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:38"$38$"c.close();"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:39"$39$"} else {"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:40"$40$"iD = 1000;"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:41"$41$"}"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:42"$42$"newID = String.format(""%d"", ""R"" + iD);"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:43"$43$"return newID;"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:44"$44$"}"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:45"$45$"public long createRecurringItem(RecurringItem recurringItem) {"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:46"$46$"database = dbHelper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:47"$47$"ContentValues values = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:48"$48$"String newID = generateID();"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:49"$49$"values.put(dbHelper.KEY_rId, newID);"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:50"$50$"values.put(dbHelper.KEY_rCategory_ID, String.valueOf(recurringItem.getCategoryID()));"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:51"$51$"values.put(dbHelper.KEY_rCycle, String.valueOf(recurringItem.getCycle()));"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:52"$52$"values.put(dbHelper.KEY_rBeginDate, String.valueOf(recurringItem.getBeginDate()));"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:53"$53$"values.put(dbHelper.KEY_rEndDate, String.valueOf(recurringItem.getEndDate()));"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:54"$54$"values.put(dbHelper.KEY_rValue, String.valueOf(recurringItem.getValue()));"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:55"$55$"// insert row"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:56"$56$"long recurr_id = database.insert(dbHelper.TABLE_RecurringItem, null, values);"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:57"$57$"return recurr_id;"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:58"$58$"}"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:59"$59$"//    public List<TransactionItem> getAllTransactionItemWithinCurrentMonth(String transactionItem_category) throws ParseException {"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:60"$60$"//        List<TransactionItem> transactionItems = new ArrayList<TransactionItem>();"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:61"$61$"//        SimpleDateFormat formatter = new SimpleDateFormat(""dd/MM/yyyy"");"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:62"$62$"//"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:63"$63$"//        //At the particular month"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:64"$64$"//        String selectQuery = ""SELECT  * FROM "" + dbHelper.TABLE_TransactionItem + "" WHERE """$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:65"$65$"//                + dbHelper.KEY_category_ID + "" = '"" + transactionItem_category +"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:66"$66$"//                "" AND strftime('%m',"" + dbHelper.KEY_date + "") > strftime('%m', 'now')"";"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:67"$67$"//"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:68"$68$"//"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:69"$69$"//        database = dbHelper.getReadableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:70"$70$"//        Cursor c = database.rawQuery(selectQuery, null);"$"count"$1$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:71"$71$"//"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:72"$72$"//        // looping through all rows and adding to list"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:73"$73$"//        if (c.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:74"$74$"//            do {"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:75"$75$"//                TransactionItem transactionItem = new TransactionItem();"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:76"$76$"//                transactionItem.setID(c.getString(c.getColumnIndex(dbHelper.KEY_id)));"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:77"$77$"//                transactionItem.setRecurrID(c.getString(c.getColumnIndex(dbHelper.KEY_recurr_ID)));"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:78"$78$"//                transactionItem.setDate(formatter.parse(c.getString(c.getColumnIndex(dbHelper.KEY_date))));"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:79"$79$"//                transactionItem.setCategoryID(c.getString(c.getColumnIndex(dbHelper.KEY_category_ID)));"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:80"$80$"//                transactionItem.setValue(c.getDouble(c.getColumnIndex(dbHelper.KEY_value)));"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:81"$81$"//"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:82"$82$"//"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:83"$83$"//                // adding to transactionItem list"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:84"$84$"//                transactionItems.add(transactionItem);"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:85"$85$"//            } while (c.moveToNext());"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:86"$86$"//        }"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:87"$87$"//"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:88"$88$"//        return transactionItems;"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:89"$89$"//    }"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:90"$90$"//"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:91"$91$"//"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:92"$92$"//    /*"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:93"$93$"//* getting all budget under same category between 2 month"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:94"$94$"//* */"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:95"$95$"//    public List<TransactionItem> getAllTransactionItemBetweenTwoMonth(String transactionItem_category, String beginMonth, String endMonth) throws ParseException {"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:96"$96$"//        List<TransactionItem> transactionItems = new ArrayList<TransactionItem>();"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:97"$97$"//        SimpleDateFormat formatter = new SimpleDateFormat(""dd/MM/yyyy"");"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:98"$98$"//"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:99"$99$"//        //At the particular month"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:100"$100$"//        String selectQuery = ""SELECT  * FROM "" + dbHelper.TABLE_TransactionItem + "" WHERE """$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:101"$101$"//                + dbHelper.KEY_category_ID + "" = '"" + transactionItem_category + "" AND """$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:102"$102$"//                + dbHelper.KEY_date + "" between '"" + beginMonth + ""' and '"" + endMonth + ""'"";"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:103"$103$"//"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:104"$104$"//"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:105"$105$"//        database = dbHelper.getReadableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:106"$106$"//        Cursor c = database.rawQuery(selectQuery, null);"$"count"$1$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:107"$107$"//"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:108"$108$"//        // looping through all rows and adding to list"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:109"$109$"//        if (c.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:110"$110$"//            do {"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:111"$111$"//                TransactionItem transactionItem = new TransactionItem();"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:112"$112$"//                transactionItem.setID(c.getString(c.getColumnIndex(dbHelper.KEY_id)));"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:113"$113$"//                transactionItem.setRecurrID(c.getString(c.getColumnIndex(dbHelper.KEY_recurr_ID)));"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:114"$114$"//                transactionItem.setDate(formatter.parse(c.getString(c.getColumnIndex(dbHelper.KEY_date))));"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:115"$115$"//                transactionItem.setCategoryID(c.getString(c.getColumnIndex(dbHelper.KEY_category_ID)));"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:116"$116$"//                transactionItem.setValue(c.getDouble(c.getColumnIndex(dbHelper.KEY_value)));"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:117"$117$"//"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:118"$118$"//"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:119"$119$"//                // adding to transactionItem list"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:120"$120$"//                transactionItems.add(transactionItem);"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:121"$121$"//            } while (c.moveToNext());"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:122"$122$"//        }"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:123"$123$"//"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:124"$124$"//        return transactionItems;"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:125"$125$"//    }"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:126"$126$"//"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:127"$127$"//    /*"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:128"$128$"//* getting all budget under same category in the current date"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:129"$129$"//* */"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:130"$130$"//    public List<TransactionItem> getAllTransactionItemInCurrentDate(String transactionItem_category) throws ParseException {"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:131"$131$"//        List<TransactionItem> transactionItems = new ArrayList<TransactionItem>();"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:132"$132$"//        SimpleDateFormat formatter = new SimpleDateFormat(""dd/MM/yyyy"");"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:133"$133$"//"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:134"$134$"//        //At the particular month"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:135"$135$"//        String selectQuery = ""SELECT  * FROM "" + dbHelper.TABLE_TransactionItem + "" WHERE """$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:136"$136$"//                + dbHelper.KEY_category_ID + "" = '"" + transactionItem_category +"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:137"$137$"//                "" AND "" + dbHelper.KEY_date + "" = 'now'"";"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:138"$138$"//"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:139"$139$"//"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:140"$140$"//        database = dbHelper.getReadableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:141"$141$"//        Cursor c = database.rawQuery(selectQuery, null);"$"count"$1$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:142"$142$"//"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:143"$143$"//        // looping through all rows and adding to list"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:144"$144$"//        if (c.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:145"$145$"//            do {"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:146"$146$"//                TransactionItem transactionItem = new TransactionItem();"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:147"$147$"//                transactionItem.setID(c.getString(c.getColumnIndex(dbHelper.KEY_id)));"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:148"$148$"//                transactionItem.setRecurrID(c.getString(c.getColumnIndex(dbHelper.KEY_recurr_ID)));"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:149"$149$"//                transactionItem.setDate(formatter.parse(c.getString(c.getColumnIndex(dbHelper.KEY_date))));"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:150"$150$"//                transactionItem.setCategoryID(c.getString(c.getColumnIndex(dbHelper.KEY_category_ID)));"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:151"$151$"//                transactionItem.setValue(c.getDouble(c.getColumnIndex(dbHelper.KEY_value)));"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:152"$152$"//"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:153"$153$"//"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:154"$154$"//                // adding to transactionItem list"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:155"$155$"//                transactionItems.add(transactionItem);"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:156"$156$"//            } while (c.moveToNext());"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:157"$157$"//        }"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:158"$158$"//"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:159"$159$"//        return transactionItems;"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:160"$160$"//    }"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"flawed\RecurringItemDataSource.java:161"$161$"}"$"ignore"$0$"..\sql-dataset\test\flawed\RecurringItemDataSource.java"
"secured\AbstractSQLTab.java:1"$1$"// ============================================================================"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:2"$2$"//"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:3"$3$"// Copyright (C) 2006-2021 Talend Inc. - www.talend.com"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:4"$4$"//"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:5"$5$"// This source code is available under agreement available at"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:6"$6$"// %InstallDIR%\features\org.talend.rcp.branding.%PRODUCTNAME%\%PRODUCTNAME%license.txt"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:7"$7$"//"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:8"$8$"// You should have received a copy of the agreement"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:9"$9$"// along with this program; if not, write to Talend SA"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:10"$10$"// 9 rue Pages 92150 Suresnes, France"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:11"$11$"//"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:12"$12$"// ============================================================================"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:13"$13$"package org.talend.sqlbuilder.dbdetail.tab;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:14"$14$"import java.sql.PreparedStatement;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:15"$15$"import java.sql.ResultSet;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:16"$16$"import java.sql.Statement;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:17"$17$"import net.sourceforge.squirrel_sql.fw.sql.SQLConnection;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:18"$18$"import org.talend.sqlbuilder.IConstants;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:19"$19$"import org.talend.sqlbuilder.Messages;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:20"$20$"import org.talend.sqlbuilder.SqlBuilderPlugin;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:21"$21$"import org.talend.sqlbuilder.dataset.dataset.DataSet;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:22"$22$"/**"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:23"$23$"* DOC dev class global comment. Detailled comment <br/>"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:24"$24$"*"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:25"$25$"* $Id: AbstractSQLTab.java,v 1.5 2006/11/01 01:27:07 yi.zhang Exp $"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:26"$26$"*"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:27"$27$"*/"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:28"$28$"public abstract class AbstractSQLTab extends AbstractDataSetTab {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:29"$29$"public final DataSet getDataSet() throws Exception {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:30"$30$"DataSet dataSet = null;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:31"$31$"int timeOut = SqlBuilderPlugin.getDefault().getPluginPreferences().getInt(IConstants.INTERACTIVE_QUERY_TIMEOUT);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:32"$32$"SQLConnection connection = getNode().getSession().getInteractiveConnection();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:33"$33$"ResultSet rs = null;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:34"$34$"Statement stmt = null;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:35"$35$"PreparedStatement pStmt = null;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:36"$36$"try {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:37"$37$"Object[] params = getSQLParameters();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:38"$38$"if (params == null || params.length == 0) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:39"$39$"// use normal statement"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:40"$40$"stmt = connection.createStatement();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:41"$41$"stmt.setQueryTimeout(timeOut);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:42"$42$"rs = stmt.executeQuery(getSQL());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:43"$43$"} else {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:44"$44$"// use prepared statement"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:45"$45$"pStmt = connection.prepareStatement(getSQL());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:46"$46$"pStmt.setQueryTimeout(timeOut);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:47"$47$"for (int i = 0; i < params.length; i++) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:48"$48$"if (params[i] instanceof String) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:49"$49$"pStmt.setString(i + 1, (String) params[i]);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:50"$50$"} else if (params[i] instanceof Integer) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:51"$51$"pStmt.setInt(i + 1, ((Integer) params[i]).intValue());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:52"$52$"} else if (params[i] instanceof String) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:53"$53$"pStmt.setLong(i + 1, ((Long) params[i]).longValue());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:54"$54$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:55"$55$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:56"$56$"rs = pStmt.executeQuery();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:57"$57$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:58"$58$"dataSet = new DataSet(null, rs, null);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:59"$59$"rs.close();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:60"$60$"} catch (Exception e) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:61"$61$"SqlBuilderPlugin.log(Messages.getString(""AbstractSQLTab.logMessage1"") + getNode().getName(), e); //$NON-NLS-1$"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:62"$62$"} finally {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:63"$63$"if (stmt != null) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:64"$64$"try {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:65"$65$"stmt.close();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:66"$66$"} catch (Exception e) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:67"$67$"SqlBuilderPlugin.log(Messages.getString(""AbstractSQLTab.logMessage2""), e); //$NON-NLS-1$"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:68"$68$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:69"$69$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:70"$70$"if (pStmt != null) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:71"$71$"try {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:72"$72$"pStmt.close();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:73"$73$"} catch (Exception e) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:74"$74$"SqlBuilderPlugin.log(Messages.getString(""AbstractSQLTab.logMessage2""), e); //$NON-NLS-1$"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:75"$75$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:76"$76$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:77"$77$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:78"$78$"return dataSet;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:79"$79$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:80"$80$"public abstract String getLabelText();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:81"$81$"public abstract String getSQL();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:82"$82$"public Object[] getSQLParameters() {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:83"$83$"return null;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:84"$84$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\AbstractSQLTab.java:85"$85$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractSQLTab.java"
"secured\OrderGetURI.java:1"$1$"package com.astrium.hmas.server.OrderService;"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:2"$2$"/**"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:3"$3$"* --------------------------------------------------------------------------------------------------------"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:4"$4$"*   Project                                            :               HMA-S"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:5"$5$"* --------------------------------------------------------------------------------------------------------"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:6"$6$"*   File Name                                          :               OrderGetURI.java"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:7"$7$"*   File Type                                          :               Source Code"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:8"$8$"*   Description                                        :               This class is a server which retrieve	"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:9"$9$"*   																	The URI of the product to download 	"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:10"$10$"*   																	thanks to its URI."$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:11"$11$"*"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:12"$12$"* --------------------------------------------------------------------------------------------------------"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:13"$13$"*"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:14"$14$"* ================================================================="$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:15"$15$"*             (C) COPYRIGHT EADS ASTRIUM LIMITED 2013. All Rights Reserved"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:16"$16$"*             This software is supplied by EADS Astrium Limited on the express terms"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:17"$17$"*             that it is to be treated as confidential and that it may not be copied,"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:18"$18$"*             used or disclosed to others for any purpose except as authorised in"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:19"$19$"*             writing by this Company."$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:20"$20$"* --------------------------------------------------------------------------------------------------------"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:21"$21$"*/"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:22"$22$"import java.sql.Connection;"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:23"$23$"import java.sql.DriverManager;"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:24"$24$"import java.sql.ResultSet;"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:25"$25$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:26"$26$"import java.sql.Statement;"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:27"$27$"import javax.ws.rs.GET;"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:28"$28$"import javax.ws.rs.Path;"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:29"$29$"import javax.ws.rs.core.Context;"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:30"$30$"import javax.ws.rs.core.MultivaluedMap;"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:31"$31$"import javax.ws.rs.core.Response;"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:32"$32$"import javax.ws.rs.core.UriInfo;"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:33"$33$"import com.sun.jersey.api.core.HttpContext;"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:34"$34$"@Path(""order"")"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:35"$35$"public class OrderGetURI {"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:36"$36$"/**"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:37"$37$"* Map containing the URL parameters"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:38"$38$"*/"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:39"$39$"@Context"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:40"$40$"volatile UriInfo ui;"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:41"$41$"@Context"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:42"$42$"volatile HttpContext httpContext;"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:43"$43$"@GET"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:44"$44$"public Response getURI() {"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:45"$45$"/*"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:46"$46$"* Get the parameters from the query"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:47"$47$"*/"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:48"$48$"MultivaluedMap<String, String> conf = ui.getQueryParameters();"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:49"$49$"/*"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:50"$50$"* Get the important one : the product ID"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:51"$51$"*/"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:52"$52$"String product_id = conf.get(""ProductID"").get(0);"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:53"$53$"try {"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:54"$54$"Class.forName(""org.postgresql.Driver"");"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:55"$55$"} catch (ClassNotFoundException e) {"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:56"$56$"System.out.println(""Where is your PostgreSQL JDBC Driver? Include in your library path!"");"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:57"$57$"e.printStackTrace();"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:58"$58$"}"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:59"$59$"/*"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:60"$60$"* Connection to the database"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:61"$61$"*/"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:62"$62$"System.out.println(""-------- PostgreSQL JDBC Connection Testing ------------"");"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:63"$63$"System.out.println(""PostgreSQL JDBC Driver Registered!"");"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:64"$64$"Connection connection = null;"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:65"$65$"Statement st = null;"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:66"$66$"ResultSet rs = null;"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:67"$67$"try {"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:68"$68$"connection = DriverManager.getConnection(""jdbc:postgresql://127.0.0.1:5432/osresult"", ""postgres"", ""password"");"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:69"$69$"st = connection.createStatement();"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:70"$70$"/*"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:71"$71$"* SQL Query"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:72"$72$"*/"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:73"$73$"String query = ""SELECT * FROM dwproduct where id = '"" + product_id + ""'"";"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:74"$74$"rs = st.executeQuery(query);"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:75"$75$"System.out.println(query);"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:76"$76$"if (connection != null)"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:77"$77$"System.out.println(""Connection succeded!"");"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:78"$78$"if (!rs.isBeforeFirst()) {"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:79"$79$"/*"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:80"$80$"* If the product is missing, return 404 response"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:81"$81$"*/"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:82"$82$"System.out.println(""no result"");"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:83"$83$"return Response.status(404).build();"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:84"$84$"} else {"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:85"$85$"while (rs.next()) {"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:86"$86$"/*"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:87"$87$"* Construct the URI of the product thanks to its filename"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:88"$88$"*/"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:89"$89$"String name = rs.getString(""filename"");"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:90"$90$"String uri = ""Products/"" + name;"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:91"$91$"System.out.println(uri);"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:92"$92$"/*"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:93"$93$"* Return the URI to the client"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:94"$94$"*/"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:95"$95$"return Response.ok(uri, ""text/html"").build();"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:96"$96$"}"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:97"$97$"}"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:98"$98$"} catch (SQLException e) {"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:99"$99$"// TODO Auto-generated catch block"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:100"$100$"e.printStackTrace();"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:101"$101$"}"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:102"$102$"return null;"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:103"$103$"}"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\OrderGetURI.java:104"$104$"}"$"ignore"$0$"..\sql-dataset\test\secured\OrderGetURI.java"
"secured\WorldStatePublicationSeq.java:1"$1$"/*"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:2"$2$"* To change this license header, choose License Headers in Project Properties."$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:3"$3$"* To change this template file, choose Tools | Templates"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:4"$4$"* and open the template in the editor."$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:5"$5$"*/"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:6"$6$"package org.geosdi.wps;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:7"$7$"import eu.crismaproject.icmm.icmmhelper.entity.DataItem;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:8"$8$"import eu.crismaproject.icmm.icmmhelper.entity.Transition;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:9"$9$"import eu.crismaproject.icmm.icmmhelper.entity.Worldstate;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:10"$10$"import eu.crismaproject.icmm.icmmhelper.pilotD.Categories;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:11"$11$"import eu.crismaproject.icmm.icmmhelper.pilotD.Indicators;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:12"$12$"import eu.crismaproject.icmm.icmmhelper.pilotD.PilotDHelper;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:13"$13$"import java.sql.Connection;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:14"$14$"import java.sql.ResultSet;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:15"$15$"import java.sql.Statement;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:16"$16$"import java.text.Format;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:17"$17$"import java.text.SimpleDateFormat;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:18"$18$"import java.util.Arrays;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:19"$19$"import java.util.Date;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:20"$20$"import java.util.List;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:21"$21$"import java.util.logging.Level;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:22"$22$"import java.util.logging.Logger;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:23"$23$"import jersey.repackaged.com.google.common.collect.Lists;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:24"$24$"import org.geosdi.wps.utility.IndicatorCalculator;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:25"$25$"import org.geosdi.wps.utility.GeoServerUtils;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:26"$26$"import org.geosdi.wps.utility.ICMMHelperFacade;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:27"$27$"import org.geoserver.catalog.DataStoreInfo;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:28"$28$"import org.geoserver.catalog.FeatureTypeInfo;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:29"$29$"import org.geoserver.catalog.NamespaceInfo;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:30"$30$"import org.geoserver.catalog.WorkspaceInfo;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:31"$31$"import org.geotools.process.factory.DescribeParameter;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:32"$32$"import org.geotools.process.factory.DescribeProcess;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:33"$33$"import org.geotools.process.factory.DescribeResult;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:34"$34$"import org.geoserver.wps.gs.GeoServerProcess;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:35"$35$"/**"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:36"$36$"* @author Nazzareno Sileno - CNR IMAA geoSDI Group"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:37"$37$"* @email nazzareno.sileno@geosdi.org"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:38"$38$"*/"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:39"$39$"@DescribeProcess(title = ""World State Publication in Seq"","$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:40"$40$"description = ""CRISMA WPS for publishing world states in sequence"")"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:41"$41$"public class WorldStatePublicationSeq implements GeoServerProcess {"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:42"$42$"/*"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:43"$43$"* Example link to execute the WPS:"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:44"$44$"* http://192.168.1.30:8080/geoserver/wps?service=WPS&version=1.0.0&request=Execute&identifier=gs:HazardModel&datainputs=isShakemap=true;shakeMapName=name;latitude=5;magnitude=2;longitude=5;depth=10;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:45"$45$"* Example cURL request:"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:46"$46$"* curl -u admin:m_Loa5hJz8Vb -H 'Content-type: xml' -XPOST -d@'/home/andypower/tdv_wps_Sync.xml' http://wps.plinivs.it:8080/geoserver/wps"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:47"$47$"*/"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:48"$48$"private Logger logger = Logger.getLogger(""org.geosdi.wps"");"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:49"$49$"private int PROCESS_PHASES = 2;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:50"$50$"private GeoServerUtils geoServerUtils;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:51"$51$"private ICMMHelperFacade icmmHelperFacade;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:52"$52$"public WorldStatePublicationSeq(GeoServerUtils geoServerUtils, ICMMHelperFacade icmmHelperFacade) {"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:53"$53$"this.geoServerUtils = geoServerUtils;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:54"$54$"this.icmmHelperFacade = icmmHelperFacade;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:55"$55$"}"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:56"$56$"@DescribeResult(name = ""result"", description = ""String that indicates the """$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:57"$57$"+ ""result state of the execution"")"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:58"$58$"public String execute("$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:59"$59$"@DescribeParameter(name = ""wsStartID"", description = ""ID of the starting world state"") int wsStartID,"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:60"$60$"@DescribeParameter(name = ""wsEndID"", description = ""ID of the latest WS to publish"") int wsEndID)"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:61"$61$"throws Exception {"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:62"$62$"if (wsStartID < wsEndID) {"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:63"$63$"throw new IllegalArgumentException(""The passed parameters are not valid, """$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:64"$64$"+ ""the ws end id must be minor than the ws start id"");"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:65"$65$"}"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:66"$66$"int noOfEvents = wsEndID - wsStartID + 1;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:67"$67$"this.PROCESS_PHASES += noOfEvents * 5;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:68"$68$"Format formatter = new SimpleDateFormat(""yyyy-MM-dd hh:mm:ss"");"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:69"$69$"Date startDate = new Date();"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:70"$70$"//*WF* Generating transition object && write transition object to ICMM"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:71"$71$"Transition transition = this.icmmHelperFacade.initProcessTransition("$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:72"$72$"""World State Publication"","$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:73"$73$"""WPS World State Publication, started on "" + formatter.format(startDate),"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:74"$74$"this.PROCESS_PHASES);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:75"$75$"//Init basic elements to publish layers"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:76"$76$"WorkspaceInfo crismaWorkspace = this.geoServerUtils.getWorkspace();"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:77"$77$"//create a namespace corresponding to the workspace if one does not "$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:78"$78$"// already exist"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:79"$79$"NamespaceInfo namespace = this.geoServerUtils.getNamespace(crismaWorkspace);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:80"$80$"Connection connection = null;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:81"$81$"Statement statement = null;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:82"$82$"ResultSet resultSet = null;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:83"$83$"try {"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:84"$84$"connection = this.geoServerUtils.connectToDatabaseOrDie();"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:85"$85$"statement = connection.createStatement();"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:86"$86$"//*WF* Fetch origin worldstate (WS) from ICMM"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:87"$87$"logger.log(Level.INFO, ""Getting ICMM world state with id: "" + 0);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:88"$88$"final Worldstate originWs = this.icmmHelperFacade.getClient()."$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:89"$89$"getWorldstate(1, 3, true);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:90"$90$"//*WF* Extract origin schema from WS"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:91"$91$"//            String originICMMSchema = PilotDHelper.getSchema(originWs);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:92"$92$"//            logger.log(Level.INFO, ""DB Origin Schema: "" + originICMMSchema);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:93"$93$"//            logger.log(Level.INFO, ""After world state fetching"");"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:94"$94$"int operation = 1;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:95"$95$"for (int i = 1; i <= noOfEvents; i++) {"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:96"$96$"//*WF* Update CCIM transition object: Preparing workspace for round #"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:97"$97$"//&& Write transition object to ICMM"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:98"$98$"this.icmmHelperFacade.updateTransition(""Preparing workspace"","$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:99"$99$"transition, operation + 1, PROCESS_PHASES, Transition.Status.RUNNING);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:100"$100$"//                SimpleFeature eqTDVPar = iterator.next();"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:101"$101$"final List<DataItem> resultItems = Lists.<DataItem>newArrayList();"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:102"$102$"int targetDBWorldStateID = 0;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:103"$103$"if (targetDBWorldStateID == 0) {"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:104"$104$"targetDBWorldStateID = wsStartID;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:105"$105$"} else {"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:106"$106$"targetDBWorldStateID = targetDBWorldStateID + 1;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:107"$107$"}"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:108"$108$"logger.log(Level.FINEST, ""Target World State to publish: """$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:109"$109$"+ targetDBWorldStateID);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:110"$110$"String worldStateSchemaOnDB = this.icmmHelperFacade.generateWorldStateName(targetDBWorldStateID);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:111"$111$"logger.log(Level.INFO, ""Result for world state name creation: "" + targetDBWorldStateID);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:112"$112$"//                Thread.sleep(30000);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:113"$113$"//*WF* Write target schema dataItem to ICMM"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:114"$114$"DataItem schemaItem = this.icmmHelperFacade.writeTargetSchemaDataItem(worldStateSchemaOnDB);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:115"$115$"resultItems.add(schemaItem);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:116"$116$"//*WF* Update CCIM transition object: Running build damage model round round #"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:117"$117$"//&& Write transition object to ICMM"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:118"$118$"this.icmmHelperFacade.updateTransition(""Publishing build damage model round: "" + i,"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:119"$119$"transition, operation + 2, PROCESS_PHASES, Transition.Status.RUNNING);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:120"$120$"// execute building damage"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:121"$121$"DataStoreInfo crismaDatastore = this.geoServerUtils.getDataStore(crismaWorkspace, worldStateSchemaOnDB);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:122"$122$"//*WF* Publishing intensity grid, building damage (min/max/avg) on WMS"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:123"$123$"FeatureTypeInfo featureTypeInfo = this.geoServerUtils.getOrPublishFeatureType("$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:124"$124$"crismaWorkspace, crismaDatastore, namespace, ""intens_grid"","$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:125"$125$"""intens_grid"");"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:126"$126$"//*WF* Write intensity grid, building damage (min/max/avg) dataitems to ICMM"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:127"$127$"String intensGridName = featureTypeInfo.getName();"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:128"$128$"DataItem dataItem = this.icmmHelperFacade.writeWMSDataItem("$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:129"$129$"intensGridName, ""Intensity Grid"", Categories.INTENSITY_GRID);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:130"$130$"resultItems.add(dataItem);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:131"$131$"featureTypeInfo = this.geoServerUtils.getOrPublishFeatureType("$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:132"$132$"crismaWorkspace, crismaDatastore, namespace,"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:133"$133$"""building_damage_varmin"", ""building_damage_lost"");"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:134"$134$"//"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:135"$135$"dataItem = this.icmmHelperFacade.writeWMSDataItem("$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:136"$136$"featureTypeInfo.getName(), ""Lost Buildings (Min)"", Categories.BUILDING_DAMAGE_MIN);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:137"$137$"resultItems.add(dataItem);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:138"$138$"featureTypeInfo = this.geoServerUtils.getOrPublishFeatureType("$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:139"$139$"crismaWorkspace, crismaDatastore, namespace,"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:140"$140$"""building_damage"", ""building_damage_lost"");"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:141"$141$"//"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:142"$142$"dataItem = this.icmmHelperFacade.writeWMSDataItem("$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:143"$143$"featureTypeInfo.getName(), ""Lost Buildings (Avg)"", Categories.BUILDING_DAMAGE_AVG);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:144"$144$"resultItems.add(dataItem);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:145"$145$"featureTypeInfo = this.geoServerUtils.getOrPublishFeatureType("$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:146"$146$"crismaWorkspace, crismaDatastore, namespace,"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:147"$147$"""building_damage_varmax"", ""building_damage_lost"");"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:148"$148$"//"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:149"$149$"dataItem = this.icmmHelperFacade.writeWMSDataItem("$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:150"$150$"featureTypeInfo.getName(), ""Lost Buildings (Max)"", Categories.BUILDING_DAMAGE_MAX);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:151"$151$"resultItems.add(dataItem);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:152"$152$"//Example WMS link: http://192.168.1.30:8080/geoserver/wms?request=GetMap&service=WMS&version=1.1.1&layers=crisma:intens_grid&format=image%2Fpng&bbox=345220.145083,4670346.1361,391220.145083,4716846.1361&width=506&height=512&srs=EPSG:32633"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:153"$153$"//*WF* Update CCIM transition object: Running building inventory update round #"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:154"$154$"//&& Write transition object to ICMM"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:155"$155$"this.icmmHelperFacade.updateTransition(""Publishing building inventory update for round: "" + i,"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:156"$156$"transition, operation + 3, PROCESS_PHASES, Transition.Status.RUNNING);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:157"$157$"//*WF* Update the building inventory"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:158"$158$"//                stringBuilder = new StringBuilder(""select aquila.v2_ooi_update('"");"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:159"$159$"//                stringBuilder.append(worldStateSchemaOnDB).append(""')"");"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:160"$160$"//                logger.log(Level.INFO, ""Building Inventory Query Executed: "" + stringBuilder.toString());"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:161"$161$"//                resultSet = statement.executeQuery(stringBuilder.toString());"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:162"$162$"//*WF* Publish building inventory on WMS"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:163"$163$"FeatureTypeInfo ooiUpdateFeatures = this.geoServerUtils.getOrPublishFeatureType("$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:164"$164$"crismaWorkspace, crismaDatastore, namespace, ""building_inventory"","$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:165"$165$"""buildings_inventory_eqvclasses"");"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:166"$166$"//*WF* Write building inventory dataitems to ICMM"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:167"$167$"String buildingInventoryName = ooiUpdateFeatures.getName();"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:168"$168$"DataItem buildingInventoryItem = this.icmmHelperFacade.writeWMSDataItem("$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:169"$169$"buildingInventoryName, ""Building Inventory"", Categories.BUILDING_INVENTORY);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:170"$170$"resultItems.add(buildingInventoryItem);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:171"$171$"//*WF* Update CCIM transition object: Running people impact for round #"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:172"$172$"//&& Write transition object to ICMM"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:173"$173$"this.icmmHelperFacade.updateTransition(""Publishing people impact for round: "" + i,"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:174"$174$"transition, operation + 4, PROCESS_PHASES, Transition.Status.RUNNING);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:175"$175$"//*WF* Execute people impact procedure"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:176"$176$"//                stringBuilder = new StringBuilder(""select aquila.v2_casualties('"");"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:177"$177$"//                stringBuilder."$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:178"$178$"//                        append(worldStateSchemaOnDB)."$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:179"$179$"//                        append(""',"")."$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:180"$180$"//                        append(i)."$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:181"$181$"//                        append("")"");"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:182"$182$"//                resultSet = statement.executeQuery(stringBuilder.toString());"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:183"$183$"//*WF* Publish people impact (min/max/avg) on WMS"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:184"$184$"//*WF* Write people impact (min/max/avg) dataitems to ICMM"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:185"$185$"FeatureTypeInfo casualitiesFeatures = this.geoServerUtils.getOrPublishFeatureType("$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:186"$186$"crismaWorkspace, crismaDatastore, namespace, ""casualties"","$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:187"$187$"""casualties_deads"");"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:188"$188$"String peopleImpactAVGName = casualitiesFeatures.getName();"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:189"$189$"DataItem peopleImpactDataItem = this.icmmHelperFacade.writeWMSDataItem("$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:190"$190$"peopleImpactAVGName, ""Deads (Avg)"", Categories.PEOPLE_IMPACT_AVG);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:191"$191$"resultItems.add(peopleImpactDataItem);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:192"$192$"casualitiesFeatures = this.geoServerUtils.getOrPublishFeatureType("$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:193"$193$"crismaWorkspace, crismaDatastore, namespace,"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:194"$194$"""casualties_varmin"", ""casualties_deads"");"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:195"$195$"String peopleImpactMinName = casualitiesFeatures.getName();;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:196"$196$"peopleImpactDataItem = this.icmmHelperFacade.writeWMSDataItem("$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:197"$197$"peopleImpactMinName, ""Deads (Min)"", Categories.PEOPLE_IMPACT_MIN);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:198"$198$"resultItems.add(peopleImpactDataItem);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:199"$199$"casualitiesFeatures = this.geoServerUtils.getOrPublishFeatureType("$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:200"$200$"crismaWorkspace, crismaDatastore, namespace,"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:201"$201$"""casualties_varmax"", ""casualties_deads"");"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:202"$202$"String peopleImpactMaxName = casualitiesFeatures.getName();"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:203"$203$"peopleImpactDataItem = this.icmmHelperFacade.writeWMSDataItem("$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:204"$204$"peopleImpactMaxName, ""Deads (Max)"", Categories.PEOPLE_IMPACT_MAX);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:205"$205$"resultItems.add(peopleImpactDataItem);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:206"$206$"//"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:207"$207$"FeatureTypeInfo peopleDistributionFeatures = this.geoServerUtils."$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:208"$208$"getOrPublishFeatureType(crismaWorkspace, crismaDatastore,"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:209"$209$"namespace, ""comp_cell"", ""people_distrib"");"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:210"$210$"String peopleDistributionName = peopleDistributionFeatures.getName();"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:211"$211$"peopleImpactDataItem = this.icmmHelperFacade.writeWMSDataItem("$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:212"$212$"peopleDistributionName, ""People Distribution"", Categories.PEOPLE_DISTRIBUTION);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:213"$213$"resultItems.add(peopleImpactDataItem);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:214"$214$"//*WF* Update CCIM transition object: Calculating indicators for round #"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:215"$215$"//&& Write transition object to ICMM"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:216"$216$"this.icmmHelperFacade.updateTransition(""Publishing indicators for round: "" + i,"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:217"$217$"transition, operation + 5, PROCESS_PHASES, Transition.Status.RUNNING);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:218"$218$"//TODO: Waiting for procedures to complete the code that calculates the indicators"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:219"$219$"Indicators indicators = IndicatorCalculator.calculateIndicators("$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:220"$220$"worldStateSchemaOnDB, connection, false);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:221"$221$"logger.log(Level.INFO, ""Calculated indicators: {0}"", indicators);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:222"$222$"//*WF* Write indicator dataitems to ICMM"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:223"$223$"DataItem indicatorsDataItem = this.icmmHelperFacade.writeIndicatorsDataItem(indicators);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:224"$224$"final Worldstate targetWs = PilotDHelper.getWorldstate(originWs, resultItems,"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:225"$225$"indicatorsDataItem, transition, ""WS "" + targetDBWorldStateID,"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:226"$226$"""This is the world state representation"");"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:227"$227$"this.icmmHelperFacade.getClient().insertSelfRefAndId(targetWs);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:228"$228$"logger.finest(""WORLD STATE: "" + targetWs);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:229"$229$"//*WF* Write new World State to ICMM"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:230"$230$"this.icmmHelperFacade.persistWorldState(targetWs, originWs);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:231"$231$"operation += 5;"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:232"$232$"}"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:233"$233$"//*WF* Update CCIM transition object: Status finished"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:234"$234$"//&& Write transition object to ICMM"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:235"$235$"transition.setDescription(""World State Publication, started on """$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:236"$236$"+ formatter.format(startDate)"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:237"$237$"+ "", ended on "" + formatter.format(new Date()));"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:238"$238$"this.icmmHelperFacade.updateTransition(""Process Executed"","$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:239"$239$"transition, PROCESS_PHASES,"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:240"$240$"PROCESS_PHASES, Transition.Status.FINISHED);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:241"$241$"return ""Process Executed correctly"";"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:242"$242$"} catch (Exception e) {"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:243"$243$"logger.log(Level.SEVERE, ""World State Publication Exception: {0}"", e);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:244"$244$"logger.log(Level.SEVERE, ""StackTrace: {0}"", Arrays.toString(e.getStackTrace()));"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:245"$245$"transition.setDescription(""WPS World State Publication, started on """$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:246"$246$"+ formatter.format(startDate)"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:247"$247$"+ "", failed on "" + formatter.format(new Date()));"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:248"$248$"this.icmmHelperFacade.updateTransition(""Exception: "" + e, transition, PROCESS_PHASES,"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:249"$249$"PROCESS_PHASES, Transition.Status.ERROR);"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:250"$250$"} finally {"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:251"$251$"if (resultSet != null) {"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:252"$252$"resultSet.close();"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:253"$253$"}"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:254"$254$"if (statement != null) {"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:255"$255$"statement.close();"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:256"$256$"}"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:257"$257$"if (connection != null) {"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:258"$258$"connection.close();"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:259"$259$"}"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:260"$260$"}"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:261"$261$"return ""Errors occured executing the process see logs for dettails"";"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:262"$262$"}"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\WorldStatePublicationSeq.java:263"$263$"}"$"ignore"$0$"..\sql-dataset\test\secured\WorldStatePublicationSeq.java"
"secured\OrderFinder.java:1"$1$"package org.example.domain.finder;"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:2"$2$"import com.avaje.ebean.Finder;"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:3"$3$"import com.avaje.ebean.OrderBy;"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:4"$4$"import com.avaje.ebean.PagedList;"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:5"$5$"import com.avaje.ebean.Query;"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:6"$6$"import org.example.domain.Order;"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:7"$7$"import org.example.domain.query.QOrder;"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:8"$8$"import java.sql.Date;"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:9"$9$"import java.util.List;"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:10"$10$"public class OrderFinder extends Finder<Long,Order> {"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:11"$11$"/**"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:12"$12$"* Construct using the default EbeanServer."$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:13"$13$"*/"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:14"$14$"public OrderFinder() {"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:15"$15$"super(Order.class);"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:16"$16$"}"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:17"$17$"/**"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:18"$18$"* Construct with a given EbeanServer."$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:19"$19$"*/"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:20"$20$"public OrderFinder(String serverName) {"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:21"$21$"super(Order.class, serverName);"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:22"$22$"}"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:23"$23$"/**"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:24"$24$"* Start a new typed query."$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:25"$25$"*/"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:26"$26$"protected QOrder where() {"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:27"$27$"return new QOrder(db());"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:28"$28$"}"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:29"$29$"/**"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:30"$30$"* Find orders with the given status."$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:31"$31$"*/"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:32"$32$"public List<Order> byStatus(Order.Status... values) {"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:33"$33$"return where()"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:34"$34$".status.in(values)"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:35"$35$".orderBy()"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:36"$36$".orderDate.desc()"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:37"$37$".id.desc()"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:38"$38$".findList();"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:39"$39$"}"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:40"$40$"/**"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:41"$41$"* Find new orders with an orderDate after the given since value."$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:42"$42$"*/"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:43"$43$"public PagedList<Order> newOrdersSince(Date since, int pageIndex) {"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:44"$44$"return where()"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:45"$45$".status.in()"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:46"$46$".status.eq(Order.Status.NEW)"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:47"$47$".or()"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:48"$48$".orderDate.after(since)"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:49"$49$".orderDate.isNull()"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:50"$50$".endOr()"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:51"$51$".findPagedList(pageIndex, 100);"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:52"$52$"}"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"secured\OrderFinder.java:53"$53$"}"$"ignore"$0$"..\sql-dataset\test\secured\OrderFinder.java"
"flawed\DbControl.java:1"$1$"package com.projects.learnwords.app;"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:2"$2$"import android.content.ContentValues;"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:3"$3$"import android.content.Context;"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:4"$4$"import android.database.Cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:5"$5$"import android.database.sqlite.SQLiteDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:6"$6$"import android.database.sqlite.SQLiteOpenHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:7"$7$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:8"$8$"import java.util.ArrayList;"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:9"$9$"import java.util.List;"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:10"$10$"public class DbControl {"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:11"$11$"private static DbControl dbControl;"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:12"$12$"private static final String DB_NAME = ""LearnWordsDB.db"";"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:13"$13$"private String TABLE_NAME;"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:14"$14$"private final int DB_VERSION;"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:15"$15$"public static final String FIRST_WORD = ""FIRST_WORD"";"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:16"$16$"public static final String SECOND_WORD = ""SECOND_WORD"";"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:17"$17$"public static final String CORRECT_FIRST_WORDS = ""CORRECT_ENGLISH_WORDS"";"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:18"$18$"public static final String CORRECT_SECOND_WORDS = ""CORRECT_RUSSIANS_WORDS"";"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:19"$19$"public static final String FIRST_COMMENT = ""FIRST_COMMENT"";"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:20"$20$"public static final String SECOND_COMMENT = ""SECOND_COMMENT"";"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:21"$21$"private SQLiteDatabase database;"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:22"$22$"private DbOpenHelper dbOpenHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:23"$23$"private Context context;"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:24"$24$"private DbControl(Context context, final String TABLE_NAME, int DB_VERSION){"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:25"$25$"super();"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:26"$26$"this.context = context;"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:27"$27$"this.TABLE_NAME = TABLE_NAME;"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:28"$28$"this.DB_VERSION =DB_VERSION;"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:29"$29$"dbOpenHelper = new DbOpenHelper(context, DB_NAME, null, DB_VERSION);"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:30"$30$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:31"$31$"//Singleton"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:32"$32$"public static DbControl createDbControl(Context context, final String TABLE_NAME, int DB_VERSION){"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:33"$33$"if(dbControl == null){"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:34"$34$"dbControl = new DbControl(context, TABLE_NAME, DB_VERSION);"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:35"$35$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:36"$36$"dbControl.TABLE_NAME = TABLE_NAME;"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:37"$37$"return dbControl;"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:38"$38$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:39"$39$"public void open() throws SQLException {"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:40"$40$"database = dbOpenHelper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:41"$41$"dbOpenHelper.onCreate(database);"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:42"$42$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:43"$43$"public void close(){"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:44"$44$"if(database!=null)"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:45"$45$"database.close();"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:46"$46$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:47"$47$"public void delete(){"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:48"$48$"database.execSQL(""DROP TABLE IF EXISTS "" + TABLE_NAME);"$"count"$1$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:49"$49$"dbControl = null;"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:50"$50$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:51"$51$"public void insert(final String FIRST_WORD, final String SECOND_WORD, final int CORRECT_FIRST_WORDS,"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:52"$52$"final int CORRECT_SECOND_WORDS, String FIRST_COMMENT, String SECOND_COMMENT) {"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:53"$53$"ContentValues values = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:54"$54$"values.put(DbControl.FIRST_WORD, FIRST_WORD);"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:55"$55$"values.put(DbControl.SECOND_WORD, SECOND_WORD);"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:56"$56$"values.put(DbControl.CORRECT_FIRST_WORDS, CORRECT_FIRST_WORDS);"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:57"$57$"values.put(DbControl.CORRECT_SECOND_WORDS, CORRECT_SECOND_WORDS);"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:58"$58$"values.put(DbControl.FIRST_COMMENT, FIRST_COMMENT);"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:59"$59$"values.put(DbControl.SECOND_COMMENT, SECOND_COMMENT);"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:60"$60$"database.insert(TABLE_NAME, null, values);"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:61"$61$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:62"$62$"public int delete(final String id) throws SQLException{"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:63"$63$"int delete = database.delete(TABLE_NAME, ""_id = ?"", new String[] {id});"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:64"$64$"return delete;"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:65"$65$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:66"$66$"public List<IDictionaryRow> readAll() throws SQLException{"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:67"$67$"return read(null);"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:68"$68$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:69"$69$"public List<IDictionaryRow> readNextTenWords(String correctWordsColumnName) throws SQLException{"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:70"$70$"return read(correctWordsColumnName);"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:71"$71$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:72"$72$"public int update(final IDictionaryRow dictObject) {"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:73"$73$"ContentValues values = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:74"$74$"values.put(DbControl.FIRST_WORD, dictObject.getFirstWord());"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:75"$75$"values.put(DbControl.SECOND_WORD, dictObject.getSecondWord());"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:76"$76$"values.put(DbControl.CORRECT_FIRST_WORDS, dictObject.getCorrectFirstWords());"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:77"$77$"values.put(DbControl.CORRECT_SECOND_WORDS, dictObject.getCorrectSecondWords());"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:78"$78$"values.put(DbControl.FIRST_COMMENT, dictObject.getFirstComment());"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:79"$79$"values.put(DbControl.SECOND_COMMENT, dictObject.getSecondComment());"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:80"$80$"String id = String.valueOf(dictObject.getId());"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:81"$81$"int update = database.update(TABLE_NAME, values, ""_id = ?"", new String[] {id});"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:82"$82$"return update;"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:83"$83$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:84"$84$"private List<IDictionaryRow> read(String columnName) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:85"$85$"List<IDictionaryRow> rows = new ArrayList<IDictionaryRow>();"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:86"$86$"Cursor cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:87"$87$"cursor = database.query(TABLE_NAME,null,null,null,null,null,null);"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:88"$88$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:89"$89$"cursorRead(cursor, rows, columnName);"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:90"$90$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:91"$91$"return rows;"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:92"$92$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:93"$93$"private void cursorRead(Cursor cursor, List<IDictionaryRow> rows, String columnName){"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:94"$94$"int index = 0;"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:95"$95$"do {"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:96"$96$"int _id = cursor.getInt(0);"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:97"$97$"String firstWord = cursor.getString(1);"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:98"$98$"String secondWord = cursor.getString(2);"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:99"$99$"int correctFirstWords = cursor.getInt(3);"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:100"$100$"int correctSecondWords = cursor.getInt(4);"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:101"$101$"String firstComment = cursor.getString(5);"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:102"$102$"String secondComment = cursor.getString(6);"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:103"$103$"if(columnName == null) {"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:104"$104$"rowAdd(rows, _id, firstWord, secondWord, correctFirstWords,"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:105"$105$"correctSecondWords, firstComment, secondComment);"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:106"$106$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:107"$107$"else if((columnName.equals(DbControl.CORRECT_FIRST_WORDS) && correctFirstWords <4)||"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:108"$108$"(columnName.equals(DbControl.CORRECT_SECOND_WORDS) && correctSecondWords<4)) {"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:109"$109$"rowAdd(rows, _id, firstWord, secondWord, correctFirstWords,"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:110"$110$"correctSecondWords, firstComment, secondComment);"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:111"$111$"index++;"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:112"$112$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:113"$113$"} while(cursor.moveToNext() && index<10);"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:114"$114$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:115"$115$"private void rowAdd(List<IDictionaryRow> rows, int _id, String firstWord, String secondWord, int correctFirstWords,"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:116"$116$"int correctSecondWords, String firstComment, String secondComment){"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:117"$117$"rows.add(new DictionaryRow(_id, firstWord, secondWord, correctFirstWords,"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:118"$118$"correctSecondWords, firstComment, secondComment));"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:119"$119$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:120"$120$"private class DbOpenHelper extends SQLiteOpenHelper{"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:121"$121$"public DbOpenHelper(Context context, final String DB_NAME, SQLiteDatabase.CursorFactory factory, int version) {"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:122"$122$"super(context, DB_NAME, factory, version);"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:123"$123$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:124"$124$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:125"$125$"public void onCreate(SQLiteDatabase db) {"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:126"$126$"final String CREATE_TABLE = ""CREATE TABLE IF NOT EXISTS "" + TABLE_NAME + "" ( _id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "" + FIRST_WORD + "" TEXT, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:127"$127$"SECOND_WORD + "" TEXT, "" + CORRECT_FIRST_WORDS + "" INTEGER, "" + CORRECT_SECOND_WORDS + "" INTEGER, "" + FIRST_COMMENT + "" TEXT, "" + SECOND_COMMENT + "" TEXT )"";"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:128"$128$"db.execSQL(CREATE_TABLE);"$"count"$1$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:129"$129$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:130"$130$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:131"$131$"public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:132"$132$"final String DROP_TABLE = ""DROP TABLE IF EXISTS "" + TABLE_NAME;"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:133"$133$"db.execSQL(DROP_TABLE);"$"count"$1$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:134"$134$"onCreate(db);"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:135"$135$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:136"$136$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"flawed\DbControl.java:137"$137$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DbControl.java"
"secured\Campus.java:1"$1$"package com.scheduler.models;"$"ignore"$0$"..\sql-dataset\test\secured\Campus.java"
"secured\Campus.java:2"$2$"import java.sql.Date;"$"ignore"$0$"..\sql-dataset\test\secured\Campus.java"
"secured\Campus.java:3"$3$"import java.sql.Time;"$"ignore"$0$"..\sql-dataset\test\secured\Campus.java"
"secured\Campus.java:4"$4$"import lombok.AllArgsConstructor;"$"ignore"$0$"..\sql-dataset\test\secured\Campus.java"
"secured\Campus.java:5"$5$"import lombok.Data;"$"ignore"$0$"..\sql-dataset\test\secured\Campus.java"
"secured\Campus.java:6"$6$"import lombok.NoArgsConstructor;"$"ignore"$0$"..\sql-dataset\test\secured\Campus.java"
"secured\Campus.java:7"$7$"@Data"$"ignore"$0$"..\sql-dataset\test\secured\Campus.java"
"secured\Campus.java:8"$8$"@NoArgsConstructor"$"ignore"$0$"..\sql-dataset\test\secured\Campus.java"
"secured\Campus.java:9"$9$"@AllArgsConstructor"$"ignore"$0$"..\sql-dataset\test\secured\Campus.java"
"secured\Campus.java:10"$10$"public class Campus {"$"ignore"$0$"..\sql-dataset\test\secured\Campus.java"
"secured\Campus.java:11"$11$"private int campusId;"$"ignore"$0$"..\sql-dataset\test\secured\Campus.java"
"secured\Campus.java:12"$12$"private int clientId;"$"ignore"$0$"..\sql-dataset\test\secured\Campus.java"
"secured\Campus.java:13"$13$"private String campusName;"$"ignore"$0$"..\sql-dataset\test\secured\Campus.java"
"secured\Campus.java:14"$14$"private String campusAddress;"$"ignore"$0$"..\sql-dataset\test\secured\Campus.java"
"secured\Campus.java:15"$15$"private Date dateCreated;"$"ignore"$0$"..\sql-dataset\test\secured\Campus.java"
"secured\Campus.java:16"$16$"}"$"ignore"$0$"..\sql-dataset\test\secured\Campus.java"
"flawed\EarthQuakesProvider.java:1"$1$"package com.carolinamanzanares.earthquakes.providers;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:2"$2$"import android.content.ContentProvider;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:3"$3$"import android.content.ContentUris;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:4"$4$"import android.content.ContentValues;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:5"$5$"import android.content.Context;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:6"$6$"import android.content.UriMatcher;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:7"$7$"import android.database.Cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:8"$8$"import android.database.sqlite.SQLiteDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:9"$9$"import android.database.sqlite.SQLiteException;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:10"$10$"import android.database.sqlite.SQLiteOpenHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:11"$11$"import android.database.sqlite.SQLiteQueryBuilder;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:12"$12$"import android.net.Uri;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:13"$13$"import android.provider.BaseColumns;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:14"$14$"import com.carolinamanzanares.earthquakes.Fragments.EarthQuakeListFragment;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:15"$15$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:16"$16$"public class EarthQuakesProvider extends ContentProvider {"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:17"$17$"private static final String AUTHORITY = ""com.carolinamanzanares.provider.earthquakes"";"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:18"$18$"public static final	Uri CONTENT_URI	= Uri.parse(""content://"" + AUTHORITY + ""/earthquakes"");"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:19"$19$"private static final int ALLROWS = 1;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:20"$20$"private static final int SINGLE_ROW	= 2;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:21"$21$"//Column names. Se acostumbra a meter en una clase, Columns que extiende BaseColumns (que implementa _id entre otras cosas)"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:22"$22$"public static class Columns implements BaseColumns {"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:23"$23$"public static final String KEY_ID = ""_id"";"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:24"$24$"public static final String KEY_PLACE = ""place"";"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:25"$25$"public static final String KEY_MAGNITUDE = ""magnitude"";"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:26"$26$"public static final String KEY_LATITUDE = ""lat"";"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:27"$27$"public static final String KEY_LONGITUDE = ""long"";"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:28"$28$"public static final String KEY_DEPTH = ""depth"";"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:29"$29$"public static final String KEY_URL = ""url"";"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:30"$30$"public static final String KEY_TIME = ""time"";"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:31"$31$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:32"$32$"private	static final UriMatcher uriMatcher;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:33"$33$"private EarthQuakeOpenHelper earthQuakeOpenHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:34"$34$"static{"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:35"$35$"uriMatcher = new UriMatcher(UriMatcher.NO_MATCH);"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:36"$36$"uriMatcher.addURI(AUTHORITY, ""earthquakes"", ALLROWS);"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:37"$37$"uriMatcher.addURI(AUTHORITY, ""earthquakes/#"", SINGLE_ROW);"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:38"$38$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:39"$39$"public EarthQuakesProvider() {"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:40"$40$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:41"$41$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:42"$42$"public int delete(Uri uri, String selection, String[] selectionArgs) {"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:43"$43$"// Implement this to handle requests to delete one or more rows."$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:44"$44$"throw new UnsupportedOperationException(""Not yet implemented"");"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:45"$45$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:46"$46$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:47"$47$"public String getType(Uri uri) {"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:48"$48$"//Return a string that identifies the MIME type"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:49"$49$"// for a Content Provider URI"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:50"$50$"switch (uriMatcher.match(uri))	{"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:51"$51$"case ALLROWS:"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:52"$52$"return	""vnd.android.cursor.dir/"" + AUTHORITY;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:53"$53$"case SINGLE_ROW:"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:54"$54$"return ""vnd.android.cursor.item/"" + AUTHORITY;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:55"$55$"default:"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:56"$56$"throw new IllegalArgumentException(""Unsupported	URI: "" + uri);"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:57"$57$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:58"$58$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:59"$59$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:60"$60$"public Uri insert(Uri uri, ContentValues values) {"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:61"$61$"SQLiteDatabase db = earthQuakeOpenHelper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:62"$62$"//si hubiera ms de una tabla"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:63"$63$"/*        switch ( uriMatcher.match(uri)) {"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:64"$64$"case ALL_ROWS :"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:65"$65$"String table = EarthQuakeOpenHelper.DATABASE_TABLE;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:66"$66$"default:break;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:67"$67$"}*/"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:68"$68$"long id = db.insert(EarthQuakeOpenHelper.DATABASE_TABLE, null, values);"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:69"$69$"if (id > -1) {"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:70"$70$"Uri insertedId = ContentUris.withAppendedId(CONTENT_URI, id);"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:71"$71$"//Esta lnea es la que permite que se actualice la vista automticamente al insertar en la DB"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:72"$72$"getContext().getContentResolver().notifyChange(insertedId, null);"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:73"$73$"return insertedId;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:74"$74$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:75"$75$"else{"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:76"$76$"return null;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:77"$77$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:78"$78$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:79"$79$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:80"$80$"public boolean onCreate() {"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:81"$81$"earthQuakeOpenHelper = new EarthQuakeOpenHelper(getContext(), earthQuakeOpenHelper.DATABASE_NAME, null, earthQuakeOpenHelper.DATABASE_VERSION);"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:82"$82$"return false;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:83"$83$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:84"$84$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:85"$85$"public Cursor query(Uri uri, String[] projection, String selection,"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:86"$86$"String[] selectionArgs, String sortOrder) {"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:87"$87$"SQLiteDatabase db;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:88"$88$"try{"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:89"$89$"db = earthQuakeOpenHelper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:90"$90$"}catch(SQLiteException ex){"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:91"$91$"db = earthQuakeOpenHelper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:92"$92$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:93"$93$"SQLiteQueryBuilder queryBuilder = new SQLiteQueryBuilder();"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:94"$94$"switch(uriMatcher.match(uri)) {"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:95"$95$"case SINGLE_ROW:"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:96"$96$"String rowID =  uri.getPathSegments().get(1);"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:97"$97$"queryBuilder.appendWhere(Columns._ID + "" = ?"");"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:98"$98$"selectionArgs = new String[]{ rowID };"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:99"$99$"default: break;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:100"$100$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:101"$101$"queryBuilder.setTables(earthQuakeOpenHelper.DATABASE_TABLE);"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:102"$102$"Cursor cursor = queryBuilder.query(db, projection, selection, selectionArgs, null, null, sortOrder);"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:103"$103$"return cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:104"$104$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:105"$105$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:106"$106$"public int update(Uri uri, ContentValues values, String selection,"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:107"$107$"String[] selectionArgs) {"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:108"$108$"// TODO: Implement this to handle requests to update one or more rows."$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:109"$109$"throw new UnsupportedOperationException(""Not yet implemented"");"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:110"$110$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:111"$111$"//Clase para gestionar la base de datos SQLite"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:112"$112$"private static class EarthQuakeOpenHelper extends SQLiteOpenHelper {"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:113"$113$"private static final String DATABASE_NAME = ""earthquakes.db"";"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:114"$114$"private static final String DATABASE_TABLE = ""EARTHQUAKES"";"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:115"$115$"private static final int DATABASE_VERSION = 1;"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:116"$116$"private static final String DATABASE_CREATE = ""CREATE table "" + DATABASE_TABLE + "" ("" +"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:117"$117$"Columns.KEY_ID + "" TEXT PRIMARY KEY,"" +"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:118"$118$"Columns.KEY_PLACE + "" TEXT,"" +"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:119"$119$"Columns.KEY_MAGNITUDE + "" REAL,"" +"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:120"$120$"Columns.KEY_LATITUDE + "" REAL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:121"$121$"Columns.KEY_LONGITUDE + "" REAL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:122"$122$"Columns.KEY_DEPTH + "" REAL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:123"$123$"Columns.KEY_URL + "" TEXT, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:124"$124$"Columns.KEY_TIME + "" INTEGER)"";"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:125"$125$"private EarthQuakeOpenHelper(Context context, String name, SQLiteDatabase.CursorFactory factory, int version) {"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:126"$126$"super(context, name, factory, version);"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:127"$127$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:128"$128$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:129"$129$"public void onCreate(SQLiteDatabase db) {"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:130"$130$"db.execSQL(DATABASE_CREATE);"$"count"$1$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:131"$131$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:132"$132$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:133"$133$"public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:134"$134$"db.execSQL(""DROP TABLE IF EXISTS"" + DATABASE_TABLE);"$"count"$1$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:135"$135$"onCreate(db);"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:136"$136$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:137"$137$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\EarthQuakesProvider.java:138"$138$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EarthQuakesProvider.java"
"flawed\LogDBAdapter.java:1"$1$"package com.uricul.gametimer;"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:2"$2$"import android.content.ContentValues;"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:3"$3$"import android.content.Context;"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:4"$4$"import android.database.Cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:5"$5$"import android.database.sqlite.SQLiteDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:6"$6$"import android.database.sqlite.SQLiteOpenHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:7"$7$"import android.util.Log;"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:8"$8$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:9"$9$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:10"$10$"* Created by  on 2014-07-07."$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:11"$11$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:12"$12$"public class LogDBAdapter {"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:13"$13$"public static final String KEY_ID = ""_id"";"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:14"$14$"public static final String KEY_INDEX = ""timer_index"";"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:15"$15$"public static final String KEY_NAME = ""name"";"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:16"$16$"public static final String KEY_DATE = ""date"";"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:17"$17$"public static final String KEY_START_TIME = ""start_time"";"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:18"$18$"public static final String KEY_STOP_TIME = ""stop_time"";"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:19"$19$"public static final String[] ALL_COLUMS = { KEY_ID, KEY_INDEX, KEY_NAME, KEY_DATE, KEY_START_TIME, KEY_STOP_TIME};"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:20"$20$"private static LogDatabaseHelper mDBHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:21"$21$"private static SQLiteDatabase mDB;"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:22"$22$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:23"$23$"*  Database Creation SQL Statement"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:24"$24$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:25"$25$"private static final String DATABASE_NAME = ""gametimer"";"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:26"$26$"private static final String DATABASE_TABLE =  ""logs"";"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:27"$27$"private static final int DATABASE_VERSION = 1;"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:28"$28$"private final Context mContext;"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:29"$29$"private static class LogDatabaseHelper extends SQLiteOpenHelper {"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:30"$30$"LogDatabaseHelper(Context context) {"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:31"$31$"super(context, DATABASE_NAME, null, DATABASE_VERSION);"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:32"$32$"}"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:33"$33$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:34"$34$"public void onCreate(SQLiteDatabase db) {"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:35"$35$"db.execSQL(""CREATE TABLE "" + DATABASE_TABLE + "" ( "" +"$"count"$1$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:36"$36$"KEY_ID + "" INTEGER PRIMARY KEY AUTOINCREMENT, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:37"$37$"KEY_INDEX + "" INTEGER, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:38"$38$"KEY_NAME + "" TEXT, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:39"$39$"KEY_DATE + "" TEXT, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:40"$40$"KEY_START_TIME + "" TEXT, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:41"$41$"KEY_STOP_TIME + "" TEXT"" +"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:42"$42$""" );"");"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:43"$43$"}"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:44"$44$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:45"$45$"public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:46"$46$"Log.d(""GameTimer DB"", ""Upgrading DB from version "" + oldVersion + "" to "" + newVersion + "", which will destroy all old data"");"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:47"$47$"db.execSQL(""DROP TABLE IF EXISTS "" + DATABASE_TABLE);"$"count"$1$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:48"$48$"onCreate(db);"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:49"$49$"}"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:50"$50$"}"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:51"$51$"public LogDBAdapter(Context context) {"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:52"$52$"this.mContext = context;"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:53"$53$"}"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:54"$54$"public LogDBAdapter open() throws SQLException {"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:55"$55$"mDBHelper = new LogDatabaseHelper(mContext);"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:56"$56$"mDB = mDBHelper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:57"$57$"return this;"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:58"$58$"}"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:59"$59$"public void close() {"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:60"$60$"mDBHelper.close();"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:61"$61$"}"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:62"$62$"public long createLog(int index, String name, String date, String startTime, String stopTime) {"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:63"$63$"if( mDB == null ) {"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:64"$64$"Log.d(""GameTimer DB"", ""createLog Error : DB is null"");"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:65"$65$"return -1;"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:66"$66$"}"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:67"$67$"ContentValues initialValues = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:68"$68$"initialValues.put(KEY_INDEX, index);"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:69"$69$"initialValues.put(KEY_NAME, name);"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:70"$70$"initialValues.put(KEY_DATE, date);"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:71"$71$"initialValues.put(KEY_START_TIME, startTime);"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:72"$72$"initialValues.put(KEY_STOP_TIME, stopTime);"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:73"$73$"return mDB.insert(DATABASE_TABLE, null, initialValues);"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:74"$74$"}"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:75"$75$"public boolean deleteLog(long rowId) {"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:76"$76$"Log.d(""GameTimer DB"", ""Delete called : value = "" + rowId);"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:77"$77$"if( mDB == null ) {"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:78"$78$"Log.d(""GameTimer DB"", ""deleteLog Error : DB is null"");"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:79"$79$"return false;"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:80"$80$"}"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:81"$81$"return mDB.delete(DATABASE_TABLE, KEY_ID + ""="" + rowId, null) > 0;"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:82"$82$"}"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:83"$83$"public boolean deleteAllLog() {"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:84"$84$"Log.d(""GameTimer DB"", ""Delete All Log"");"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:85"$85$"if( mDB == null ) {"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:86"$86$"Log.d(""GameTimer DB"", ""deleteAllLog Error : DB is null"");"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:87"$87$"return false;"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:88"$88$"}"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:89"$89$"return mDB.delete(DATABASE_TABLE, null, null) > 0;"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:90"$90$"}"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:91"$91$"public Cursor fetchAllLogs() throws SQLException {"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:92"$92$"Log.d(""GameTimer DB"", ""Fetch All Log"");"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:93"$93$"if( mDB == null ) {"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:94"$94$"Log.d(""GameTimer DB"", ""fetchAllLogs Error : DB is null"");"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:95"$95$"return null;"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:96"$96$"}"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:97"$97$"return mDB.query(DATABASE_TABLE, ALL_COLUMS, null, null, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:98"$98$"}"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:99"$99$"public Cursor fetchLogByTimerIndex(boolean[] timerIndexStates) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:100"$100$"int index = 0;"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:101"$101$"for( boolean state : timerIndexStates ) {"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:102"$102$"Log.d(""GameTimer DB"", ""fetchLog called TimerIndex["" + (index++) + ""]-"" + state );"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:103"$103$"}"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:104"$104$"if( mDB == null ) {"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:105"$105$"Log.d(""GameTimer DB"", ""fetchLog Error : DB is null"");"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:106"$106$"return null;"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:107"$107$"}"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:108"$108$"String where = """";"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:109"$109$"for( int i = 0; i < timerIndexStates.length; i++ ) {"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:110"$110$"if (timerIndexStates[i]) {"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:111"$111$"if (where.length() > 0)"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:112"$112$"where += "" OR "";"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:113"$113$"where += KEY_INDEX + ""="" + i;"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:114"$114$"}"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:115"$115$"}"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:116"$116$"Cursor cursor = mDB.query(true, DATABASE_TABLE,"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:117"$117$"ALL_COLUMS,"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:118"$118$"where,"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:119"$119$"null,"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:120"$120$"null,"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:121"$121$"null,"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:122"$122$"null,"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:123"$123$"null);"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:124"$124$"if( cursor != null )"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:125"$125$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:126"$126$"return cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:127"$127$"}"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:128"$128$"public Cursor fetchLogByDate(String date) throws  SQLException {"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:129"$129$"Log.d(""GameTimer DB"", ""fetchLogByDate : "" + date);"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:130"$130$"if( mDB == null ) {"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:131"$131$"Log.d(""GameTimer DB"", ""fetchLogByDate Error : DB is null"");"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:132"$132$"return null;"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:133"$133$"}"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:134"$134$"String prevDate = MainActivity.getDiffDate(date, 7, false);"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:135"$135$"String nextDate = MainActivity.getDiffDate(date, 7, true);"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:136"$136$"//String where = KEY_DATE + ""="" + ""'"" + date + ""'"";"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:137"$137$"String where = KEY_DATE + "">"" + ""'"" + prevDate + ""'"" + "" AND "" + KEY_DATE + ""<"" + ""'"" + nextDate + ""'"";"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:138"$138$"Cursor cursor = mDB.query(true, DATABASE_TABLE,"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:139"$139$"ALL_COLUMS,"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:140"$140$"where,"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:141"$141$"null,"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:142"$142$"null,"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:143"$143$"null,"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:144"$144$"null,"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:145"$145$"null);"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:146"$146$"if( cursor != null )"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:147"$147$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:148"$148$"return cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:149"$149$"}"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"flawed\LogDBAdapter.java:150"$150$"}"$"ignore"$0$"..\sql-dataset\test\flawed\LogDBAdapter.java"
"secured\JdbcFunction.java:1"$1$"package com.mapbar.analyzelog.report.db;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:2"$2$"import java.sql.Connection;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:3"$3$"import java.sql.ResultSet;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:4"$4$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:5"$5$"import java.sql.Statement;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:6"$6$"import com.mapbar.analyzelog.report.utils.DateUtil;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:7"$7$"/**"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:8"$8$"* JDBC"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:9"$9$"* @#:JdbcFunction.java "$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:10"$10$"* @description:  "$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:11"$11$"* @author:  sunjiayu  "$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:12"$12$"* @version: [SVN] "$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:13"$13$"* @modify: "$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:14"$14$"* @Copyright:  "$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:15"$15$"*/"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:16"$16$"public class JdbcFunction {"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:17"$17$"private Connection conn;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:18"$18$"private Statement st;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:19"$19$"private ResultSet rs;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:20"$20$"/**"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:21"$21$"*  JdbcFunction."$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:22"$22$"* "$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:23"$23$"* @throws Exception"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:24"$24$"*/"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:25"$25$"public JdbcFunction() {"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:26"$26$"try {"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:27"$27$"conn = JNDIManager.getConnection();"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:28"$28$"} catch (Exception e) {"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:29"$29$"e.printStackTrace();"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:30"$30$"}"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:31"$31$"}"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:32"$32$"/***"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:33"$33$"* "$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:34"$34$"* @param name"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:35"$35$"* @param total"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:36"$36$"* @param appid"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:37"$37$"* @throws SQLException"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:38"$38$"*/"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:39"$39$"public void saveReptile(String name,String total,String appid) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:40"$40$"String oldTotal = select(""select total from la_channel_reptile where appid='""+appid+""' and name='""+name+""' and date='""+DateUtil.getStepDay(-1)+""'"");"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:41"$41$"int addCount=0;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:42"$42$"if(oldTotal!=null && !"""".equals(oldTotal)){"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:43"$43$"addCount = Integer.parseInt(total.trim())-Integer.parseInt(oldTotal);"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:44"$44$"}"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:45"$45$"insert(""insert into la_channel_reptile value (null,'""+DateUtil.getDate()+""','""+name+""',""+addCount+"",""+total+"",""+appid+"");"");"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:46"$46$"}"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:47"$47$"public String select(String sql) throws SQLException{"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:48"$48$"st = conn.createStatement();"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:49"$49$"rs =st.executeQuery(sql);"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:50"$50$"String oldCount="""";"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:51"$51$"while(rs.next()){"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:52"$52$"oldCount = rs.getString(1);"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:53"$53$"}"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:54"$54$"rs.close();"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:55"$55$"st.close();"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:56"$56$"return oldCount;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:57"$57$"}"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:58"$58$"public void insert(String sql) throws SQLException{"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:59"$59$"st = conn.createStatement();"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:60"$60$"int s =st.executeUpdate(sql);"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:61"$61$"st.close();"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:62"$62$"}"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:63"$63$"public static void main(String[] args) throws Exception {"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:64"$64$"JdbcFunction jf = new JdbcFunction();"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:65"$65$"jf.saveReptile(""91"", ""1211"", ""1000"");"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:66"$66$"}"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"secured\JdbcFunction.java:67"$67$"}"$"ignore"$0$"..\sql-dataset\test\secured\JdbcFunction.java"
"flawed\PlayerStatisticsHelper.java:1"$1$"package com.board.stann.myapplication.db;"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:2"$2$"import android.content.ContentValues;"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:3"$3$"import android.content.Context;"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:4"$4$"import android.database.Cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:5"$5$"import android.database.sqlite.SQLiteDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:6"$6$"import android.database.sqlite.SQLiteOpenHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:7"$7$"import android.util.Log;"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:8"$8$"import java.sql.SQLDataException;"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:9"$9$"import java.util.ArrayList;"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:10"$10$"import java.util.List;"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:11"$11$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:12"$12$"* Created by User on 15/01/2015."$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:13"$13$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:14"$14$"public class PlayerStatisticsHelper extends SQLiteOpenHelper {"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:15"$15$"public static final int DATABASE_VERSION = 1;"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:16"$16$"public static final String DATABASE_NAME = ""Game.db"";"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:17"$17$"private static final String TEXT_TYPE = "" TEXT"";"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:18"$18$"private static final String INTEGER_TYPE = "" INTEGER"";"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:19"$19$"private static final String NULL = "" NULL"";"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:20"$20$"private static final String COMMA_SEP = "","";"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:21"$21$"private static final String SQL_CREATE_TABLE ="$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:22"$22$"""CREATE TABLE "" + PlayerStatistics.TABLE_NAME + "" ("" +"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:23"$23$"PlayerStatistics._ID + "" INTEGER PRIMARY KEY AUTOINCREMENT,"" +"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:24"$24$"PlayerStatistics.PLAYER_NAME + TEXT_TYPE + COMMA_SEP +"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:25"$25$"PlayerStatistics.PLAYER_WINS + INTEGER_TYPE + COMMA_SEP +"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:26"$26$"PlayerStatistics.PLAYER_LOSSES + INTEGER_TYPE + COMMA_SEP +"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:27"$27$"PlayerStatistics.LAST_GAME_TIME + TEXT_TYPE + COMMA_SEP +"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:28"$28$"PlayerStatistics.LAST_MOVEMENTS_NUM + INTEGER_TYPE + COMMA_SEP +"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:29"$29$"PlayerStatistics.PLAYER_NULLABLE_COL + TEXT_TYPE + NULL +"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:30"$30$""" )"";"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:31"$31$"private static final String SQL_DELETE_TABLE ="$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:32"$32$"""DROP TABLE IF EXISTS "" + PlayerStatistics.TABLE_NAME;"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:33"$33$"public PlayerStatisticsHelper(Context context) {"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:34"$34$"super(context, DATABASE_NAME, null, DATABASE_VERSION);"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:35"$35$"}"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:36"$36$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:37"$37$"public void onCreate(SQLiteDatabase db) {"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:38"$38$"db.execSQL(SQL_CREATE_TABLE);"$"count"$1$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:39"$39$"}"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:40"$40$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:41"$41$"public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:42"$42$"db.execSQL(SQL_DELETE_TABLE);"$"count"$1$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:43"$43$"onCreate(db);"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:44"$44$"}"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:45"$45$"public long insertPlayerStatistics(PlayerStatisticsHelper helper, String name, int wins, int losses, int movementsNum, String elapsedTime) {"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:46"$46$"// Gets the data repository in write mode"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:47"$47$"SQLiteDatabase db = helper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:48"$48$"// Create a new map of values, where column names are the keys"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:49"$49$"ContentValues values = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:50"$50$"values.put(PlayerStatistics.PLAYER_NAME, name);"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:51"$51$"values.put(PlayerStatistics.PLAYER_WINS, wins);"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:52"$52$"values.put(PlayerStatistics.PLAYER_LOSSES, losses);"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:53"$53$"values.put(PlayerStatistics.LAST_MOVEMENTS_NUM, movementsNum);"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:54"$54$"values.put(PlayerStatistics.LAST_GAME_TIME, elapsedTime);"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:55"$55$"// Insert the new row, returning the primary key value of the new row"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:56"$56$"long newRowId;"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:57"$57$"newRowId = db.insert("$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:58"$58$"PlayerStatistics.TABLE_NAME,"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:59"$59$"PlayerStatistics.PLAYER_NULLABLE_COL,"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:60"$60$"values);"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:61"$61$"return newRowId;"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:62"$62$"}"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:63"$63$"public long updatePlayerStatistics(PlayerStatisticsHelper helper, String name, long wins, long losses, long movementsNum, String elapsedTime) {"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:64"$64$"SQLiteDatabase db = helper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:65"$65$"ContentValues values = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:66"$66$"values.put(PlayerStatistics.PLAYER_WINS, wins);"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:67"$67$"values.put(PlayerStatistics.PLAYER_LOSSES, losses);"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:68"$68$"values.put(PlayerStatistics.LAST_MOVEMENTS_NUM, movementsNum);"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:69"$69$"values.put(PlayerStatistics.LAST_GAME_TIME, elapsedTime);"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:70"$70$"long newRowId;"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:71"$71$"newRowId = db.update("$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:72"$72$"PlayerStatistics.TABLE_NAME,"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:73"$73$"values,"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:74"$74$"PlayerStatistics.PLAYER_NAME + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:75"$75$"new String[]{name});"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:76"$76$"return newRowId;"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:77"$77$"}"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:78"$78$"public List<Player> readData(PlayerStatisticsHelper helper) {"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:79"$79$"SQLiteDatabase db = helper.getReadableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:80"$80$"// Define a projection that specifies which columns from the database"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:81"$81$"// you will actually use after this query."$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:82"$82$"String[] projection = {"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:83"$83$"PlayerStatistics._ID,"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:84"$84$"PlayerStatistics.PLAYER_NAME,"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:85"$85$"PlayerStatistics.PLAYER_WINS,"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:86"$86$"PlayerStatistics.PLAYER_LOSSES,"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:87"$87$"PlayerStatistics.LAST_GAME_TIME,"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:88"$88$"PlayerStatistics.LAST_MOVEMENTS_NUM"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:89"$89$"};"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:90"$90$"// How you want the results sorted in the resulting Cursor"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:91"$91$"String sortOrder = PlayerStatistics._ID + "" ASC"";"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:92"$92$"Cursor cursor = db.query("$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:93"$93$"PlayerStatistics.TABLE_NAME,  // The table to query"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:94"$94$"projection,                               // The columns to return"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:95"$95$"null,                                // The columns for the WHERE clause"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:96"$96$"null,                            // The values for the WHERE clause"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:97"$97$"null,                                     // don't group the rows"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:98"$98$"null,                                     // don't filter by row groups"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:99"$99$"sortOrder,                                 // The sort order"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:100"$100$"""10"""$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:101"$101$");"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:102"$102$"List<Player> playerList = new ArrayList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:103"$103$"while (cursor.moveToNext()) {"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:104"$104$"String name = cursor.getString(cursor.getColumnIndexOrThrow(PlayerStatistics.PLAYER_NAME));"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:105"$105$"long wins = cursor.getLong(cursor.getColumnIndexOrThrow(PlayerStatistics.PLAYER_WINS));"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:106"$106$"long losses = cursor.getLong(cursor.getColumnIndexOrThrow(PlayerStatistics.PLAYER_LOSSES));"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:107"$107$"long movementsNum = cursor.getLong(cursor.getColumnIndexOrThrow(PlayerStatistics.LAST_MOVEMENTS_NUM));"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:108"$108$"String elapsedTime = cursor.getString(cursor.getColumnIndexOrThrow(PlayerStatistics.LAST_GAME_TIME));"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:109"$109$"//Log.i(""ROWS ----------> "", id + "" - "" + name + "" - "" + wins + "" - "" + losses + "" - "" + movementsNum + "" - "" + elapsedTime);"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:110"$110$"Player player = new Player(name, wins, losses, movementsNum, elapsedTime);"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:111"$111$"playerList.add(player);"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:112"$112$"}"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:113"$113$"return playerList;"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:114"$114$"}"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:115"$115$"public List<Player> readTopScores(PlayerStatisticsHelper helper) {"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:116"$116$"SQLiteDatabase db = helper.getReadableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:117"$117$"// Define a projection that specifies which columns from the database"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:118"$118$"// you will actually use after this query."$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:119"$119$"String[] projection = {"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:120"$120$"PlayerStatistics._ID,"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:121"$121$"PlayerStatistics.PLAYER_NAME,"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:122"$122$"PlayerStatistics.PLAYER_WINS,"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:123"$123$"PlayerStatistics.PLAYER_LOSSES,"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:124"$124$"PlayerStatistics.LAST_GAME_TIME,"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:125"$125$"PlayerStatistics.LAST_MOVEMENTS_NUM"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:126"$126$"};"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:127"$127$"// How you want the results sorted in the resulting Cursor"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:128"$128$"String sortOrder = PlayerStatistics.PLAYER_WINS + "" DESC"";"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:129"$129$"Cursor cursor = db.query("$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:130"$130$"PlayerStatistics.TABLE_NAME,  // The table to query"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:131"$131$"projection,                               // The columns to return"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:132"$132$"null,                                // The columns for the WHERE clause"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:133"$133$"null,                            // The values for the WHERE clause"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:134"$134$"null,                                     // don't group the rows"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:135"$135$"null,                                     // don't filter by row groups"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:136"$136$"sortOrder,                                 // The sort order"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:137"$137$"""5"""$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:138"$138$");"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:139"$139$"List<Player> playerList = new ArrayList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:140"$140$"while (cursor.moveToNext()) {"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:141"$141$"String name = cursor.getString(cursor.getColumnIndexOrThrow(PlayerStatistics.PLAYER_NAME));"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:142"$142$"long wins = cursor.getLong(cursor.getColumnIndexOrThrow(PlayerStatistics.PLAYER_WINS));"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:143"$143$"long losses = cursor.getLong(cursor.getColumnIndexOrThrow(PlayerStatistics.PLAYER_LOSSES));"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:144"$144$"long movementsNum = cursor.getLong(cursor.getColumnIndexOrThrow(PlayerStatistics.LAST_MOVEMENTS_NUM));"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:145"$145$"String elapsedTime = cursor.getString(cursor.getColumnIndexOrThrow(PlayerStatistics.LAST_GAME_TIME));"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:146"$146$"//Log.i(""ROWS ----------> "", id + "" - "" + name + "" - "" + wins + "" - "" + losses + "" - "" + movementsNum + "" - "" + elapsedTime);"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:147"$147$"Player player = new Player(name, wins, losses, movementsNum, elapsedTime);"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:148"$148$"playerList.add(player);"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:149"$149$"}"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:150"$150$"return playerList;"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:151"$151$"}"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:152"$152$"public boolean checkIfPlayerExists(PlayerStatisticsHelper helper, String name) {"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:153"$153$"SQLiteDatabase db = helper.getReadableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:154"$154$"// Define a projection that specifies which columns from the database"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:155"$155$"// you will actually use after this query."$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:156"$156$"String[] projection = {"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:157"$157$"PlayerStatistics.PLAYER_NAME"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:158"$158$"};"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:159"$159$"// How you want the results sorted in the resulting Cursor"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:160"$160$"String sortOrder = PlayerStatistics.PLAYER_NAME + "" DESC"";"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:161"$161$"Cursor cursor = db.query("$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:162"$162$"PlayerStatistics.TABLE_NAME,  // The table to query"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:163"$163$"projection,                               // The columns to return"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:164"$164$"PlayerStatistics.PLAYER_NAME + ""=?"",                                // The columns for the WHERE clause"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:165"$165$"new String[]{name},                            // The values for the WHERE clause"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:166"$166$"null,                                     // don't group the rows"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:167"$167$"null,                                     // don't filter by row groups"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:168"$168$"sortOrder                                 // The sort order"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:169"$169$");"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:170"$170$"boolean hasRow = cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:171"$171$"return hasRow;"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:172"$172$"}"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:173"$173$"public Player getPlayerStatisticsByName(PlayerStatisticsHelper helper, String name) throws SQLDataException {"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:174"$174$"SQLiteDatabase db = helper.getReadableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:175"$175$"// Define a projection that specifies which columns from the database"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:176"$176$"// you will actually use after this query."$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:177"$177$"String[] projection = {"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:178"$178$"PlayerStatistics.PLAYER_NAME,"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:179"$179$"PlayerStatistics.PLAYER_WINS,"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:180"$180$"PlayerStatistics.PLAYER_LOSSES,"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:181"$181$"PlayerStatistics.LAST_MOVEMENTS_NUM,"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:182"$182$"PlayerStatistics.LAST_GAME_TIME,"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:183"$183$"};"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:184"$184$"// How you want the results sorted in the resulting Cursor"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:185"$185$"String sortOrder = PlayerStatistics.PLAYER_NAME + "" DESC"";"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:186"$186$"Cursor cursor = db.query("$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:187"$187$"PlayerStatistics.TABLE_NAME,  // The table to query"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:188"$188$"projection,                               // The columns to return"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:189"$189$"""player_name=?"",                                // The columns for the WHERE clause"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:190"$190$"new String[]{name},                            // The values for the WHERE clause"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:191"$191$"null,                                     // don't group the rows"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:192"$192$"null,                                     // don't filter by row groups"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:193"$193$"sortOrder                                 // The sort order"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:194"$194$");"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:195"$195$"boolean hasRow = cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:196"$196$"if (hasRow) {"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:197"$197$"String playerName = cursor.getString(cursor.getColumnIndexOrThrow(PlayerStatistics.PLAYER_NAME));"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:198"$198$"long wins = cursor.getLong(cursor.getColumnIndexOrThrow(PlayerStatistics.PLAYER_WINS));"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:199"$199$"long losses = cursor.getLong(cursor.getColumnIndexOrThrow(PlayerStatistics.PLAYER_LOSSES));"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:200"$200$"long movementsNum = cursor.getLong(cursor.getColumnIndexOrThrow(PlayerStatistics.LAST_MOVEMENTS_NUM));"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:201"$201$"String elapsedTime = cursor.getString(cursor.getColumnIndexOrThrow(PlayerStatistics.LAST_GAME_TIME));"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:202"$202$"Player player = new Player(playerName, wins, losses, movementsNum, elapsedTime);"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:203"$203$"return player;"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:204"$204$"} else {"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:205"$205$"throw new SQLDataException(""Empty result set"");"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:206"$206$"}"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:207"$207$"}"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\PlayerStatisticsHelper.java:208"$208$"}"$"ignore"$0$"..\sql-dataset\test\flawed\PlayerStatisticsHelper.java"
"flawed\BudgetDataSource.java:1"$1$"package com.mad.shinypenny.Logic;"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:2"$2$"import android.content.ContentValues;"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:3"$3$"import android.content.Context;"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:4"$4$"import android.database.Cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:5"$5$"import android.database.sqlite.SQLiteDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:6"$6$"import android.util.Log;"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:7"$7$"import com.mad.shinypenny.data.DBHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:8"$8$"import com.mad.shinypenny.data.BudgetCategory;"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:9"$9$"import com.mad.shinypenny.data.TransactionItem;"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:10"$10$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:11"$11$"import java.text.ParseException;"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:12"$12$"import java.text.SimpleDateFormat;"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:13"$13$"import java.util.ArrayList;"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:14"$14$"import java.util.List;"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:15"$15$"public class BudgetDataSource {"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:16"$16$"private SQLiteDatabase database;"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:17"$17$"private DBHelper dbHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:18"$18$"public BudgetDataSource(Context context){"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:19"$19$"dbHelper = new DBHelper(context);"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:20"$20$"}"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:21"$21$"public void open() throws SQLException{"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:22"$22$"database = dbHelper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:23"$23$"}"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:24"$24$"public void close(){"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:25"$25$"dbHelper.close();"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:26"$26$"}"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:27"$27$"public BudgetDataSource(){}"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:28"$28$"// Creating a Budget"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:29"$29$"public long createBudget(BudgetCategory budget) {"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:30"$30$"ContentValues values = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:31"$31$"values.put(dbHelper.KEY_bId, budget.getID());"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:32"$32$"values.put(dbHelper.KEY_bName, budget.getName());"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:33"$33$"database = dbHelper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:34"$34$"// insert row"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:35"$35$"long budget_id = database.insert(dbHelper.TABLE_Budget, null, values);"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:36"$36$"return budget_id;"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:37"$37$"}"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:38"$38$"/*"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:39"$39$"* get single budget"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:40"$40$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:41"$41$"public BudgetCategory getBudget(String budget_id) {"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:42"$42$"database = dbHelper.getReadableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:43"$43$"String selectQuery = ""SELECT  * FROM "" + dbHelper.TABLE_Budget + "" WHERE """$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:44"$44$"+ dbHelper.KEY_bId + "" = '"" + budget_id + ""'"";"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:45"$45$"Cursor c = database.rawQuery(selectQuery, null);"$"count"$1$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:46"$46$"BudgetCategory budget = new BudgetCategory();"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:47"$47$"if( c != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:48"$48$"c.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:49"$49$"budget.setID(c.getString(c.getColumnIndex(dbHelper.KEY_bId)));"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:50"$50$"budget.setName((c.getString(c.getColumnIndex(dbHelper.KEY_bName))));"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:51"$51$"c.close();"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:52"$52$"}else"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:53"$53$"Log.e(null, ""empty"");"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:54"$54$"return budget;"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:55"$55$"}"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:56"$56$"/*"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:57"$57$"* Updating a budget"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:58"$58$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:59"$59$"public int updateBudget(BudgetCategory budget) {"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:60"$60$"database = dbHelper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:61"$61$"ContentValues values = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:62"$62$"values.put(dbHelper.KEY_bId, budget.getID());"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:63"$63$"values.put(dbHelper.KEY_bName, budget.getName());"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:64"$64$"// updating row"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:65"$65$"return database.update(dbHelper.TABLE_Budget, values, dbHelper.KEY_bId + "" = ?"","$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:66"$66$"new String[] { String.valueOf(budget.getID()) });"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:67"$67$"}"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:68"$68$"/*"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:69"$69$"* Deleting a budget"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:70"$70$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:71"$71$"public void deleteBudget(String budget_id) {"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:72"$72$"database = dbHelper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:73"$73$"database.delete(dbHelper.TABLE_Budget, dbHelper.KEY_bId + "" = ?"","$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:74"$74$"new String[] { String.valueOf(budget_id) });"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:75"$75$"}"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:76"$76$"public List<BudgetCategory> retrieveAllBudget(){"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:77"$77$"List<BudgetCategory> budgets = new ArrayList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:78"$78$"database = dbHelper.getReadableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:79"$79$"String selectQuery = ""SELECT  * FROM "" + dbHelper.TABLE_Budget;"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:80"$80$"Cursor c = database.rawQuery(selectQuery, null);"$"count"$1$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:81"$81$"// looping through all rows and adding to list"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:82"$82$"if (c.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:83"$83$"do {"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:84"$84$"BudgetCategory budget = new BudgetCategory();"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:85"$85$"budget.setID(c.getString(c.getColumnIndex(dbHelper.KEY_bId)));"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:86"$86$"budget.setName((c.getString(c.getColumnIndex(dbHelper.KEY_bName))));"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:87"$87$"// adding to transactionItem list"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:88"$88$"budgets.add(budget);"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:89"$89$"} while (c.moveToNext());"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:90"$90$"}"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:91"$91$"return budgets;"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:92"$92$"}"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"flawed\BudgetDataSource.java:93"$93$"}"$"ignore"$0$"..\sql-dataset\test\flawed\BudgetDataSource.java"
"secured\ComponentGroupDao.java:1"$1$"package com.rotek.dao.impl;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:2"$2$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:3"$3$"import java.util.List;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:4"$4$"import org.springframework.stereotype.Repository;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:5"$5$"import com.cta.platform.persistence.dao.BaseDaoImpl;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:6"$6$"import com.cta.platform.util.ListPager;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:7"$7$"import com.rotek.dto.ComponentGroupDto;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:8"$8$"import com.rotek.entity.ComponentGroupEntity;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:9"$9$"import com.rotek.entity.ProjectEntity;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:10"$10$"/**"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:11"$11$"* @ClassName:ProjectDao"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:12"$12$"* @Description: Dao"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:13"$13$"* @Author WangJuZhu"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:14"$14$"* @date 2014610 4:37:19"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:15"$15$"* @Version:1.1.0"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:16"$16$"*/"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:17"$17$"@Repository"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:18"$18$"public class ComponentGroupDao extends BaseDaoImpl{"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:19"$19$"/**"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:20"$20$"* @MethodName: listComGroup "$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:21"$21$"* @Description: "$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:22"$22$"* @param sql"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:23"$23$"* @param params"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:24"$24$"* @param pager"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:25"$25$"* @return List<ComponentGroupDto>"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:26"$26$"* @throws SQLException"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:27"$27$"* @author WangJuZhu"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:28"$28$"*/"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:29"$29$"public List<ComponentGroupDto> listComGroup(String sql,Object[] params, ListPager pager) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:30"$30$"return this.selectPage(sql, params, ComponentGroupDto.class, pager);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:31"$31$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:32"$32$"/**"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:33"$33$"* @MethodName: listProjectByStatus "$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:34"$34$"* @Description: "$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:35"$35$"* @param status"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:36"$36$"* @return"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:37"$37$"* @throws SQLException"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:38"$38$"* @author WangJuZhu"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:39"$39$"*/"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:40"$40$"public List<ProjectEntity> listProjectByStatus(Integer status) throws SQLException{"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:41"$41$"String sql = ""select * from r_project where status = "" + status;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:42"$42$"return selectAll(sql, ProjectEntity.class);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:43"$43$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:44"$44$"/**"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:45"$45$"* @MethodName: addComGroup "$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:46"$46$"* @Description: "$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:47"$47$"* @param comgroup"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:48"$48$"* @throws SQLException"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:49"$49$"* @author WangJuZhu"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:50"$50$"*/"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:51"$51$"public void addComGroup(ComponentGroupEntity comgroup) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:52"$52$"this.insert(comgroup);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:53"$53$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:54"$54$"/**"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:55"$55$"* @MethodName: getComGroupById "$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:56"$56$"* @Description: ID"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:57"$57$"* @param id"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:58"$58$"* @return"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:59"$59$"* @throws SQLException"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:60"$60$"* @author WangJuZhu"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:61"$61$"*/"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:62"$62$"public ComponentGroupEntity getComGroupById(Integer id) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:63"$63$"String sql = ""select * from r_component_group where id = ?"";"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:64"$64$"return this.selectOne(sql,new Integer[]{id},ComponentGroupEntity.class);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:65"$65$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:66"$66$"public ComponentGroupDto getOneComGroup(Integer id) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:67"$67$"String sql = ""select cgro.*,pro.GCMC as PROJECT_NAME from r_component_group cgro """$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:68"$68$"+ "" left join r_project pro on pro.id = cgro.r_project_id where cgro.id = ?"";"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:69"$69$"return this.selectOne(sql,new Integer[]{id},ComponentGroupDto.class);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:70"$70$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:71"$71$"/**"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:72"$72$"* @MethodName: selectOneComGroupById "$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:73"$73$"* @Description: IdIDID"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:74"$74$"* @param id"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:75"$75$"* @return"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:76"$76$"* @author WangJuZhu"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:77"$77$"*/"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:78"$78$"public ComponentGroupDto selectOneComGroupById(Integer id)throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:79"$79$"// TODO Auto-generated method stub"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:80"$80$"StringBuffer sql = new StringBuffer();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:81"$81$"sql.append("" select cgro.*,pro.GCMC as PROJECT_NAME , cus.MC as CUSTOMER_NAME , pro.r_customer_id as CUSTOMER_ID from r_component_group cgro "");"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:82"$82$"sql.append("" left join r_project pro on pro.id = cgro.r_project_id "");"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:83"$83$"sql.append("" left join r_customer cus on cus.id = pro.r_customer_id "");"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:84"$84$"sql.append("" where cgro.id = ? "");"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:85"$85$"return this.selectOne(sql.toString(),new Integer[]{id},ComponentGroupDto.class);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:86"$86$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:87"$87$"/**"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:88"$88$"* @MethodName: modifyComGroup "$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:89"$89$"* @Description: "$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:90"$90$"* @param project"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:91"$91$"* @throws SQLException"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:92"$92$"* @author WangJuZhu"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:93"$93$"*/"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:94"$94$"public void modifyComGroup(ComponentGroupEntity comgroup) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:95"$95$"this.update(comgroup);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:96"$96$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:97"$97$"/**"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:98"$98$"* @MethodName: deleteComGroup "$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:99"$99$"* @Description: "$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:100"$100$"* @param sql"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:101"$101$"* @throws SQLException"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:102"$102$"* @author WangJuZhu"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:103"$103$"*/"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:104"$104$"public void deleteComGroup(String sql) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:105"$105$"this.executeUpdate(sql);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:106"$106$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:107"$107$"public List<ComponentGroupEntity> selectGroupByPid(Integer projectId,"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:108"$108$"Integer componentType, int code)throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:109"$109$"// TODO Auto-generated method stub"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:110"$110$"StringBuffer sql = new StringBuffer() ;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:111"$111$"sql.append("" select t.ID, t.R_PROJECT_ID,t.GROUP_LB,t.GROUP_BH,t.GROUP_MC,t.STATUS from r_component_group t "");"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:112"$112$"sql.append("" where 1=1 "");"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:113"$113$"if(projectId != null && projectId != 0){"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:114"$114$"sql.append("" and  R_PROJECT_ID = "" + projectId );"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:115"$115$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:116"$116$"if(componentType != null && componentType != 0){"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:117"$117$"sql.append("" and GROUP_LB = "" + componentType );"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:118"$118$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:119"$119$"sql.append("" and STATUS = "" + code );"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:120"$120$"return selectAll(sql.toString(), new Integer[]{}, ComponentGroupEntity.class);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:121"$121$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:122"$122$"public List<ComponentGroupEntity> getComGroupListByProjectId("$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:123"$123$"Integer projectId) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:124"$124$"String sql = ""select * From r_component_group where r_project_id = ? and status = ?"";"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:125"$125$"return selectAll(sql, new Integer[]{projectId,ComponentGroupEntity.STATUS_ENABLED}, ComponentGroupEntity.class);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:126"$126$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\ComponentGroupDao.java:127"$127$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentGroupDao.java"
"secured\TasksRowMapper.java:1"$1$"package com.zayats.rowmapper;"$"ignore"$0$"..\sql-dataset\test\secured\TasksRowMapper.java"
"secured\TasksRowMapper.java:2"$2$"import com.zayats.model.Task;"$"ignore"$0$"..\sql-dataset\test\secured\TasksRowMapper.java"
"secured\TasksRowMapper.java:3"$3$"import com.zayats.model.TaskStatus;"$"ignore"$0$"..\sql-dataset\test\secured\TasksRowMapper.java"
"secured\TasksRowMapper.java:4"$4$"import com.zayats.model.User;"$"ignore"$0$"..\sql-dataset\test\secured\TasksRowMapper.java"
"secured\TasksRowMapper.java:5"$5$"import org.springframework.jdbc.core.RowMapper;"$"ignore"$0$"..\sql-dataset\test\secured\TasksRowMapper.java"
"secured\TasksRowMapper.java:6"$6$"import java.sql.ResultSet;"$"ignore"$0$"..\sql-dataset\test\secured\TasksRowMapper.java"
"secured\TasksRowMapper.java:7"$7$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\secured\TasksRowMapper.java"
"secured\TasksRowMapper.java:8"$8$"public class TasksRowMapper implements RowMapper {"$"ignore"$0$"..\sql-dataset\test\secured\TasksRowMapper.java"
"secured\TasksRowMapper.java:9"$9$"public Object mapRow(ResultSet result, int arg1) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\TasksRowMapper.java"
"secured\TasksRowMapper.java:10"$10$"Task temp = new Task();"$"ignore"$0$"..\sql-dataset\test\secured\TasksRowMapper.java"
"secured\TasksRowMapper.java:11"$11$"temp.setId(result.getInt(""id""));"$"ignore"$0$"..\sql-dataset\test\secured\TasksRowMapper.java"
"secured\TasksRowMapper.java:12"$12$"temp.setName(result.getString(""name""));"$"ignore"$0$"..\sql-dataset\test\secured\TasksRowMapper.java"
"secured\TasksRowMapper.java:13"$13$"temp.setDescription(result.getString(""description""));"$"ignore"$0$"..\sql-dataset\test\secured\TasksRowMapper.java"
"secured\TasksRowMapper.java:14"$14$"temp.setCreateDate(result.getDate(""createDate""));"$"ignore"$0$"..\sql-dataset\test\secured\TasksRowMapper.java"
"secured\TasksRowMapper.java:15"$15$"temp.setDueDate(result.getDate(""dueDate""));"$"ignore"$0$"..\sql-dataset\test\secured\TasksRowMapper.java"
"secured\TasksRowMapper.java:16"$16$"temp.setDoneDate(result.getDate(""doneDate""));"$"ignore"$0$"..\sql-dataset\test\secured\TasksRowMapper.java"
"secured\TasksRowMapper.java:17"$17$"temp.setEventId(result.getInt(""eventId""));"$"ignore"$0$"..\sql-dataset\test\secured\TasksRowMapper.java"
"secured\TasksRowMapper.java:18"$18$"temp.setStatus(TaskStatus.valueOf(result.getString(""status"").toUpperCase()));"$"ignore"$0$"..\sql-dataset\test\secured\TasksRowMapper.java"
"secured\TasksRowMapper.java:19"$19$"User user = new User();"$"ignore"$0$"..\sql-dataset\test\secured\TasksRowMapper.java"
"secured\TasksRowMapper.java:20"$20$"user.setUserId(result.getInt(""userid""));"$"ignore"$0$"..\sql-dataset\test\secured\TasksRowMapper.java"
"secured\TasksRowMapper.java:21"$21$"user.setUsername(result.getString(""username""));"$"ignore"$0$"..\sql-dataset\test\secured\TasksRowMapper.java"
"secured\TasksRowMapper.java:22"$22$"user.setFirstName(result.getString(""first_name""));"$"ignore"$0$"..\sql-dataset\test\secured\TasksRowMapper.java"
"secured\TasksRowMapper.java:23"$23$"user.setLastName(result.getString(""last_name""));"$"ignore"$0$"..\sql-dataset\test\secured\TasksRowMapper.java"
"secured\TasksRowMapper.java:24"$24$"temp.setResponsible(user);"$"ignore"$0$"..\sql-dataset\test\secured\TasksRowMapper.java"
"secured\TasksRowMapper.java:25"$25$"return temp;"$"ignore"$0$"..\sql-dataset\test\secured\TasksRowMapper.java"
"secured\TasksRowMapper.java:26"$26$"}"$"ignore"$0$"..\sql-dataset\test\secured\TasksRowMapper.java"
"secured\TasksRowMapper.java:27"$27$"}"$"ignore"$0$"..\sql-dataset\test\secured\TasksRowMapper.java"
"flawed\CRUDer.java:1"$1$"package com.rudolfhladik.rd.disciplines;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:2"$2$"import android.content.ContentValues;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:3"$3$"import android.content.Context;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:4"$4$"import android.database.Cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:5"$5$"import android.database.sqlite.SQLiteDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:6"$6$"import android.database.sqlite.SQLiteOpenHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:7"$7$"import android.net.Uri;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:8"$8$"import java.sql.SQLDataException;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:9"$9$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:10"$10$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:11"$11$"* Created by RD on 1.10.2014."$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:12"$12$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:13"$13$"public class CRUDer {"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:14"$14$"UserDBHelper helper;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:15"$15$"public CRUDer(Context context){"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:16"$16$"helper = new UserDBHelper(context);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:17"$17$"}"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:18"$18$"public long saveCharToDB(Char character){"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:19"$19$"SQLiteDatabase database = helper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:20"$20$"ContentValues contentValues = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:21"$21$"contentValues.put(UserDBHelper.COLUMN_CHAR_NAME, character.charName);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:22"$22$"contentValues.put(UserDBHelper.COLUMN_CHAR_RACE, character.race);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:23"$23$"contentValues.put(UserDBHelper.COLUMN_CHAR_LEVEL, character.lvl);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:24"$24$"contentValues.put(UserDBHelper.COLUMN_CHAR_AC, character.advClass);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:25"$25$"contentValues.put(UserDBHelper.COLUMN_CHAR_ROLE, character.role);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:26"$26$"contentValues.put(UserDBHelper.COLUMN_CHAR_SPEC, character.specialization);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:27"$27$"contentValues.put(UserDBHelper.COLUMN_CHAR_FRACTION, character.fraction);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:28"$28$"contentValues.put(UserDBHelper.COLUMN_CHAR_GENDER, character.gender);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:29"$29$"contentValues.put(UserDBHelper.COLUMN_CHAR_AVATAR_URI, character.avatarUri.toString());"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:30"$30$"contentValues.put(UserDBHelper.COLUMN_CHAR_DIS0, character.disciplines[0]);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:31"$31$"contentValues.put(UserDBHelper.COLUMN_CHAR_DIS1, character.disciplines[1]);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:32"$32$"contentValues.put(UserDBHelper.COLUMN_CHAR_DIS2, character.disciplines[2]);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:33"$33$"contentValues.put(UserDBHelper.COLUMN_CHAR_DIS3, character.disciplines[3]);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:34"$34$"contentValues.put(UserDBHelper.COLUMN_CHAR_DIS4, character.disciplines[4]);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:35"$35$"contentValues.put(UserDBHelper.COLUMN_CHAR_DIS5, character.disciplines[5]);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:36"$36$"contentValues.put(UserDBHelper.COLUMN_CHAR_DIS6, character.disciplines[6]);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:37"$37$"contentValues.put(UserDBHelper.COLUMN_CHAR_DIS7, character.disciplines[7]);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:38"$38$"contentValues.put(UserDBHelper.COLUMN_CHAR_DIS8, character.disciplines[8]);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:39"$39$"contentValues.put(UserDBHelper.COLUMN_CHAR_DIS9, character.disciplines[9]);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:40"$40$"contentValues.put(UserDBHelper.COLUMN_CHAR_DIS10, character.disciplines[10]);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:41"$41$"contentValues.put(UserDBHelper.COLUMN_CHAR_DIS11, character.disciplines[11]);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:42"$42$"contentValues.put(UserDBHelper.COLUMN_CHAR_DIS12, character.disciplines[12]);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:43"$43$"contentValues.put(UserDBHelper.COLUMN_CHAR_DIS13, character.disciplines[13]);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:44"$44$"contentValues.put(UserDBHelper.COLUMN_CHAR_DIS14, character.disciplines[14]);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:45"$45$"contentValues.put(UserDBHelper.COLUMN_CHAR_DIS15, character.disciplines[15]);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:46"$46$"contentValues.put(UserDBHelper.COLUMN_CHAR_DIS16, character.disciplines[16]);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:47"$47$"contentValues.put(UserDBHelper.COLUMN_CHAR_DIS17, character.disciplines[17]);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:48"$48$"contentValues.put(UserDBHelper.COLUMN_CHAR_DIS18, character.disciplines[18]);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:49"$49$"contentValues.put(UserDBHelper.COLUMN_CHAR_DIS19, character.disciplines[19]);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:50"$50$"contentValues.put(UserDBHelper.COLUMN_CHAR_DIS20, character.disciplines[20]);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:51"$51$"long r = database.insert(UserDBHelper.CHAR_TABLE_NAME, null, contentValues);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:52"$52$"return r;}"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:53"$53$"public long saveUserToDB(User user){"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:54"$54$"SQLiteDatabase db = helper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:55"$55$"ContentValues contentValues = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:56"$56$"contentValues.put(UserDBHelper.COLUMN_NAME_USER_ID, user.getUserID());"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:57"$57$"contentValues.put(UserDBHelper.COLUMN_NAME_FIRST_NAME, user.getName());"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:58"$58$"contentValues.put(UserDBHelper.COLUMN_NAME_SURNAME, user.getSurname());"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:59"$59$"contentValues.put(UserDBHelper.COLUMN_NAME_EMAIL, user.getEmail());"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:60"$60$"contentValues.put(UserDBHelper.COLUMN_NAME_PHONE, user.getPhone());"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:61"$61$"contentValues.put(UserDBHelper.COLUMN_NAME_GID, user.getGoogleid());"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:62"$62$"long id = db.insert(UserDBHelper.USER_TABLE_NAME, null, contentValues);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:63"$63$"db.close();"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:64"$64$"return id;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:65"$65$"}"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:66"$66$"public void deleteCharFromDB(int ID){"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:67"$67$"SQLiteDatabase db = helper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:68"$68$"String query = ""DELETE FROM chars WHERE charid="" +ID + "";"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:69"$69$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:70"$70$"db.execSQL(query);"$"count"$1$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:71"$71$"}catch (android.database.SQLException e) {"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:72"$72$"}"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:73"$73$"}"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:74"$74$"public Char getCharFromDB(int id){"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:75"$75$"Char chara = new Char();"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:76"$76$"SQLiteDatabase db = helper.getReadableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:77"$77$"String rawQuery = """";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:78"$78$"rawQuery = ""Select *  from chars where charid = "" +id + "";"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:79"$79$"Cursor cursor = db.rawQuery(rawQuery, null);"$"count"$1$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:80"$80$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:81"$81$"chara.charid = cursor.getInt(0);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:82"$82$"chara.charName = cursor.getString(1);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:83"$83$"chara.race = cursor.getInt(2);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:84"$84$"chara.lvl = cursor.getInt(3);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:85"$85$"chara.advClass = cursor.getInt(4);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:86"$86$"chara.role = cursor.getInt(5);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:87"$87$"chara.specialization = cursor.getInt(6);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:88"$88$"chara.fraction = cursor.getInt(7);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:89"$89$"chara.gender = cursor.getInt(8);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:90"$90$"chara.avatarUri = Uri.parse(cursor.getString(9));"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:91"$91$"boolean[] discn = new boolean[21];"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:92"$92$"int booln;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:93"$93$"for (int n =10; n < 31; n++){"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:94"$94$"booln = cursor.getInt(n);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:95"$95$"if(booln == 0) {"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:96"$96$"discn[n-10] = false;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:97"$97$"}else {"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:98"$98$"discn[n-10] = true;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:99"$99$"}"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:100"$100$"}"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:101"$101$"chara.disciplines = discn;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:102"$102$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:103"$103$"return chara;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:104"$104$"}"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:105"$105$"public Char[] getCharsFromDB(int fraction){"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:106"$106$"SQLiteDatabase database = helper.getReadableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:107"$107$"String rawQuery = """";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:108"$108$"if (fraction == 0){"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:109"$109$"rawQuery = ""Select *  from chars where fraction = 0;"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:110"$110$"}else {"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:111"$111$"rawQuery = ""Select *  from chars where fraction = 1;"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:112"$112$"}"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:113"$113$"Cursor cursor = database.rawQuery(rawQuery, null);"$"count"$1$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:114"$114$"Char[] chars = null;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:115"$115$"int count = cursor.getCount();"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:116"$116$"if ( count > 0 ){"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:117"$117$"//            Char char0 = new Char();"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:118"$118$"//            char0.charid = cursor.getInt(0);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:119"$119$"//            char0.charName = cursor.getString(1);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:120"$120$"//            char0.race = cursor.getInt(2);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:121"$121$"//            char0.lvl = cursor.getInt(3);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:122"$122$"//            char0.advClass = cursor.getInt(4);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:123"$123$"//            char0.role = cursor.getInt(5);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:124"$124$"//            char0.specialization = cursor.getInt(6);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:125"$125$"//            char0.fraction = cursor.getInt(7);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:126"$126$"//            char0.gender = cursor.getInt(8);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:127"$127$"//"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:128"$128$"//            boolean[] disc = new boolean[21];"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:129"$129$"//            int bool;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:130"$130$"//"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:131"$131$"//"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:132"$132$"//            for (int d =10; d < 30; d++){"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:133"$133$"//"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:134"$134$"//                bool = cursor.getInt(d);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:135"$135$"//                if(bool == 0) {"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:136"$136$"//                    disc[d-10] = false;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:137"$137$"//                }else {"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:138"$138$"//                    disc[d-10] = true;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:139"$139$"//"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:140"$140$"//                }"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:141"$141$"//            }"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:142"$142$"//"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:143"$143$"//            char0.disciplines = disc;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:144"$144$"chars= new Char[count];"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:145"$145$"for (int c = 0; c< count; c++){"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:146"$146$"if (c== 0){"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:147"$147$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:148"$148$"}else {"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:149"$149$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:150"$150$"}"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:151"$151$"Char charn = new Char();"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:152"$152$"charn.charid = cursor.getInt(0);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:153"$153$"charn.charName = cursor.getString(1);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:154"$154$"charn.race = cursor.getInt(2);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:155"$155$"charn.lvl = cursor.getInt(3);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:156"$156$"charn.advClass = cursor.getInt(4);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:157"$157$"charn.role = cursor.getInt(5);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:158"$158$"charn.specialization = cursor.getInt(6);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:159"$159$"charn.fraction = cursor.getInt(7);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:160"$160$"charn.gender = cursor.getInt(8);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:161"$161$"charn.avatarUri = Uri.parse(cursor.getString(9));"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:162"$162$"boolean[] discn = new boolean[21];"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:163"$163$"int booln;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:164"$164$"for (int n =10; n < 31; n++){"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:165"$165$"booln = cursor.getInt(n);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:166"$166$"if(booln == 0) {"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:167"$167$"discn[n-10] = false;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:168"$168$"}else {"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:169"$169$"discn[n-10] = true;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:170"$170$"}"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:171"$171$"}"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:172"$172$"charn.disciplines = discn;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:173"$173$"chars[c] = charn;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:174"$174$"}"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:175"$175$"}"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:176"$176$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:177"$177$"return chars;}"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:178"$178$"public User getUserfromDB(){"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:179"$179$"SQLiteDatabase db = helper.getReadableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:180"$180$"User user = new User();"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:181"$181$"String rawQuery = ""Select *  from user;"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:182"$182$"Cursor cursor = db.rawQuery(rawQuery, null);"$"count"$1$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:183"$183$"//        Cursor cursor = db.query(UserDBHelper.USER_TABLE_NAME, UserDBHelper.COLUMNS,"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:184"$184$"//                "" userID = ?"","$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:185"$185$"//                new String[] {""*""},null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:186"$186$"if (cursor != null){"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:187"$187$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:188"$188$"user.setUserID(cursor.getString(1));"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:189"$189$"user.setName(cursor.getString(2));"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:190"$190$"user.setSurname(cursor.getString(3));"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:191"$191$"user.setEmail(cursor.getString(4));"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:192"$192$"user.setPhone(cursor.getString(5));"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:193"$193$"user.setGoogleid(cursor.getLong(6));"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:194"$194$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:195"$195$"}"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:196"$196$"return user;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:197"$197$"}"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:198"$198$"static class UserDBHelper extends SQLiteOpenHelper {"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:199"$199$"private Context context;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:200"$200$"private static final String DATABASE_NAME = ""swtor.db"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:201"$201$"private static final int DATABASE_VERSION = 1;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:202"$202$"private static final String USER_TABLE_NAME = ""user"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:203"$203$"private static final String COLUMN_NAME_ID = ""_ID"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:204"$204$"private static final String COLUMN_NAME_USER_ID = ""userID"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:205"$205$"private static final String COLUMN_NAME_FIRST_NAME = ""name"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:206"$206$"private static final String COLUMN_NAME_SURNAME = ""surname"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:207"$207$"private static final String COLUMN_NAME_EMAIL = ""email"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:208"$208$"private static final String COLUMN_NAME_PHONE = ""phone"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:209"$209$"private static final String COLUMN_NAME_GID = ""googleid"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:210"$210$"private static final String[] COLUMNS = {COLUMN_NAME_ID, COLUMN_NAME_USER_ID, COLUMN_NAME_FIRST_NAME, COLUMN_NAME_SURNAME, COLUMN_NAME_EMAIL, COLUMN_NAME_PHONE, COLUMN_NAME_GID};"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:211"$211$"private static final String CREATE_TABLE = ""CREATE TABLE "" + USER_TABLE_NAME"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:212"$212$"+ "" ("" + COLUMN_NAME_ID + "" INTEGER PRIMARY KEY AUTOINCREMENT , """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:213"$213$"+ COLUMN_NAME_USER_ID + "" VARCHAR(15), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:214"$214$"+ COLUMN_NAME_FIRST_NAME + "" VARCHAR(50), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:215"$215$"+ COLUMN_NAME_SURNAME + "" VARCHAR(50), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:216"$216$"+ COLUMN_NAME_EMAIL + "" VARCHAR(50), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:217"$217$"+ COLUMN_NAME_PHONE + "" VARCHAR(50), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:218"$218$"+ COLUMN_NAME_GID + "" BIGINT );"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:219"$219$"private static final String CHAR_TABLE_NAME = ""chars"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:220"$220$"private static final String COLUMN_CHAR_ID = ""charid"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:221"$221$"private static final String COLUMN_CHAR_NAME = ""name"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:222"$222$"private static final String COLUMN_CHAR_RACE = ""race"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:223"$223$"private static final String COLUMN_CHAR_LEVEL = ""level"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:224"$224$"private static final String COLUMN_CHAR_AC = ""ac"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:225"$225$"private static final String COLUMN_CHAR_ROLE = ""role"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:226"$226$"private static final String COLUMN_CHAR_SPEC = ""spec"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:227"$227$"private static final String COLUMN_CHAR_FRACTION = ""fraction"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:228"$228$"private static final String COLUMN_CHAR_GENDER = ""gender"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:229"$229$"private static final String COLUMN_CHAR_AVATAR_URI = ""avataruri"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:230"$230$"private static final String COLUMN_CHAR_DIS0 = ""dis0"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:231"$231$"private static final String COLUMN_CHAR_DIS1 = ""dis1"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:232"$232$"private static final String COLUMN_CHAR_DIS2 = ""dis2"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:233"$233$"private static final String COLUMN_CHAR_DIS3 = ""dis3"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:234"$234$"private static final String COLUMN_CHAR_DIS4 = ""dis4"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:235"$235$"private static final String COLUMN_CHAR_DIS5 = ""dis5"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:236"$236$"private static final String COLUMN_CHAR_DIS6 = ""dis6"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:237"$237$"private static final String COLUMN_CHAR_DIS7 = ""dis7"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:238"$238$"private static final String COLUMN_CHAR_DIS8 = ""dis8"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:239"$239$"private static final String COLUMN_CHAR_DIS9 = ""dis9"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:240"$240$"private static final String COLUMN_CHAR_DIS10 = ""dis10"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:241"$241$"private static final String COLUMN_CHAR_DIS11 = ""dis11"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:242"$242$"private static final String COLUMN_CHAR_DIS12 = ""dis12"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:243"$243$"private static final String COLUMN_CHAR_DIS13 = ""dis13"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:244"$244$"private static final String COLUMN_CHAR_DIS14 = ""dis14"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:245"$245$"private static final String COLUMN_CHAR_DIS15 = ""dis15"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:246"$246$"private static final String COLUMN_CHAR_DIS16 = ""dis16"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:247"$247$"private static final String COLUMN_CHAR_DIS17 = ""dis17"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:248"$248$"private static final String COLUMN_CHAR_DIS18 = ""dis18"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:249"$249$"private static final String COLUMN_CHAR_DIS19 = ""dis19"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:250"$250$"private static final String COLUMN_CHAR_DIS20 = ""dis20"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:251"$251$"private static final String CREATE_CHARS_TABLE ="$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:252"$252$"""CREATE TABLE "" + CHAR_TABLE_NAME + "" ("""$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:253"$253$"+ COLUMN_CHAR_ID + "" INTEGER PRIMARY KEY AUTOINCREMENT , """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:254"$254$"+ COLUMN_CHAR_NAME + "" VARCHAR(20), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:255"$255$"+ COLUMN_CHAR_RACE + "" INT(11), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:256"$256$"+ COLUMN_CHAR_LEVEL + "" INT(11), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:257"$257$"+ COLUMN_CHAR_AC + "" INT(11), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:258"$258$"+ COLUMN_CHAR_ROLE + "" INT(11), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:259"$259$"+ COLUMN_CHAR_SPEC + "" INT(11), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:260"$260$"+ COLUMN_CHAR_FRACTION + "" INT(11), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:261"$261$"+ COLUMN_CHAR_GENDER + "" INT(11), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:262"$262$"+ COLUMN_CHAR_AVATAR_URI + "" VARCHAR(1000), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:263"$263$"+ COLUMN_CHAR_DIS0 + "" INT(1), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:264"$264$"+ COLUMN_CHAR_DIS1 + "" INT(1), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:265"$265$"+ COLUMN_CHAR_DIS2 + "" INT(1), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:266"$266$"+ COLUMN_CHAR_DIS3 + "" INT(1), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:267"$267$"+ COLUMN_CHAR_DIS4 + "" INT(1), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:268"$268$"+ COLUMN_CHAR_DIS5 + "" INT(1), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:269"$269$"+ COLUMN_CHAR_DIS6 + "" INT(1), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:270"$270$"+ COLUMN_CHAR_DIS7 + "" INT(1), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:271"$271$"+ COLUMN_CHAR_DIS8 + "" INT(1), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:272"$272$"+ COLUMN_CHAR_DIS9 + "" INT(1), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:273"$273$"+ COLUMN_CHAR_DIS10 + "" INT(1), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:274"$274$"+ COLUMN_CHAR_DIS11 + "" INT(1), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:275"$275$"+ COLUMN_CHAR_DIS12 + "" INT(1), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:276"$276$"+ COLUMN_CHAR_DIS13 + "" INT(1), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:277"$277$"+ COLUMN_CHAR_DIS14 + "" INT(1), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:278"$278$"+ COLUMN_CHAR_DIS15 + "" INT(1), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:279"$279$"+ COLUMN_CHAR_DIS16 + "" INT(1), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:280"$280$"+ COLUMN_CHAR_DIS17 + "" INT(1), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:281"$281$"+ COLUMN_CHAR_DIS18 + "" INT(1), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:282"$282$"+ COLUMN_CHAR_DIS19 + "" INT(1), """$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:283"$283$"+ COLUMN_CHAR_DIS20 + "" INT(1) );"";"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:284"$284$"public UserDBHelper(Context context) {"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:285"$285$"super(context, DATABASE_NAME, null, DATABASE_VERSION);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:286"$286$"this.context = context;"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:287"$287$"}"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:288"$288$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:289"$289$"public void onCreate(SQLiteDatabase db) {"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:290"$290$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:291"$291$"db.execSQL(CREATE_TABLE);"$"count"$1$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:292"$292$"db.execSQL(CREATE_CHARS_TABLE);"$"count"$1$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:293"$293$"} catch (android.database.SQLException e) {"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:294"$294$"}"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:295"$295$"}"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:296"$296$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:297"$297$"public void onUpgrade(SQLiteDatabase db, int i, int i2) {"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:298"$298$"db.execSQL(""DROP TABLE IF EXISTS "" + CHAR_TABLE_NAME );"$"count"$1$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:299"$299$"onCreate(db);"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:300"$300$"}"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:301"$301$"}"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"flawed\CRUDer.java:302"$302$"}"$"ignore"$0$"..\sql-dataset\test\flawed\CRUDer.java"
"secured\WorkTask.java:1"$1$"package dropwizard.model;"$"ignore"$0$"..\sql-dataset\test\secured\WorkTask.java"
"secured\WorkTask.java:2"$2$"import java.sql.Date;"$"ignore"$0$"..\sql-dataset\test\secured\WorkTask.java"
"secured\WorkTask.java:3"$3$"public class WorkTask extends BaseTask implements Task {"$"ignore"$0$"..\sql-dataset\test\secured\WorkTask.java"
"secured\WorkTask.java:4"$4$"public WorkTask(String name, String description, Date dueDate) {"$"ignore"$0$"..\sql-dataset\test\secured\WorkTask.java"
"secured\WorkTask.java:5"$5$"super(name, description, dueDate);"$"ignore"$0$"..\sql-dataset\test\secured\WorkTask.java"
"secured\WorkTask.java:6"$6$"}"$"ignore"$0$"..\sql-dataset\test\secured\WorkTask.java"
"secured\WorkTask.java:7"$7$"public void doTask() {"$"ignore"$0$"..\sql-dataset\test\secured\WorkTask.java"
"secured\WorkTask.java:8"$8$"System.out.println(String.format(""Work Task: %s: %s"", getName(), getDescription()));"$"ignore"$0$"..\sql-dataset\test\secured\WorkTask.java"
"secured\WorkTask.java:9"$9$"}"$"ignore"$0$"..\sql-dataset\test\secured\WorkTask.java"
"secured\WorkTask.java:10"$10$"}"$"ignore"$0$"..\sql-dataset\test\secured\WorkTask.java"
"flawed\SqlHandler.java:1"$1$"package se.johan.wendler.sql;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:2"$2$"import android.content.ContentValues;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:3"$3$"import android.content.Context;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:4"$4$"import android.database.Cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:5"$5$"import android.database.sqlite.SQLiteDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:6"$6$"import android.database.sqlite.SQLiteOpenHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:7"$7$"import android.text.TextUtils;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:8"$8$"import android.text.format.Time;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:9"$9$"import java.io.File;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:10"$10$"import java.io.FileInputStream;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:11"$11$"import java.io.FileOutputStream;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:12"$12$"import java.io.IOException;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:13"$13$"import java.nio.channels.FileChannel;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:14"$14$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:15"$15$"import java.util.ArrayList;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:16"$16$"import java.util.List;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:17"$17$"import java.util.Locale;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:18"$18$"import se.johan.wendler.model.AdditionalExercise;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:19"$19$"import se.johan.wendler.model.DeloadItem;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:20"$20$"import se.johan.wendler.model.ExerciseSet;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:21"$21$"import se.johan.wendler.model.MainExercise;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:22"$22$"import se.johan.wendler.model.SetGroup;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:23"$23$"import se.johan.wendler.model.SetType;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:24"$24$"import se.johan.wendler.model.Workout;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:25"$25$"import se.johan.wendler.util.Constants;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:26"$26$"import se.johan.wendler.util.PreferenceUtil;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:27"$27$"import se.johan.wendler.util.StringHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:28"$28$"import se.johan.wendler.util.WendlerConstants;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:29"$29$"import se.johan.wendler.util.WendlerMath;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:30"$30$"import se.johan.wendler.util.WendlerizedLog;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:31"$31$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:32"$32$"* A class for handling queries against the SQL database"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:33"$33$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:34"$34$"@SuppressWarnings(""BooleanMethodIsAlwaysInverted"")"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:35"$35$"public class SqlHandler {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:36"$36$"public static final String DATABASE_NAME = ""WendlerizedDb"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:37"$37$"private static final int DATABASE_VERSION = 12;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:38"$38$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:39"$39$"* Stats table *"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:40"$40$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:41"$41$"private static final String DATABASE_TABLE_WENDLER_STATS = ""wendler_stats"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:42"$42$"private static final String KEY_ROW_ID = ""_id"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:43"$43$"private static final String KEY_TRAINING_PERCENTAGE = ""working_percentage"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:44"$44$"private static final String KEY_1RM = ""one_rm"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:45"$45$"private static final String KEY_ORDER = ""order_in_week"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:46"$46$"private static final String KEY_INCREMENT = ""increment"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:47"$47$"private static final String KEY_WEEK = ""week"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:48"$48$"private static final String KEY_CYCLE = ""cycle"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:49"$49$"private static final String KEY_CYCLE_NAME = ""cycle_name"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:50"$50$"private static final String KEY_NAME = ""name"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:51"$51$"private static final String KEY_SHOULD_DELOAD = ""should_deload"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:52"$52$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:53"$53$"* Percentage table *"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:54"$54$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:55"$55$"private static final String DATABASE_TABLE_PERCENT = ""wendler_percentages"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:56"$56$"private static final String KEY_WEEK_ONE = ""percent_week_1"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:57"$57$"private static final String KEY_WEEK_TWO = ""percent_week_2"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:58"$58$"private static final String KEY_WEEK_THREE = ""percent_week_3"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:59"$59$"private static final String KEY_WEEK_FOUR = ""percent_week_4"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:60"$60$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:61"$61$"* Workout table *"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:62"$62$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:63"$63$"private static final String DATABASE_TABLE_WENDLER_WORKOUT = ""wendler_workout"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:64"$64$"private static final String KEY_WORKOUT_ID = ""workout_id"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:65"$65$"private static final String KEY_INSERT_TIME = ""insert_time"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:66"$66$"private static final String KEY_WORKOUT_YEAR = ""workout_year"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:67"$67$"private static final String KEY_WORKOUT_MONTH = ""workout_month"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:68"$68$"private static final String KEY_WORKOUT_DAY = ""workout_day"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:69"$69$"private static final String KEY_WORKOUT_EXERCISE = ""exercise"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:70"$70$"private static final String KEY_WORKOUT_REPS = ""reps"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:71"$71$"private static final String KEY_WORKOUT_ONE_RM = ""one_rm"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:72"$72$"private static final String KEY_WORKOUT_LAST_SET = ""last_set_weight"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:73"$73$"private static final String KEY_WORKOUT_WEEK = ""week"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:74"$74$"private static final String KEY_WORKOUT_CYCLE = ""cycle"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:75"$75$"private static final String KEY_WORKOUT_NOTES = ""notes"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:76"$76$"private static final String KEY_WORKOUT_WON = ""workout_won"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:77"$77$"private static final String KEY_WORKOUT_COMPLETED = ""workout_completed"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:78"$78$"private static final String KEY_WORKOUT_EST_ONE_RM = ""est_one_rm"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:79"$79$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:80"$80$"* Extra workout table *"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:81"$81$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:82"$82$"private static final String DATABASE_TABLE_WENDLER_EXTRA = ""workout_extra"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:83"$83$"private static final String KEY_EXERCISE_NAME = ""exercise_name"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:84"$84$"private static final String KEY_NUMBER_OF_SETS_OR_REPS_TO_BE_DONE = ""nbr_of_sets"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:85"$85$"private static final String KEY_EXTRA_WEIGHT = ""extra_weight"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:86"$86$"private static final String KEY_EXTRA_REPS_OR_SETS_COMPLETED = ""extra_reps"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:87"$87$"private static final String KEY_EXTRA_EXERCISE_ID = ""extra_exercise_id"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:88"$88$"private static final String KEY_MAIN_EXERCISE_WEIGHT = ""main_exercise_weight"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:89"$89$"private static final String KEY_IS_STARTED = ""is_started"" ;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:90"$90$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:91"$91$"* List of extra exercises, commented out ones are used but simply here for simplicity"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:92"$92$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:93"$93$"private static final String DATABASE_TABLE_WENDLER_EXTRA_LIST = ""workout_extra_list"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:94"$94$"//    private static final String KEY_EXERCISE_NAME = ""exercise_name"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:95"$95$"//    private static final String KEY_NUMBER_OF_SETS_OR_REPS_TO_BE_DONE = ""nbr_of_sets"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:96"$96$"//    private static final String KEY_EXTRA_WEIGHT = ""extra_weight"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:97"$97$"//    private static final String KEY_EXTRA_REPS_OR_SETS_COMPLETED = ""extra_reps"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:98"$98$"private static final String KEY_EXTRA_PERCENTAGE_OF_MAIN_EXERCISE"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:99"$99$"= ""extra_percentage_of_main_exercise"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:100"$100$"private static final String KEY_EXTRA_ORDER_IN_LIST = ""extra_order_in_list"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:101"$101$"private static final String KEY_EXTRA_MAIN_EXERCISE_NAME ="$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:102"$102$"""extra_main_exercise_name"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:103"$103$"private static final String KEY_IS_BBB = ""is_bbb"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:104"$104$"private final Context mContext;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:105"$105$"private DbHelper mDbHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:106"$106$"private SQLiteDatabase mDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:107"$107$"private boolean mIsOpen;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:108"$108$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:109"$109$"* Constructor"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:110"$110$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:111"$111$"public SqlHandler(Context context) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:112"$112$"mContext = context;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:113"$113$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:114"$114$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:115"$115$"* Open the connection to the SQLite database."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:116"$116$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:117"$117$"public void open() throws SQLException {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:118"$118$"if (mIsOpen && mDbHelper != null && mDatabase != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:119"$119$"return;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:120"$120$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:121"$121$"mDbHelper = new DbHelper(mContext);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:122"$122$"mDatabase = mDbHelper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:123"$123$"mIsOpen = true;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:124"$124$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:125"$125$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:126"$126$"* Close the connection to the database."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:127"$127$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:128"$128$"public void close() {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:129"$129$"if (mIsOpen && mDbHelper != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:130"$130$"mDbHelper.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:131"$131$"mIsOpen = false;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:132"$132$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:133"$133$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:134"$134$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:135"$135$"* Insert one rm for all exercises as well as the workout percentage."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:136"$136$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:137"$137$"public void insertOneRmAndWorkoutPercentage(double pressOneRm,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:138"$138$"double deadliftOneRm,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:139"$139$"double benchOneRm,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:140"$140$"double squatOneRm,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:141"$141$"int workoutPercentage) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:142"$142$"ContentValues cv = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:143"$143$"cv.put(KEY_1RM, pressOneRm);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:144"$144$"cv.put(KEY_CYCLE, 1);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:145"$145$"cv.put(KEY_CYCLE_NAME, 1);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:146"$146$"cv.put(KEY_WEEK, 1);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:147"$147$"cv.put(KEY_TRAINING_PERCENTAGE, workoutPercentage);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:148"$148$"cv.put(KEY_NAME, Constants.EXERCISES[0]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:149"$149$"mDatabase.insert(DATABASE_TABLE_WENDLER_STATS, null, cv);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:150"$150$"cv.clear();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:151"$151$"cv.put(KEY_1RM, deadliftOneRm);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:152"$152$"cv.put(KEY_CYCLE, 1);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:153"$153$"cv.put(KEY_CYCLE_NAME, 1);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:154"$154$"cv.put(KEY_WEEK, 1);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:155"$155$"cv.put(KEY_TRAINING_PERCENTAGE, workoutPercentage);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:156"$156$"cv.put(KEY_NAME, Constants.EXERCISES[1]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:157"$157$"mDatabase.insert(DATABASE_TABLE_WENDLER_STATS, null, cv);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:158"$158$"cv.clear();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:159"$159$"cv.put(KEY_1RM, benchOneRm);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:160"$160$"cv.put(KEY_CYCLE, 1);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:161"$161$"cv.put(KEY_CYCLE_NAME, 1);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:162"$162$"cv.put(KEY_WEEK, 1);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:163"$163$"cv.put(KEY_TRAINING_PERCENTAGE, workoutPercentage);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:164"$164$"cv.put(KEY_NAME, Constants.EXERCISES[2]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:165"$165$"mDatabase.insert(DATABASE_TABLE_WENDLER_STATS, null, cv);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:166"$166$"cv.clear();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:167"$167$"cv.put(KEY_1RM, squatOneRm);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:168"$168$"cv.put(KEY_CYCLE, 1);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:169"$169$"cv.put(KEY_CYCLE_NAME, 1);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:170"$170$"cv.put(KEY_WEEK, 1);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:171"$171$"cv.put(KEY_TRAINING_PERCENTAGE, workoutPercentage);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:172"$172$"cv.put(KEY_NAME, Constants.EXERCISES[3]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:173"$173$"mDatabase.insert(DATABASE_TABLE_WENDLER_STATS, null, cv);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:174"$174$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:175"$175$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:176"$176$"* Insert the order of workouts."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:177"$177$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:178"$178$"public void insertExerciseOrder(int pressDay, int deadliftDay, int benchDay, int squatDay) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:179"$179$"ContentValues cv = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:180"$180$"cv.put(KEY_ORDER, pressDay);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:181"$181$"mDatabase.update(DATABASE_TABLE_WENDLER_STATS, cv, KEY_NAME + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:182"$182$"new String[]{Constants.EXERCISES[0]});"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:183"$183$"cv.clear();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:184"$184$"cv.put(KEY_ORDER, deadliftDay);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:185"$185$"mDatabase.update(DATABASE_TABLE_WENDLER_STATS, cv, KEY_NAME + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:186"$186$"new String[]{Constants.EXERCISES[1]});"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:187"$187$"cv.clear();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:188"$188$"cv.put(KEY_ORDER, benchDay);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:189"$189$"mDatabase.update(DATABASE_TABLE_WENDLER_STATS, cv, KEY_NAME + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:190"$190$"new String[]{Constants.EXERCISES[2]});"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:191"$191$"cv.clear();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:192"$192$"cv.put(KEY_ORDER, squatDay);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:193"$193$"mDatabase.update(DATABASE_TABLE_WENDLER_STATS, cv, KEY_NAME + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:194"$194$"new String[]{Constants.EXERCISES[3]});"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:195"$195$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:196"$196$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:197"$197$"* Insert the percentages for our workouts."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:198"$198$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:199"$199$"public void insertWeekPercentages("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:200"$200$"int[] weekOne, int[] weekTwo, int[] weekThree, int[] weekFour) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:201"$201$"ContentValues cv = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:202"$202$"cv.put(KEY_WEEK_ONE, weekOne[0]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:203"$203$"cv.put(KEY_WEEK_TWO, weekTwo[0]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:204"$204$"cv.put(KEY_WEEK_THREE, weekThree[0]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:205"$205$"cv.put(KEY_WEEK_FOUR, weekFour[0]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:206"$206$"mDatabase.insert(DATABASE_TABLE_PERCENT, null, cv);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:207"$207$"cv.clear();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:208"$208$"cv.put(KEY_WEEK_ONE, weekOne[1]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:209"$209$"cv.put(KEY_WEEK_TWO, weekTwo[1]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:210"$210$"cv.put(KEY_WEEK_THREE, weekThree[1]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:211"$211$"cv.put(KEY_WEEK_FOUR, weekFour[1]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:212"$212$"mDatabase.insert(DATABASE_TABLE_PERCENT, null, cv);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:213"$213$"cv.clear();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:214"$214$"cv.put(KEY_WEEK_ONE, weekOne[2]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:215"$215$"cv.put(KEY_WEEK_TWO, weekTwo[2]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:216"$216$"cv.put(KEY_WEEK_THREE, weekThree[2]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:217"$217$"cv.put(KEY_WEEK_FOUR, weekFour[2]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:218"$218$"mDatabase.insert(DATABASE_TABLE_PERCENT, null, cv);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:219"$219$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:220"$220$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:221"$221$"* Update the percentages of our workouts."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:222"$222$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:223"$223$"public void updatePercentages(int[] weekOne, int[] weekTwo, int[] weekThree, int[] weekFour) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:224"$224$"ContentValues cv = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:225"$225$"cv.put(KEY_WEEK_ONE, weekOne[0]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:226"$226$"cv.put(KEY_WEEK_TWO, weekTwo[0]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:227"$227$"cv.put(KEY_WEEK_THREE, weekThree[0]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:228"$228$"cv.put(KEY_WEEK_FOUR, weekFour[0]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:229"$229$"mDatabase.update(DATABASE_TABLE_PERCENT, cv, KEY_ROW_ID + ""=?"", new String[]{""1""});"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:230"$230$"cv.clear();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:231"$231$"cv.put(KEY_WEEK_ONE, weekOne[1]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:232"$232$"cv.put(KEY_WEEK_TWO, weekTwo[1]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:233"$233$"cv.put(KEY_WEEK_THREE, weekThree[1]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:234"$234$"cv.put(KEY_WEEK_FOUR, weekFour[1]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:235"$235$"mDatabase.update(DATABASE_TABLE_PERCENT, cv, KEY_ROW_ID + ""=?"", new String[]{""2""});"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:236"$236$"cv.clear();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:237"$237$"cv.put(KEY_WEEK_ONE, weekOne[2]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:238"$238$"cv.put(KEY_WEEK_TWO, weekTwo[2]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:239"$239$"cv.put(KEY_WEEK_THREE, weekThree[2]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:240"$240$"cv.put(KEY_WEEK_FOUR, weekFour[2]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:241"$241$"mDatabase.update(DATABASE_TABLE_PERCENT, cv, KEY_ROW_ID + ""=?"", new String[]{""3""});"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:242"$242$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:243"$243$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:244"$244$"* Insert the initial increments for workouts."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:245"$245$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:246"$246$"public void insertIncrements(double pressIncrement,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:247"$247$"double deadliftIncrement,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:248"$248$"double benchIncrement,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:249"$249$"double squatIncrement) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:250"$250$"ContentValues cv = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:251"$251$"cv.put(KEY_INCREMENT, pressIncrement);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:252"$252$"mDatabase.update(DATABASE_TABLE_WENDLER_STATS, cv, KEY_NAME + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:253"$253$"new String[]{Constants.EXERCISES[0]});"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:254"$254$"cv.clear();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:255"$255$"cv.put(KEY_INCREMENT, deadliftIncrement);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:256"$256$"mDatabase.update(DATABASE_TABLE_WENDLER_STATS, cv, KEY_NAME + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:257"$257$"new String[]{Constants.EXERCISES[1]});"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:258"$258$"cv.clear();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:259"$259$"cv.put(KEY_INCREMENT, benchIncrement);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:260"$260$"mDatabase.update(DATABASE_TABLE_WENDLER_STATS, cv, KEY_NAME + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:261"$261$"new String[]{Constants.EXERCISES[2]});"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:262"$262$"cv.clear();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:263"$263$"cv.put(KEY_INCREMENT, squatIncrement);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:264"$264$"mDatabase.update(DATABASE_TABLE_WENDLER_STATS, cv, KEY_NAME + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:265"$265$"new String[]{Constants.EXERCISES[3]});"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:266"$266$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:267"$267$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:268"$268$"* Return if the data base is initialized."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:269"$269$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:270"$270$"public boolean isInitialized() {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:271"$271$"Cursor c = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:272"$272$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:273"$273$"c = mDatabase.query(DATABASE_TABLE_WENDLER_STATS, new String[]{KEY_ROW_ID},"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:274"$274$"null, null, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:275"$275$"return c != null && c.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:276"$276$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:277"$277$"if (c != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:278"$278$"c.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:279"$279$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:280"$280$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:281"$281$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:282"$282$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:283"$283$"* Return a list of workouts for a given week."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:284"$284$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:285"$285$"public ArrayList<Workout> getWorkoutsForList(int week) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:286"$286$"ArrayList<Workout> list = new ArrayList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:287"$287$"String[] names = getExerciseNamesInOrder();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:288"$288$"for (String name : names) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:289"$289$"int cycle = getCurrentCycle(name);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:290"$290$"int cycleName = getCurrentCycleName(name);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:291"$291$"int id = exerciseHasBeenDone(name, week, cycle);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:292"$292$"if (id != -1) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:293"$293$"boolean isWorkoutComplete = isWorkoutComplete(id);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:294"$294$"list.add(new Workout(name, StringHelper.getTranslatableName(mContext, name),"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:295"$295$"isWorkoutComplete, exerciseWon(id),"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:296"$296$"week, cycle, cycleName, id, getMainExerciseForWorkout(isWorkoutComplete, id)"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:297"$297$", getExtraExerciseForWorkout(name, id, isWorkoutComplete),"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:298"$298$"getInsertTimeForId(id), getTimeForWorkout(id), getNotesForWorkout(id)));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:299"$299$"} else {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:300"$300$"WendlerizedLog.d(""Add: "" + name + "" Week: "" + week + "" Cycle: "" + cycle);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:301"$301$"list.add(new Workout(name, StringHelper.getTranslatableName(mContext, name),"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:302"$302$"week, cycle, cycleName, -1, getMainExerciseForWorkout(name, week)));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:303"$303$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:304"$304$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:305"$305$"return list;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:306"$306$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:307"$307$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:308"$308$"* Return the names of our exercises in order converted to references a string item"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:309"$309$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:310"$310$"public String[] getExerciseNamesInOrder() {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:311"$311$"String[] arr = new String[4];"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:312"$312$"Cursor cursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:313"$313$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:314"$314$"cursor = mDatabase.query(DATABASE_TABLE_WENDLER_STATS, new String[]{KEY_NAME},"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:315"$315$"null, null, null, null, KEY_ORDER + "" ASC "");"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:316"$316$"int i = 0;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:317"$317$"if (cursor != null && cursor.getCount() > 0) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:318"$318$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:319"$319$"do {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:320"$320$"arr[i] = cursor.getString(cursor.getColumnIndex(KEY_NAME));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:321"$321$"i++;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:322"$322$"} while (cursor.moveToNext() && i < arr.length);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:323"$323$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:324"$324$"return arr;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:325"$325$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:326"$326$"if (cursor != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:327"$327$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:328"$328$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:329"$329$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:330"$330$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:331"$331$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:332"$332$"* Return the main exercise for a given workout."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:333"$333$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:334"$334$"public MainExercise getMainExerciseForWorkout(Workout workout) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:335"$335$"return getMainExerciseForWorkout(workout.getName(), workout.getWeek());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:336"$336$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:337"$337$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:338"$338$"* Return main exercise for a given week and name."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:339"$339$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:340"$340$"public MainExercise getMainExerciseForWorkout(String name, int week) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:341"$341$"String[] columns ="$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:342"$342$"new String[]{KEY_TRAINING_PERCENTAGE, KEY_1RM, KEY_INCREMENT, KEY_NAME};"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:343"$343$"Cursor cursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:344"$344$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:345"$345$"cursor = mDatabase.query(DATABASE_TABLE_WENDLER_STATS, columns,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:346"$346$"KEY_NAME + ""=?"", new String[]{name}, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:347"$347$"if (cursor != null && cursor.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:348"$348$"double increment = cursor.getFloat(cursor.getColumnIndex(KEY_INCREMENT));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:349"$349$"int workoutPercentage = cursor.getInt(cursor.getColumnIndex"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:350"$350$"(KEY_TRAINING_PERCENTAGE));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:351"$351$"double oneRm = cursor.getFloat(cursor.getColumnIndex(KEY_1RM));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:352"$352$"int[] setPercentages = getSetPercentages(week);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:353"$353$"boolean showWarmUp = PreferenceUtil.getBoolean("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:354"$354$"mContext, PreferenceUtil.KEY_SHOW_WARM_UP, true);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:355"$355$"List<SetGroup> setGroups = new ArrayList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:356"$356$"if (showWarmUp) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:357"$357$"String serialized = PreferenceUtil.getString("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:358"$358$"mContext,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:359"$359$"PreferenceUtil.KEY_WARM_UP_SETS,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:360"$360$"WendlerConstants.DEFAULT_WARMUP_PERCENTAGES);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:361"$361$"List<ExerciseSet> set = WendlerMath.getWarmupSets("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:362"$362$"mContext, oneRm, serialized.split("",""), -1);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:363"$363$"setGroups.add(new SetGroup(SetType.WARM_UP, set));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:364"$364$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:365"$365$"List<ExerciseSet> set = WendlerMath.getWorkoutSets("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:366"$366$"mContext, oneRm, setPercentages, week, -1);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:367"$367$"ArrayList<ExerciseSet> sets = new ArrayList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:368"$368$"sets.addAll(set);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:369"$369$"setGroups.add(new SetGroup(SetType.REGULAR, set));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:370"$370$"int highestEstimated1RM = getHighestEstimated1RM(name);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:371"$371$"int repsToBeat = WendlerMath.getRepsToBeat(set, highestEstimated1RM);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:372"$372$"return new MainExercise("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:373"$373$"name, oneRm, increment, sets, setGroups, workoutPercentage, 0, repsToBeat);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:374"$374$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:375"$375$"return null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:376"$376$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:377"$377$"if (cursor != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:378"$378$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:379"$379$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:380"$380$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:381"$381$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:382"$382$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:383"$383$"* Return the set percentages for a given week."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:384"$384$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:385"$385$"public int[] getSetPercentages(int week) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:386"$386$"int[] percentages = new int[3];"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:387"$387$"String[] columns = new String[]{""percent_week_"" + week};"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:388"$388$"Cursor cursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:389"$389$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:390"$390$"cursor = mDatabase.query(DATABASE_TABLE_PERCENT, columns, null, null, null, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:391"$391$"null);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:392"$392$"if (cursor != null && cursor.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:393"$393$"for (int i = 0; i < percentages.length; i++) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:394"$394$"percentages[i] = cursor.getInt(cursor.getColumnIndex(columns[0]));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:395"$395$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:396"$396$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:397"$397$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:398"$398$"return percentages;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:399"$399$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:400"$400$"if (cursor != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:401"$401$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:402"$402$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:403"$403$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:404"$404$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:405"$405$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:406"$406$"* Return the extra exercises for a given workout."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:407"$407$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:408"$408$"public ArrayList<AdditionalExercise> getAdditionalExercisesForWorkout(Workout workout) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:409"$409$"ArrayList<AdditionalExercise> exercises = new ArrayList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:410"$410$"Cursor cursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:411"$411$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:412"$412$"cursor = mDatabase.query(DATABASE_TABLE_WENDLER_EXTRA_LIST, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:413"$413$"KEY_WORKOUT_EXERCISE + ""=?"", new String[]{workout.getName()}, null, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:414"$414$"KEY_EXTRA_ORDER_IN_LIST + "" ASC"");"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:415"$415$"if (cursor != null && cursor.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:416"$416$"do {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:417"$417$"String name = cursor.getString(cursor.getColumnIndex(KEY_EXERCISE_NAME));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:418"$418$"int sets = cursor.getInt(cursor.getColumnIndex"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:419"$419$"(KEY_NUMBER_OF_SETS_OR_REPS_TO_BE_DONE));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:420"$420$"double weight = cursor.getDouble(cursor.getColumnIndex(KEY_EXTRA_WEIGHT));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:421"$421$"int percentage = cursor.getInt(cursor.getColumnIndex"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:422"$422$"(KEY_EXTRA_PERCENTAGE_OF_MAIN_EXERCISE));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:423"$423$"String mainExerciseName = cursor.getString(cursor.getColumnIndex"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:424"$424$"(KEY_EXTRA_MAIN_EXERCISE_NAME));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:425"$425$"int exerciseId = cursor.getInt(cursor.getColumnIndex(KEY_EXTRA_EXERCISE_ID));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:426"$426$"ArrayList<ExerciseSet> exerciseSets = new ArrayList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:427"$427$"double mainExerciseWeight = getOneRmForExercise(mainExerciseName);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:428"$428$"if (!TextUtils.isEmpty(mainExerciseName)) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:429"$429$"weight = WendlerMath.calculateWeight("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:430"$430$"mContext,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:431"$431$"getOneRmForExercise(mainExerciseName),"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:432"$432$"percentage);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:433"$433$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:434"$434$"ExerciseSet set = new ExerciseSet(SetType.REGULAR, weight, sets, 0, false);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:435"$435$"exerciseSets.add(set);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:436"$436$"AdditionalExercise exercise = new AdditionalExercise("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:437"$437$"name,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:438"$438$"exerciseSets,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:439"$439$"mainExerciseName,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:440"$440$"percentage,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:441"$441$"mainExerciseWeight,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:442"$442$"exerciseId,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:443"$443$"false);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:444"$444$"exercises.add(exercise);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:445"$445$"} while (cursor.moveToNext());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:446"$446$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:447"$447$"return exercises;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:448"$448$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:449"$449$"if (cursor != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:450"$450$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:451"$451$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:452"$452$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:453"$453$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:454"$454$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:455"$455$"* Get the current one rm for a given exercise."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:456"$456$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:457"$457$"public double getOneRmForExercise(String name) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:458"$458$"double weight = 100;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:459"$459$"Cursor cursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:460"$460$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:461"$461$"cursor = mDatabase.query(DATABASE_TABLE_WENDLER_STATS, new String[]{KEY_1RM},"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:462"$462$"KEY_NAME + ""=?"", new String[]{name}, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:463"$463$"if (cursor != null && cursor.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:464"$464$"weight = cursor.getDouble(cursor.getColumnIndex(KEY_1RM));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:465"$465$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:466"$466$"return weight;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:467"$467$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:468"$468$"if (cursor != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:469"$469$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:470"$470$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:471"$471$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:472"$472$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:473"$473$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:474"$474$"* Get the highest estimated 1rm for a given exercise"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:475"$475$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:476"$476$"public int getHighestEstimated1RM(String name) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:477"$477$"// TODO this is pretty inefficient, maybe add some caching?"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:478"$478$"String[] cols = new String[]{"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:479"$479$"KEY_WORKOUT_LAST_SET,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:480"$480$"KEY_WORKOUT_REPS,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:481"$481$"KEY_WORKOUT_EST_ONE_RM};"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:482"$482$"String selection = KEY_WORKOUT_EXERCISE + ""=?"" + "" AND "" + KEY_WORKOUT_EST_ONE_RM + "">0"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:483"$483$"String[] selectionArguments = new String[]{name};"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:484"$484$"String orderBy = KEY_WORKOUT_EST_ONE_RM + "" DESC"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:485"$485$"String limit = ""1"";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:486"$486$"int estOneRm = -1;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:487"$487$"Cursor cursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:488"$488$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:489"$489$"WendlerizedLog.v(""Trying to get highest 1RM for exercise "" + name);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:490"$490$"cursor = mDatabase.query(DATABASE_TABLE_WENDLER_WORKOUT, cols, selection,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:491"$491$"selectionArguments, null /** Group by **/, null /** Having **/, orderBy, limit);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:492"$492$"if (cursor != null && cursor.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:493"$493$"estOneRm = cursor.getInt(cursor.getColumnIndex(KEY_WORKOUT_EST_ONE_RM));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:494"$494$"WendlerizedLog.v(""Found highest 1RM for exercise "" + name + "": "" + estOneRm);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:495"$495$"} else {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:496"$496$"WendlerizedLog.v(""Could not find highest 1RM for exercise "" + name + ""!"");"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:497"$497$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:498"$498$"} catch (Exception e) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:499"$499$"WendlerizedLog.v(""Error while trying to find highest 1RM for exercise "" + name + ""!"");"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:500"$500$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:501"$501$"if (cursor != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:502"$502$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:503"$503$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:504"$504$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:505"$505$"return estOneRm;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:506"$506$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:507"$507$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:508"$508$"* Return additional exercise names stored as permanent exercises."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:509"$509$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:510"$510$"public ArrayList<String> getAdditionalExerciseNames() {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:511"$511$"String[] column = new String[]{KEY_EXERCISE_NAME};"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:512"$512$"ArrayList<String> names = new ArrayList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:513"$513$"Cursor cursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:514"$514$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:515"$515$"cursor = mDatabase.query(DATABASE_TABLE_WENDLER_EXTRA_LIST, column, null, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:516"$516$"null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:517"$517$"if (cursor != null && cursor.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:518"$518$"do {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:519"$519$"names.add(cursor.getString(cursor.getColumnIndex(KEY_EXERCISE_NAME)));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:520"$520$"} while (cursor.moveToNext());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:521"$521$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:522"$522$"return names;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:523"$523$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:524"$524$"if (cursor != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:525"$525$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:526"$526$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:527"$527$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:528"$528$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:529"$529$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:530"$530$"* Return the next workout id."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:531"$531$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:532"$532$"public int getNextWorkoutId() {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:533"$533$"int nextWorkoutId = 1;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:534"$534$"Cursor cursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:535"$535$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:536"$536$"cursor = mDatabase.query(DATABASE_TABLE_WENDLER_WORKOUT, new String[]{KEY_ROW_ID},"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:537"$537$"null, null, null, null, KEY_ROW_ID + "" ASC"");"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:538"$538$"if (cursor != null && cursor.moveToLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:539"$539$"nextWorkoutId = cursor.getInt(cursor.getColumnIndex(KEY_ROW_ID));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:540"$540$"nextWorkoutId++;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:541"$541$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:542"$542$"return nextWorkoutId;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:543"$543$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:544"$544$"if (cursor != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:545"$545$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:546"$546$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:547"$547$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:548"$548$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:549"$549$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:550"$550$"* Store the main exercise and return if it was successful."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:551"$551$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:552"$552$"public boolean storeMainExercise(Workout workout, boolean complete) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:553"$553$"ContentValues cv = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:554"$554$"double oneRm = workout.getMainExercise().getWeight();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:555"$555$"int size = workout.getMainExercise().getExerciseSets().size();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:556"$556$"double lastSet = workout.getMainExercise().getExerciseSet(size - 1).getWeight();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:557"$557$"int estOneRm = workout.getMainExercise().getEstOneRm();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:558"$558$"cv.put(KEY_WORKOUT_ID, workout.getWorkoutId());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:559"$559$"cv.put(KEY_WORKOUT_EXERCISE, workout.getName());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:560"$560$"cv.put(KEY_WORKOUT_REPS, workout.getMainExercise().getLastSetProgress());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:561"$561$"cv.put(KEY_WORKOUT_LAST_SET, lastSet);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:562"$562$"cv.put(KEY_WORKOUT_ONE_RM, oneRm);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:563"$563$"cv.put(KEY_WORKOUT_WEEK, workout.getWeek());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:564"$564$"cv.put(KEY_WORKOUT_CYCLE, workout.getCycle());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:565"$565$"cv.put(KEY_CYCLE_NAME, workout.getCycleDisplayName());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:566"$566$"cv.put(KEY_WORKOUT_NOTES, workout.getNotes());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:567"$567$"cv.put(KEY_WORKOUT_WON, workout.isWon() ? 1 : 0);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:568"$568$"cv.put(KEY_INSERT_TIME, workout.getInsertTime());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:569"$569$"cv.put(KEY_WORKOUT_YEAR, workout.getWorkoutTime().year);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:570"$570$"cv.put(KEY_WORKOUT_MONTH, workout.getWorkoutTime().month);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:571"$571$"cv.put(KEY_WORKOUT_DAY, workout.getWorkoutTime().monthDay);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:572"$572$"cv.put(KEY_TRAINING_PERCENTAGE, workout.getMainExercise().getWorkoutPercentage());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:573"$573$"cv.put(KEY_WORKOUT_EST_ONE_RM, estOneRm);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:574"$574$"if (!workout.isComplete()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:575"$575$"cv.put(KEY_WORKOUT_COMPLETED, complete ? 1 : 0);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:576"$576$"} else {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:577"$577$"cv.put(KEY_WORKOUT_COMPLETED, 1);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:578"$578$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:579"$579$"if (isWorkoutNew(workout.getWorkoutId())) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:580"$580$"return mDatabase.insert(DATABASE_TABLE_WENDLER_WORKOUT, null, cv) != -1;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:581"$581$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:582"$582$"WendlerizedLog.d(""Update! "" + workout.getMainExercise().getLastSetProgress());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:583"$583$"return mDatabase.update(DATABASE_TABLE_WENDLER_WORKOUT, cv, KEY_WORKOUT_ID + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:584"$584$"new String[]{String.valueOf(workout.getWorkoutId())}) != -1;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:585"$585$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:586"$586$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:587"$587$"* Return if the workout is new."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:588"$588$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:589"$589$"private boolean isWorkoutNew(int workoutId) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:590"$590$"Cursor cursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:591"$591$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:592"$592$"cursor = mDatabase.query(DATABASE_TABLE_WENDLER_WORKOUT, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:593"$593$"KEY_WORKOUT_ID + ""=?"", new String[]{String.valueOf(workoutId)},"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:594"$594$"null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:595"$595$"return cursor != null && cursor.getCount() != 1;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:596"$596$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:597"$597$"if (cursor != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:598"$598$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:599"$599$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:600"$600$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:601"$601$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:602"$602$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:603"$603$"* Store the additional workouts for a workout."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:604"$604$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:605"$605$"public boolean storeAdditionalExercise("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:606"$606$"int workoutId, ArrayList<AdditionalExercise> exercises, boolean isStarted) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:607"$607$"mDatabase.delete("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:608"$608$"DATABASE_TABLE_WENDLER_EXTRA, KEY_WORKOUT_ID + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:609"$609$"new String[]{String.valueOf(workoutId)});"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:610"$610$"for (AdditionalExercise exercise : exercises) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:611"$611$"ContentValues cv = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:612"$612$"cv.put(KEY_WORKOUT_ID, workoutId);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:613"$613$"cv.put(KEY_EXERCISE_NAME, exercise.getName());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:614"$614$"cv.put(KEY_NUMBER_OF_SETS_OR_REPS_TO_BE_DONE, exercise.getExerciseSet(0).getGoal());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:615"$615$"cv.put(KEY_EXTRA_REPS_OR_SETS_COMPLETED, exercise.getExerciseSet(0).getProgress());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:616"$616$"cv.put(KEY_EXTRA_WEIGHT, exercise.getExerciseSet(0).getWeight());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:617"$617$"cv.put(KEY_EXTRA_MAIN_EXERCISE_NAME, exercise.getMainExerciseName());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:618"$618$"cv.put(KEY_EXTRA_PERCENTAGE_OF_MAIN_EXERCISE, exercise.getMainExercisePercentage());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:619"$619$"cv.put(KEY_EXTRA_EXERCISE_ID, exercise.getExerciseId());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:620"$620$"cv.put(KEY_MAIN_EXERCISE_WEIGHT, exercise.getMainExerciseWeight());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:621"$621$"cv.put(KEY_IS_STARTED, isStarted ? 1 : 0);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:622"$622$"mDatabase.insert(DATABASE_TABLE_WENDLER_EXTRA, null, cv);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:623"$623$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:624"$624$"if (exercises.isEmpty()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:625"$625$"mDatabase.delete(DATABASE_TABLE_WENDLER_EXTRA, KEY_WORKOUT_ID + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:626"$626$"new String[]{String.valueOf(workoutId)});"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:627"$627$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:628"$628$"return true;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:629"$629$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:630"$630$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:631"$631$"* Update the stats for an exercise."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:632"$632$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:633"$633$"public void updateWorkoutStats(Workout workout, boolean isNew) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:634"$634$"if (!workout.isComplete()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:635"$635$"return;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:636"$636$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:637"$637$"if (isNew) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:638"$638$"updateNewWorkoutStats(workout);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:639"$639$"} else if (isWorkoutLatest(workout)) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:640"$640$"updateLatestWorkoutStats(workout);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:641"$641$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:642"$642$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:643"$643$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:644"$644$"* Return the increment for an exercise."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:645"$645$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:646"$646$"public double getIncrement(String exercise) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:647"$647$"Cursor cursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:648"$648$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:649"$649$"cursor = mDatabase.query(DATABASE_TABLE_WENDLER_STATS, new String[]{KEY_INCREMENT},"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:650"$650$"KEY_NAME + ""=?"", new String[]{exercise}, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:651"$651$"if (cursor != null && cursor.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:652"$652$"String increment = cursor.getString(cursor.getColumnIndex(KEY_INCREMENT));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:653"$653$"if (increment == null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:654"$654$"return 2.5;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:655"$655$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:656"$656$"return Double.parseDouble(increment);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:657"$657$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:658"$658$"return 2.5;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:659"$659$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:660"$660$"if (cursor != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:661"$661$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:662"$662$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:663"$663$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:664"$664$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:665"$665$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:666"$666$"* Return the selection for the navigation."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:667"$667$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:668"$668$"public int getSelectionForNavigation() {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:669"$669$"Cursor cursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:670"$670$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:671"$671$"cursor = mDatabase.query(DATABASE_TABLE_WENDLER_STATS, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:672"$672$"null, null, null, null, KEY_CYCLE + "" ASC, "" + KEY_WEEK + "" ASC"");"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:673"$673$"if (cursor != null && cursor.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:674"$674$"return Integer.parseInt(cursor.getString(cursor.getColumnIndex(KEY_WEEK))) - 1;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:675"$675$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:676"$676$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:677"$677$"if (cursor != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:678"$678$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:679"$679$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:680"$680$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:681"$681$"return 0;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:682"$682$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:683"$683$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:684"$684$"* Store an additional exercise in the table for permanent exercises."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:685"$685$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:686"$686$"public void storeAdditionalExercise(AdditionalExercise exercise,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:687"$687$"String workoutExercise,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:688"$688$"boolean isNew,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:689"$689$"int position) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:690"$690$"ContentValues cv = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:691"$691$"cv.put(KEY_EXERCISE_NAME, exercise.getName());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:692"$692$"cv.put(KEY_WORKOUT_EXERCISE, workoutExercise);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:693"$693$"cv.put(KEY_NUMBER_OF_SETS_OR_REPS_TO_BE_DONE, exercise.getExerciseSet(0).getGoal());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:694"$694$"cv.put(KEY_EXTRA_WEIGHT, exercise.getExerciseSet(0).getWeight());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:695"$695$"cv.put(KEY_EXTRA_MAIN_EXERCISE_NAME, exercise.getMainExerciseName());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:696"$696$"cv.put(KEY_EXTRA_PERCENTAGE_OF_MAIN_EXERCISE, exercise.getMainExercisePercentage());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:697"$697$"cv.put(KEY_EXTRA_ORDER_IN_LIST, position);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:698"$698$"cv.put(KEY_EXTRA_EXERCISE_ID, exercise.getExerciseId());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:699"$699$"cv.put(KEY_MAIN_EXERCISE_WEIGHT, exercise.getMainExerciseWeight());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:700"$700$"if (isNew) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:701"$701$"mDatabase.insert(DATABASE_TABLE_WENDLER_EXTRA_LIST, null, cv);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:702"$702$"} else {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:703"$703$"mDatabase.update(DATABASE_TABLE_WENDLER_EXTRA_LIST, cv,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:704"$704$"KEY_EXTRA_EXERCISE_ID + ""=? "" + ""AND "" + KEY_WORKOUT_EXERCISE + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:705"$705$"new String[]{String.valueOf(exercise.getExerciseId()), workoutExercise}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:706"$706$");"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:707"$707$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:708"$708$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:709"$709$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:710"$710$"* Return if a given extra exercise id already exists for a workout."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:711"$711$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:712"$712$"public boolean extraExerciseIsNew(String workoutName, int exerciseId) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:713"$713$"Cursor cursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:714"$714$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:715"$715$"cursor = mDatabase.query(DATABASE_TABLE_WENDLER_EXTRA_LIST, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:716"$716$"KEY_WORKOUT_EXERCISE + ""=? AND "" + KEY_EXTRA_EXERCISE_ID + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:717"$717$"new String[]{workoutName, String.valueOf(exerciseId)}, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:718"$718$"return cursor != null && cursor.getCount() == 0;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:719"$719$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:720"$720$"if (cursor != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:721"$721$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:722"$722$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:723"$723$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:724"$724$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:725"$725$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:726"$726$"* Delete an additional exercise for a given workout."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:727"$727$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:728"$728$"public void deleteAdditionalExercise(String workoutName, AdditionalExercise exercise) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:729"$729$"mDatabase.delete(DATABASE_TABLE_WENDLER_EXTRA_LIST, KEY_WORKOUT_EXERCISE + ""=? AND "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:730"$730$"KEY_EXTRA_EXERCISE_ID + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:731"$731$"new String[]{workoutName, String.valueOf(exercise.getExerciseId())}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:732"$732$");"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:733"$733$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:734"$734$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:735"$735$"* Reorder the additional exercises for a given workout."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:736"$736$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:737"$737$"public void doReorderAdditionalExercise(ArrayList<AdditionalExercise> exercises,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:738"$738$"String workoutName) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:739"$739$"for (int i = 0; i < exercises.size(); i++) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:740"$740$"ContentValues values = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:741"$741$"values.put(KEY_EXTRA_ORDER_IN_LIST, i);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:742"$742$"mDatabase.update(DATABASE_TABLE_WENDLER_EXTRA_LIST, values,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:743"$743$"KEY_EXTRA_EXERCISE_ID + ""=? AND "" + KEY_WORKOUT_EXERCISE + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:744"$744$"new String[]{String.valueOf(exercises.get(i).getExerciseId()), workoutName});"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:745"$745$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:746"$746$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:747"$747$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:748"$748$"* Return a list of old workouts."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:749"$749$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:750"$750$"public ArrayList<Workout> getOldWorkouts(int limit) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:751"$751$"ArrayList<Workout> workouts = new ArrayList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:752"$752$"Cursor cursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:753"$753$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:754"$754$"cursor = mDatabase.query(DATABASE_TABLE_WENDLER_WORKOUT, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:755"$755$"KEY_WORKOUT_COMPLETED + ""=?"", new String[]{""1""}, null, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:756"$756$"KEY_INSERT_TIME + "" DESC"", String.valueOf(limit));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:757"$757$"if (cursor.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:758"$758$"do {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:759"$759$"String name = cursor.getString(cursor.getColumnIndex(KEY_WORKOUT_EXERCISE));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:760"$760$"boolean isWon ="$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:761"$761$"cursor.getInt(cursor.getColumnIndex(KEY_WORKOUT_WON)) == 1;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:762"$762$"int week = cursor.getInt(cursor.getColumnIndex(KEY_WORKOUT_WEEK));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:763"$763$"int cycle = cursor.getInt(cursor.getColumnIndex(KEY_WORKOUT_CYCLE));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:764"$764$"int cycleName = cursor.getInt(cursor.getColumnIndex(KEY_CYCLE_NAME));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:765"$765$"int id = cursor.getInt(cursor.getColumnIndex(KEY_WORKOUT_ID));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:766"$766$"MainExercise mainExercise = getMainExerciseForWorkout(true, id);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:767"$767$"ArrayList<AdditionalExercise> additionalExercises ="$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:768"$768$"getExtraExerciseForWorkout(name, id, true);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:769"$769$"long insertTime = Long.parseLong("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:770"$770$"cursor.getString(cursor.getColumnIndex(KEY_INSERT_TIME)));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:771"$771$"Time time = new Time();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:772"$772$"time.year = Integer.parseInt("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:773"$773$"cursor.getString(cursor.getColumnIndex(KEY_WORKOUT_YEAR)));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:774"$774$"time.month = Integer.parseInt("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:775"$775$"cursor.getString(cursor.getColumnIndex(KEY_WORKOUT_MONTH)));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:776"$776$"time.monthDay = Integer.parseInt("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:777"$777$"cursor.getString(cursor.getColumnIndex(KEY_WORKOUT_DAY)));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:778"$778$"String notes = cursor.getString(cursor.getColumnIndex(KEY_WORKOUT_NOTES));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:779"$779$"Workout workout = new Workout(name, StringHelper.getTranslatableName(mContext,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:780"$780$"name), true, isWon, week, cycle, cycleName, id,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:781"$781$"mainExercise, additionalExercises, insertTime, time, notes"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:782"$782$");"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:783"$783$"workouts.add(workout);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:784"$784$"} while (cursor.moveToNext());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:785"$785$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:786"$786$"return workouts;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:787"$787$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:788"$788$"if (cursor != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:789"$789$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:790"$790$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:791"$791$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:792"$792$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:793"$793$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:794"$794$"* Delete an old workout."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:795"$795$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:796"$796$"public void deleteWorkout(Workout workout) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:797"$797$"if (isWorkoutLatest(workout)) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:798"$798$"int week = workout.getWeek();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:799"$799$"int cycle = workout.getCycle();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:800"$800$"int cycleName = workout.getCycleDisplayName();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:801"$801$"double weight = workout.getMainExercise().getWeight();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:802"$802$"if (workout.isWon() && workout.getWeek() == 4) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:803"$803$"weight = getOneRmForExercise(workout.getName());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:804"$804$"weight -= getIncrement(workout.getName());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:805"$805$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:806"$806$"updateWithStats(workout.getName(), cycle, week, weight, cycleName);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:807"$807$"setWorkoutShouldDeload(workout.getName(), getWorkoutShouldDeload(workout));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:808"$808$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:809"$809$"mDatabase.delete(DATABASE_TABLE_WENDLER_WORKOUT, KEY_WORKOUT_ID + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:810"$810$"new String[]{String.valueOf(workout.getWorkoutId())});"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:811"$811$"mDatabase.delete(DATABASE_TABLE_WENDLER_EXTRA, KEY_WORKOUT_ID + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:812"$812$"new String[]{String.valueOf(workout.getWorkoutId())});"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:813"$813$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:814"$814$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:815"$815$"* Return the number of old workouts."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:816"$816$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:817"$817$"public int getOldWorkoutsCount() {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:818"$818$"Cursor cursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:819"$819$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:820"$820$"cursor = mDatabase.query(DATABASE_TABLE_WENDLER_WORKOUT, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:821"$821$"KEY_WORKOUT_COMPLETED + ""=?"", new String[]{""1""}, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:822"$822$"null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:823"$823$"return cursor == null ? 0 : cursor.getCount();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:824"$824$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:825"$825$"if (cursor != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:826"$826$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:827"$827$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:828"$828$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:829"$829$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:830"$830$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:831"$831$"* Store a workout."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:832"$832$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:833"$833$"public void storeWorkout(Workout workout) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:834"$834$"storeMainExercise(workout, workout.isComplete());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:835"$835$"storeAdditionalExercise(workout.getWorkoutId(), workout.getAdditionalExercises(), true);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:836"$836$"if (isWorkoutLatest(workout)) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:837"$837$"updateWorkoutStats(workout, true);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:838"$838$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:839"$839$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:840"$840$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:841"$841$"* Update the one rm maximum for all exercises."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:842"$842$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:843"$843$"public void updateOneRm("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:844"$844$"double pressOneRm, double deadliftOneRm, double benchOneRm, double squatOneRm) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:845"$845$"ContentValues cv = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:846"$846$"cv.put(KEY_1RM, pressOneRm);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:847"$847$"mDatabase.update(DATABASE_TABLE_WENDLER_STATS, cv, KEY_NAME + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:848"$848$"new String[]{Constants.EXERCISES[0]});"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:849"$849$"cv.clear();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:850"$850$"cv.put(KEY_1RM, deadliftOneRm);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:851"$851$"mDatabase.update(DATABASE_TABLE_WENDLER_STATS, cv, KEY_NAME + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:852"$852$"new String[]{Constants.EXERCISES[1]});"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:853"$853$"cv.clear();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:854"$854$"cv.put(KEY_1RM, benchOneRm);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:855"$855$"mDatabase.update(DATABASE_TABLE_WENDLER_STATS, cv, KEY_NAME + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:856"$856$"new String[]{Constants.EXERCISES[2]});"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:857"$857$"cv.clear();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:858"$858$"cv.put(KEY_1RM, squatOneRm);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:859"$859$"mDatabase.update(DATABASE_TABLE_WENDLER_STATS, cv, KEY_NAME + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:860"$860$"new String[]{Constants.EXERCISES[3]});"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:861"$861$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:862"$862$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:863"$863$"* Delete all extra exercises."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:864"$864$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:865"$865$"public void purgeExtraExercises() {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:866"$866$"mDatabase.delete(DATABASE_TABLE_WENDLER_EXTRA_LIST, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:867"$867$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:868"$868$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:869"$869$"* Return if the workout should deload."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:870"$870$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:871"$871$"public boolean doDeload(Workout workout) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:872"$872$"if (workout.getWeek() < 4) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:873"$873$"return false;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:874"$874$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:875"$875$"Cursor cursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:876"$876$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:877"$877$"cursor = mDatabase.query(DATABASE_TABLE_WENDLER_STATS, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:878"$878$"KEY_NAME + ""=? AND "" + KEY_SHOULD_DELOAD + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:879"$879$"new String[]{workout.getName(), ""1""}, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:880"$880$"boolean bool = cursor != null && cursor.getCount() == 1;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:881"$881$"if (bool) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:882"$882$"setWorkoutShouldDeload(workout.getName(), false);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:883"$883$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:884"$884$"return bool;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:885"$885$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:886"$886$"if (cursor != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:887"$887$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:888"$888$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:889"$889$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:890"$890$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:891"$891$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:892"$892$"* Update the cycle name for all workouts."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:893"$893$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:894"$894$"public void updateCycleName() {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:895"$895$"ContentValues cv = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:896"$896$"int cycle = getCurrentCycle(Constants.EXERCISES[0]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:897"$897$"cv.put(KEY_CYCLE_NAME, cycle);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:898"$898$"mDatabase.update(DATABASE_TABLE_WENDLER_STATS, cv, KEY_NAME + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:899"$899$"new String[]{Constants.EXERCISES[0]});"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:900"$900$"cv.clear();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:901"$901$"cycle = getCurrentCycle(Constants.EXERCISES[1]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:902"$902$"cv.put(KEY_CYCLE_NAME, cycle);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:903"$903$"mDatabase.update(DATABASE_TABLE_WENDLER_STATS, cv, KEY_NAME + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:904"$904$"new String[]{Constants.EXERCISES[1]});"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:905"$905$"cv.clear();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:906"$906$"cycle = getCurrentCycle(Constants.EXERCISES[2]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:907"$907$"cv.put(KEY_CYCLE_NAME, cycle);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:908"$908$"mDatabase.update(DATABASE_TABLE_WENDLER_STATS, cv, KEY_NAME + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:909"$909$"new String[]{Constants.EXERCISES[2]});"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:910"$910$"cv.clear();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:911"$911$"cycle = getCurrentCycle(Constants.EXERCISES[3]);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:912"$912$"cv.put(KEY_CYCLE_NAME, cycle);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:913"$913$"mDatabase.update(DATABASE_TABLE_WENDLER_STATS, cv, KEY_NAME + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:914"$914$"new String[]{Constants.EXERCISES[3]});"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:915"$915$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:916"$916$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:917"$917$"* Restore the database from a save file."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:918"$918$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:919"$919$"public void restoreDbFromFile(File file) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:920"$920$"mDbHelper.restoreDatabase(file);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:921"$921$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:922"$922$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:923"$923$"* Return the workout percentage for a given exercise."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:924"$924$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:925"$925$"public int getWorkoutPercentage(String workoutName) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:926"$926$"Cursor c = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:927"$927$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:928"$928$"c = mDatabase.query(DATABASE_TABLE_WENDLER_STATS, new String[]{KEY_TRAINING_PERCENTAGE},"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:929"$929$"KEY_NAME + ""=?"", new String[]{workoutName}, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:930"$930$"if (c != null && c.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:931"$931$"return c.getInt(c.getColumnIndex(KEY_TRAINING_PERCENTAGE));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:932"$932$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:933"$933$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:934"$934$"if (c != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:935"$935$"c.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:936"$936$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:937"$937$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:938"$938$"return WendlerConstants.DEFAULT_WORKOUT_PERCENTAGE;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:939"$939$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:940"$940$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:941"$941$"* Update the old workouts to reflect using Training Max."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:942"$942$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:943"$943$"public void updateOldWorkouts() {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:944"$944$"Cursor cursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:945"$945$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:946"$946$"cursor = mDatabase.query(DATABASE_TABLE_WENDLER_WORKOUT,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:947"$947$"new String[]{KEY_WORKOUT_EXERCISE, KEY_1RM, KEY_WORKOUT_ID},"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:948"$948$"KEY_WORKOUT_COMPLETED + ""=?"", new String[]{String.valueOf(1)}, null, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:949"$949$"null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:950"$950$"if (cursor.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:951"$951$"do {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:952"$952$"String name = cursor.getString(cursor.getColumnIndex(KEY_WORKOUT_EXERCISE));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:953"$953$"double oneRm = cursor.getFloat(cursor.getColumnIndex(KEY_1RM));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:954"$954$"int workoutId = cursor.getInt(cursor.getColumnIndex(KEY_WORKOUT_ID));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:955"$955$"updateOneRm(name, oneRm, workoutId);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:956"$956$"} while (cursor.moveToNext());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:957"$957$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:958"$958$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:959"$959$"if (cursor != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:960"$960$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:961"$961$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:962"$962$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:963"$963$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:964"$964$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:965"$965$"* Update the old workouts with the new TM"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:966"$966$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:967"$967$"private void updateOneRm(String workoutName, double oneRm, int workoutId) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:968"$968$"ContentValues value = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:969"$969$"value.put(KEY_1RM, WendlerMath.calculateWeight("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:970"$970$"mContext,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:971"$971$"oneRm,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:972"$972$"getWorkoutPercentage(workoutName)));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:973"$973$"mDatabase.update(DATABASE_TABLE_WENDLER_WORKOUT, value, KEY_WORKOUT_ID + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:974"$974$"new String[]{String.valueOf(workoutId)});"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:975"$975$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:976"$976$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:977"$977$"* Return if the next workout should deload."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:978"$978$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:979"$979$"private boolean getWorkoutShouldDeload(Workout workout) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:980"$980$"Cursor cursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:981"$981$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:982"$982$"cursor = mDatabase.query(DATABASE_TABLE_WENDLER_WORKOUT, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:983"$983$"KEY_WORKOUT_EXERCISE + ""=? AND "" + KEY_WORKOUT_COMPLETED + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:984"$984$"new String[]{workout.getName(), ""1""}, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:985"$985$"null, KEY_CYCLE + "" DESC, "" + KEY_WEEK + "" DESC"");"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:986"$986$"return cursor != null"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:987"$987$"&& cursor.moveToPosition(1)"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:988"$988$"&& cursor.getInt(cursor.getColumnIndex(KEY_WORKOUT_WON)) == 0;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:989"$989$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:990"$990$"if (cursor != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:991"$991$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:992"$992$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:993"$993$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:994"$994$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:995"$995$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:996"$996$"* Return if a given workout is complete."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:997"$997$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:998"$998$"private boolean isWorkoutComplete(int id) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:999"$999$"Cursor c = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1000"$1000$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1001"$1001$"c = mDatabase.query(DATABASE_TABLE_WENDLER_WORKOUT, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1002"$1002$"KEY_WORKOUT_ID + ""=?"", new String[]{String.valueOf(id)}, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1003"$1003$"return c != null"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1004"$1004$"&& c.moveToFirst()"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1005"$1005$"&& c.getInt(c.getColumnIndex(KEY_WORKOUT_COMPLETED)) == 1;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1006"$1006$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1007"$1007$"if (c != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1008"$1008$"c.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1009"$1009$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1010"$1010$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1011"$1011$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1012"$1012$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1013"$1013$"* Return if a given workout was won."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1014"$1014$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1015"$1015$"private boolean exerciseWon(int id) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1016"$1016$"Cursor c = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1017"$1017$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1018"$1018$"c = mDatabase.query(DATABASE_TABLE_WENDLER_WORKOUT, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1019"$1019$"KEY_WORKOUT_ID + ""=?"", new String[]{String.valueOf(id)}, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1020"$1020$"return c != null"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1021"$1021$"&& c.moveToFirst()"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1022"$1022$"&& c.getInt(c.getColumnIndex(KEY_WORKOUT_WON)) == 1;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1023"$1023$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1024"$1024$"if (c != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1025"$1025$"c.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1026"$1026$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1027"$1027$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1028"$1028$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1029"$1029$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1030"$1030$"* Return if a given workout for a specific cycle and week has been done."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1031"$1031$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1032"$1032$"private int exerciseHasBeenDone(String sqlExerciseName, int week, int cycle) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1033"$1033$"Cursor c = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1034"$1034$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1035"$1035$"c = mDatabase.query(DATABASE_TABLE_WENDLER_WORKOUT, new String[]{KEY_WORKOUT_ID},"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1036"$1036$"KEY_WORKOUT_EXERCISE + ""=? AND "" + KEY_CYCLE + ""=? AND "" + KEY_WEEK + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1037"$1037$"new String[]{sqlExerciseName, String.valueOf(cycle), String.valueOf(week)},"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1038"$1038$"null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1039"$1039$"if (c != null && c.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1040"$1040$"return c.getInt(c.getColumnIndex(KEY_WORKOUT_ID));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1041"$1041$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1042"$1042$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1043"$1043$"if (c != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1044"$1044$"c.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1045"$1045$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1046"$1046$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1047"$1047$"return -1;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1048"$1048$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1049"$1049$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1050"$1050$"* Return the current cycle for a given exercise."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1051"$1051$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1052"$1052$"private int getCurrentCycle(String sqlExerciseName) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1053"$1053$"Cursor c = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1054"$1054$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1055"$1055$"c = mDatabase.query(DATABASE_TABLE_WENDLER_STATS, new String[]{KEY_CYCLE},"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1056"$1056$"KEY_NAME + ""=?"", new String[]{sqlExerciseName}, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1057"$1057$"if (c != null && c.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1058"$1058$"return c.getInt(c.getColumnIndex(KEY_CYCLE));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1059"$1059$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1060"$1060$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1061"$1061$"if (c != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1062"$1062$"c.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1063"$1063$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1064"$1064$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1065"$1065$"return 1;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1066"$1066$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1067"$1067$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1068"$1068$"* Return the current cycle name for a given exercise."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1069"$1069$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1070"$1070$"private int getCurrentCycleName(String sqlExerciseName) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1071"$1071$"Cursor c = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1072"$1072$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1073"$1073$"c = mDatabase.query(DATABASE_TABLE_WENDLER_STATS, new String[]{KEY_CYCLE_NAME},"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1074"$1074$"KEY_NAME + ""=?"", new String[]{sqlExerciseName}, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1075"$1075$"if (c != null && c.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1076"$1076$"return c.getInt(c.getColumnIndex(KEY_CYCLE_NAME));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1077"$1077$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1078"$1078$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1079"$1079$"if (c != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1080"$1080$"c.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1081"$1081$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1082"$1082$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1083"$1083$"return 1;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1084"$1084$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1085"$1085$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1086"$1086$"* Return the insert time for a given workout id."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1087"$1087$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1088"$1088$"private long getInsertTimeForId(int workoutId) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1089"$1089$"Cursor cursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1090"$1090$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1091"$1091$"cursor = mDatabase.query(DATABASE_TABLE_WENDLER_WORKOUT,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1092"$1092$"new String[]{KEY_INSERT_TIME}, KEY_WORKOUT_ID + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1093"$1093$"new String[]{String.valueOf(workoutId)}, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1094"$1094$"if (cursor != null && cursor.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1095"$1095$"return Long.parseLong(cursor.getString(cursor.getColumnIndex(KEY_INSERT_TIME)));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1096"$1096$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1097"$1097$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1098"$1098$"if (cursor != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1099"$1099$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1100"$1100$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1101"$1101$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1102"$1102$"return System.currentTimeMillis();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1103"$1103$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1104"$1104$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1105"$1105$"* Return the time the workout was completed for a given workout id."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1106"$1106$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1107"$1107$"private Time getTimeForWorkout(int workoutId) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1108"$1108$"Cursor cursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1109"$1109$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1110"$1110$"cursor = mDatabase.query(DATABASE_TABLE_WENDLER_WORKOUT,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1111"$1111$"new String[]{KEY_WORKOUT_YEAR, KEY_WORKOUT_MONTH, KEY_WORKOUT_DAY},"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1112"$1112$"KEY_WORKOUT_ID + ""=?"", new String[]{String.valueOf(workoutId)}, null, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1113"$1113$"null);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1114"$1114$"Time time = new Time();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1115"$1115$"time.setToNow();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1116"$1116$"if (cursor != null && cursor.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1117"$1117$"time.year ="$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1118"$1118$"Integer.parseInt(cursor.getString(cursor.getColumnIndex(KEY_WORKOUT_YEAR)));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1119"$1119$"time.month = Integer.parseInt("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1120"$1120$"cursor.getString(cursor.getColumnIndex(KEY_WORKOUT_MONTH)));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1121"$1121$"time.monthDay ="$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1122"$1122$"Integer.parseInt(cursor.getString(cursor.getColumnIndex(KEY_WORKOUT_DAY)));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1123"$1123$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1124"$1124$"return time;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1125"$1125$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1126"$1126$"if (cursor != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1127"$1127$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1128"$1128$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1129"$1129$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1130"$1130$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1131"$1131$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1132"$1132$"* Return the notes for a given workout id."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1133"$1133$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1134"$1134$"private String getNotesForWorkout(int workoutId) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1135"$1135$"Cursor cursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1136"$1136$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1137"$1137$"cursor = mDatabase.query(DATABASE_TABLE_WENDLER_WORKOUT,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1138"$1138$"new String[]{KEY_WORKOUT_NOTES}, KEY_WORKOUT_ID + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1139"$1139$"new String[]{String.valueOf(workoutId)}, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1140"$1140$"if (cursor != null && cursor.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1141"$1141$"return cursor.getString(cursor.getColumnIndex(KEY_WORKOUT_NOTES));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1142"$1142$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1143"$1143$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1144"$1144$"if (cursor != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1145"$1145$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1146"$1146$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1147"$1147$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1148"$1148$"return """";"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1149"$1149$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1150"$1150$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1151"$1151$"* Return the main exercise for a given workout id."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1152"$1152$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1153"$1153$"private MainExercise getMainExerciseForWorkout(boolean isComplete, int workoutId) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1154"$1154$"MainExercise mainExercise = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1155"$1155$"Cursor cursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1156"$1156$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1157"$1157$"cursor = mDatabase.query(DATABASE_TABLE_WENDLER_WORKOUT, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1158"$1158$"KEY_WORKOUT_ID + ""=?"", new String[]{String.valueOf(workoutId)},"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1159"$1159$"null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1160"$1160$"if (cursor != null && cursor.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1161"$1161$"int week = cursor.getInt(cursor.getColumnIndex(KEY_WORKOUT_WEEK));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1162"$1162$"String name = cursor.getString(cursor.getColumnIndex(KEY_WORKOUT_EXERCISE));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1163"$1163$"int repsPerformed = cursor.getInt(cursor.getColumnIndex(KEY_WORKOUT_REPS));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1164"$1164$"double increment = getIncrement(name);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1165"$1165$"int workoutPercentage ="$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1166"$1166$"cursor.getInt(cursor.getColumnIndex(KEY_TRAINING_PERCENTAGE));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1167"$1167$"double oneRm = cursor.getFloat(cursor.getColumnIndex(KEY_1RM));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1168"$1168$"int[] setPercentages = getSetPercentages(week);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1169"$1169$"boolean showWarmUp = PreferenceUtil.getBoolean("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1170"$1170$"mContext, PreferenceUtil.KEY_SHOW_WARM_UP, true);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1171"$1171$"List<SetGroup> setGroups = new ArrayList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1172"$1172$"if (showWarmUp) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1173"$1173$"String serialized = PreferenceUtil.getString("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1174"$1174$"mContext,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1175"$1175$"PreferenceUtil.KEY_WARM_UP_SETS,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1176"$1176$"WendlerConstants.DEFAULT_WARMUP_PERCENTAGES);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1177"$1177$"List<ExerciseSet> set = WendlerMath.getWarmupSets("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1178"$1178$"mContext,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1179"$1179$"oneRm,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1180"$1180$"serialized.split("",""),"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1181"$1181$"repsPerformed);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1182"$1182$"ArrayList<ExerciseSet> sets = new ArrayList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1183"$1183$"sets.addAll(set);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1184"$1184$"setGroups.add(new SetGroup(SetType.WARM_UP, sets));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1185"$1185$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1186"$1186$"List<ExerciseSet> set = WendlerMath.getWorkoutSets("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1187"$1187$"mContext, oneRm, setPercentages, week, repsPerformed);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1188"$1188$"ArrayList<ExerciseSet> sets = new ArrayList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1189"$1189$"sets.addAll(set);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1190"$1190$"setGroups.add(new SetGroup(SetType.REGULAR, sets));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1191"$1191$"int estOneRm = cursor.getInt(cursor.getColumnIndex(KEY_WORKOUT_EST_ONE_RM));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1192"$1192$"int repsToBeat = -1; // Workout has been done, so no need to show the reps-to-beat"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1193"$1193$"mainExercise = new MainExercise(name, oneRm, increment, sets, setGroups,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1194"$1194$"workoutPercentage, estOneRm, repsToBeat);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1195"$1195$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1196"$1196$"if (!isComplete && mainExercise != null && mainExercise.getLastSetProgress() < 0) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1197"$1197$"return null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1198"$1198$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1199"$1199$"return mainExercise;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1200"$1200$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1201"$1201$"if (cursor != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1202"$1202$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1203"$1203$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1204"$1204$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1205"$1205$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1206"$1206$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1207"$1207$"* Return a list of additional exercises for a given workout id."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1208"$1208$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1209"$1209$"private ArrayList<AdditionalExercise> getExtraExerciseForWorkout("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1210"$1210$"String workoutName, int workoutId, boolean isComplete) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1211"$1211$"ArrayList<AdditionalExercise> exercises = new ArrayList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1212"$1212$"boolean isStarted = false;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1213"$1213$"Cursor cursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1214"$1214$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1215"$1215$"cursor = mDatabase.query(DATABASE_TABLE_WENDLER_EXTRA, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1216"$1216$"KEY_WORKOUT_ID + ""=?"", new String[]{String.valueOf(workoutId)},"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1217"$1217$"null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1218"$1218$"if (cursor != null && cursor.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1219"$1219$"do {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1220"$1220$"String name = cursor.getString(cursor.getColumnIndex(KEY_EXERCISE_NAME));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1221"$1221$"int sets = cursor.getInt(cursor.getColumnIndex"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1222"$1222$"(KEY_NUMBER_OF_SETS_OR_REPS_TO_BE_DONE));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1223"$1223$"double weight = cursor.getDouble(cursor.getColumnIndex(KEY_EXTRA_WEIGHT));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1224"$1224$"int repsPerformed = cursor.getInt(cursor.getColumnIndex"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1225"$1225$"(KEY_EXTRA_REPS_OR_SETS_COMPLETED));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1226"$1226$"isStarted = cursor.getInt(cursor.getColumnIndex(KEY_IS_STARTED))  == 1;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1227"$1227$"if (!isStarted && repsPerformed > 0) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1228"$1228$"isStarted = true;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1229"$1229$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1230"$1230$"int exerciseId = cursor.getInt(cursor.getColumnIndex(KEY_EXTRA_EXERCISE_ID));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1231"$1231$"String mainExerciseName = cursor.getString(cursor.getColumnIndex"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1232"$1232$"(KEY_EXTRA_MAIN_EXERCISE_NAME));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1233"$1233$"int percentage = cursor.getInt(cursor.getColumnIndex"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1234"$1234$"(KEY_EXTRA_PERCENTAGE_OF_MAIN_EXERCISE));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1235"$1235$"ArrayList<ExerciseSet> exerciseSets = new ArrayList<>();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1236"$1236$"double mainExerciseWeight = cursor.getDouble("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1237"$1237$"cursor.getColumnIndex(KEY_MAIN_EXERCISE_WEIGHT));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1238"$1238$"if (!TextUtils.isEmpty(mainExerciseName)) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1239"$1239$"weight = WendlerMath.calculateWeight("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1240"$1240$"mContext,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1241"$1241$"getOneRmForExercise(mainExerciseName),"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1242"$1242$"percentage);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1243"$1243$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1244"$1244$"ExerciseSet set = new ExerciseSet(SetType.REGULAR, weight, sets, repsPerformed);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1245"$1245$"exerciseSets.add(set);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1246"$1246$"AdditionalExercise exercise = new AdditionalExercise("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1247"$1247$"name,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1248"$1248$"exerciseSets,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1249"$1249$"mainExerciseName,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1250"$1250$"percentage,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1251"$1251$"mainExerciseWeight,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1252"$1252$"exerciseId,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1253"$1253$"isStarted);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1254"$1254$"exercises.add(exercise);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1255"$1255$"} while (cursor.moveToNext());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1256"$1256$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1257"$1257$"ArrayList<AdditionalExercise> original = getAdditionalExercisesForWorkout("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1258"$1258$"new Workout("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1259"$1259$"workoutName,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1260"$1260$"StringHelper.getTranslatableName(mContext, workoutName)));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1261"$1261$"if (isComplete || isStarted) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1262"$1262$"return exercises;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1263"$1263$"} else {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1264"$1264$"return original;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1265"$1265$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1266"$1266$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1267"$1267$"if (cursor != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1268"$1268$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1269"$1269$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1270"$1270$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1271"$1271$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1272"$1272$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1273"$1273$"* Update the workout stats for a new workout."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1274"$1274$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1275"$1275$"private void updateNewWorkoutStats(Workout workout) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1276"$1276$"int currentCycle;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1277"$1277$"int cycleName = workout.getCycleDisplayName();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1278"$1278$"int week;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1279"$1279$"double increment = getIncrement(workout.getName());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1280"$1280$"double weight = getOneRmForExercise(workout.getName());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1281"$1281$"currentCycle = workout.getCycle();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1282"$1282$"week = workout.getWeek();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1283"$1283$"if (workout.isComplete() && workout.isWon()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1284"$1284$"if (week < 4) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1285"$1285$"week++;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1286"$1286$"} else {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1287"$1287$"week = 1;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1288"$1288$"currentCycle++;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1289"$1289$"weight += increment;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1290"$1290$"cycleName++;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1291"$1291$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1292"$1292$"} else if (workout.isComplete()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1293"$1293$"DeloadItem deloadItem = new DeloadItem(week, currentCycle, weight, cycleName);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1294"$1294$"deloadItem = WendlerMath.doDeload("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1295"$1295$"mContext,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1296"$1296$"deloadItem,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1297"$1297$"workout.getMainExercise().getWorkoutPercentage(),"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1298"$1298$"increment);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1299"$1299$"week = deloadItem.getWeek();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1300"$1300$"currentCycle = deloadItem.getCycle();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1301"$1301$"weight = deloadItem.getWeight();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1302"$1302$"setWorkoutShouldDeload(workout.getName(), deloadItem.doDelayedDeload());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1303"$1303$"cycleName = deloadItem.getCycleName();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1304"$1304$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1305"$1305$"updateWithStats(workout.getName(), currentCycle, week, weight, cycleName);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1306"$1306$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1307"$1307$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1308"$1308$"* Update the latest workout stats."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1309"$1309$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1310"$1310$"private void updateLatestWorkoutStats(Workout workout) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1311"$1311$"int currentCycle;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1312"$1312$"int cycleName;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1313"$1313$"int week;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1314"$1314$"double increment = getIncrement(workout.getName());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1315"$1315$"double weight;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1316"$1316$"boolean hasWorkoutOutcomeChanged = hasWorkoutOutComeChanged(workout);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1317"$1317$"if (hasWorkoutOutcomeChanged) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1318"$1318$"currentCycle = workout.getCycle();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1319"$1319$"cycleName = workout.getCycleDisplayName();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1320"$1320$"weight = getOneRmForExercise(workout.getName());"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1321"$1321$"week = workout.getWeek();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1322"$1322$"if (workout.isComplete() && workout.isWon()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1323"$1323$"week++;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1324"$1324$"weight = WendlerMath.calculateNewWeight(weight, mContext, increment, true);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1325"$1325$"} else if (workout.isComplete()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1326"$1326$"week = 1;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1327"$1327$"currentCycle++;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1328"$1328$"cycleName++;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1329"$1329$"weight = WendlerMath.calculateNewWeight(weight, mContext, increment, false);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1330"$1330$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1331"$1331$"updateWithStats(workout.getName(), currentCycle, week, weight, cycleName);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1332"$1332$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1333"$1333$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1334"$1334$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1335"$1335$"* Set a given workout to deload when next possible."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1336"$1336$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1337"$1337$"private void setWorkoutShouldDeload(String workoutName, boolean value) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1338"$1338$"ContentValues cv = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1339"$1339$"cv.put(KEY_SHOULD_DELOAD, value ? 1 : 0);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1340"$1340$"mDatabase.update(DATABASE_TABLE_WENDLER_STATS, cv, KEY_NAME + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1341"$1341$"new String[]{workoutName});"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1342"$1342$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1343"$1343$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1344"$1344$"* Return if the outcome has changed for a given workout."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1345"$1345$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1346"$1346$"private boolean hasWorkoutOutComeChanged(Workout workout) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1347"$1347$"Cursor cursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1348"$1348$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1349"$1349$"cursor = mDatabase.query(DATABASE_TABLE_WENDLER_WORKOUT, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1350"$1350$"KEY_WORKOUT_ID + ""=?"", new String[]{String.valueOf(workout.getWorkoutId())},"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1351"$1351$"null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1352"$1352$"return cursor != null && cursor.moveToFirst() &&"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1353"$1353$"(cursor.getInt(cursor.getColumnIndex(KEY_WORKOUT_WON)) == 1) != workout.isWon();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1354"$1354$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1355"$1355$"if (cursor != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1356"$1356$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1357"$1357$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1358"$1358$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1359"$1359$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1360"$1360$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1361"$1361$"* Update a exercise with given stats."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1362"$1362$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1363"$1363$"private void updateWithStats("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1364"$1364$"String name, int cycle, int week, double weight, int cycleName) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1365"$1365$"if (cycle < 1) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1366"$1366$"cycle = 1;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1367"$1367$"cycleName = 1;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1368"$1368$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1369"$1369$"ContentValues contentValues = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1370"$1370$"contentValues.put(KEY_WORKOUT_ONE_RM, weight);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1371"$1371$"contentValues.put(KEY_WEEK, String.valueOf(week));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1372"$1372$"contentValues.put(KEY_CYCLE, String.valueOf(cycle));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1373"$1373$"contentValues.put(KEY_CYCLE_NAME, String.valueOf(cycleName));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1374"$1374$"mDatabase.update("$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1375"$1375$"DATABASE_TABLE_WENDLER_STATS, contentValues, KEY_NAME + ""=?"", new String[]{name});"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1376"$1376$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1377"$1377$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1378"$1378$"* Return if the workout is the latest performed."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1379"$1379$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1380"$1380$"private boolean isWorkoutLatest(Workout workout) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1381"$1381$"Cursor cursor = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1382"$1382$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1383"$1383$"cursor = mDatabase.query(DATABASE_TABLE_WENDLER_WORKOUT, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1384"$1384$"KEY_WORKOUT_EXERCISE + ""=? AND "" + KEY_WORKOUT_COMPLETED + ""=?"","$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1385"$1385$"new String[]{workout.getName(), ""1""}, null,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1386"$1386$"null, KEY_CYCLE + "" DESC, "" + KEY_WEEK + "" DESC"");"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1387"$1387$"return cursor != null"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1388"$1388$"&& cursor.moveToFirst()"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1389"$1389$"&& workout.getWorkoutId()"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1390"$1390$"== cursor.getInt(cursor.getColumnIndex(KEY_WORKOUT_ID));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1391"$1391$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1392"$1392$"if (cursor != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1393"$1393$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1394"$1394$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1395"$1395$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1396"$1396$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1397"$1397$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1398"$1398$"* Inner class for handling the connection to the SQLiteDatabase."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1399"$1399$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1400"$1400$"private static class DbHelper extends SQLiteOpenHelper {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1401"$1401$"private final Context mContext;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1402"$1402$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1403"$1403$"* Constructor."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1404"$1404$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1405"$1405$"public DbHelper(Context context) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1406"$1406$"super(context, DATABASE_NAME, null, DATABASE_VERSION);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1407"$1407$"mContext = context;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1408"$1408$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1409"$1409$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1410"$1410$"* Called when the helper is created."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1411"$1411$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1412"$1412$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1413"$1413$"public void onCreate(SQLiteDatabase db) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1414"$1414$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1415"$1415$"* Table for managing all the percentages for the 4 weeks."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1416"$1416$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1417"$1417$"db.execSQL(""CREATE TABLE "" + DATABASE_TABLE_PERCENT + "" ("""$"count"$1$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1418"$1418$"+ KEY_ROW_ID + "" INTEGER PRIMARY KEY AUTOINCREMENT, """$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1419"$1419$"+ KEY_WEEK_ONE + "" INTEGER NOT NULL, """$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1420"$1420$"+ KEY_WEEK_TWO + "" INTEGER NOT NULL, """$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1421"$1421$"+ KEY_WEEK_THREE + "" INTEGER NOT NULL, """$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1422"$1422$"+ KEY_WEEK_FOUR + "" INTEGER NOT NULL);"");"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1423"$1423$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1424"$1424$"* Table for managing the stats for each workout."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1425"$1425$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1426"$1426$"db.execSQL(""CREATE TABLE "" + DATABASE_TABLE_WENDLER_STATS + "" ("" +"$"count"$1$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1427"$1427$"KEY_ROW_ID + "" INTEGER PRIMARY KEY AUTOINCREMENT, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1428"$1428$"KEY_TRAINING_PERCENTAGE + "" INTEGER NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1429"$1429$"KEY_1RM + "" INTEGER NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1430"$1430$"KEY_INCREMENT + "" TEXT, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1431"$1431$"KEY_WEEK + "" TEXT, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1432"$1432$"KEY_CYCLE + "" TEXT, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1433"$1433$"KEY_CYCLE_NAME + "" TEXT, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1434"$1434$"KEY_ORDER + "" INTEGER, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1435"$1435$"KEY_SHOULD_DELOAD + "" INTEGER, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1436"$1436$"KEY_NAME + "" TEXT);"");"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1437"$1437$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1438"$1438$"* Table for saving the main exercise of a workout."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1439"$1439$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1440"$1440$"db.execSQL(""CREATE TABLE "" + DATABASE_TABLE_WENDLER_WORKOUT + "" ("" +"$"count"$1$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1441"$1441$"KEY_ROW_ID + "" INTEGER PRIMARY KEY AUTOINCREMENT, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1442"$1442$"KEY_INSERT_TIME + "" TEXT NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1443"$1443$"KEY_WORKOUT_YEAR + "" INTEGER NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1444"$1444$"KEY_WORKOUT_MONTH + "" INTEGER NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1445"$1445$"KEY_WORKOUT_DAY + "" INTEGER NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1446"$1446$"KEY_WORKOUT_EXERCISE + "" TEXT NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1447"$1447$"KEY_WORKOUT_REPS + "" TEXT NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1448"$1448$"KEY_WORKOUT_ONE_RM + "" TEXT NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1449"$1449$"KEY_WORKOUT_LAST_SET + "" TEXT NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1450"$1450$"KEY_WORKOUT_WEEK + "" TEXT NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1451"$1451$"KEY_WORKOUT_CYCLE + "" TEXT NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1452"$1452$"KEY_CYCLE_NAME + "" TEXT NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1453"$1453$"KEY_WORKOUT_ID + "" INTEGER NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1454"$1454$"KEY_WORKOUT_NOTES + "" TEXT NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1455"$1455$"KEY_WORKOUT_COMPLETED + "" INTEGER NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1456"$1456$"KEY_TRAINING_PERCENTAGE + "" INTEGER NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1457"$1457$"KEY_WORKOUT_WON + "" INTEGER, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1458"$1458$"KEY_WORKOUT_EST_ONE_RM + "" INTEGER) ;"");"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1459"$1459$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1460"$1460$"* Table for managing extra exercises for a specific workout."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1461"$1461$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1462"$1462$"db.execSQL(""CREATE TABLE "" + DATABASE_TABLE_WENDLER_EXTRA + "" ("" +"$"count"$1$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1463"$1463$"KEY_ROW_ID + "" INTEGER PRIMARY KEY AUTOINCREMENT, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1464"$1464$"KEY_WORKOUT_ID + "" INTEGER NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1465"$1465$"KEY_EXERCISE_NAME + "" TEXT NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1466"$1466$"KEY_EXTRA_EXERCISE_ID + "" INTEGER NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1467"$1467$"KEY_NUMBER_OF_SETS_OR_REPS_TO_BE_DONE + "" TEXT NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1468"$1468$"KEY_EXTRA_WEIGHT + "" TEXT NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1469"$1469$"KEY_EXTRA_PERCENTAGE_OF_MAIN_EXERCISE + "" TEXT, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1470"$1470$"KEY_EXTRA_MAIN_EXERCISE_NAME + "" TEXT, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1471"$1471$"KEY_MAIN_EXERCISE_WEIGHT + "" TEXT, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1472"$1472$"KEY_IS_STARTED + "" TEXT, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1473"$1473$"KEY_EXTRA_REPS_OR_SETS_COMPLETED + "" TEXT NOT NULL);"");"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1474"$1474$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1475"$1475$"* Table for storing all extra exercises used so they can be reused."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1476"$1476$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1477"$1477$"db.execSQL(""CREATE TABLE "" + DATABASE_TABLE_WENDLER_EXTRA_LIST + "" ("" +"$"count"$1$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1478"$1478$"KEY_ROW_ID + "" INTEGER PRIMARY KEY AUTOINCREMENT, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1479"$1479$"KEY_EXERCISE_NAME + "" TEXT NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1480"$1480$"KEY_EXTRA_EXERCISE_ID + "" TEXT NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1481"$1481$"KEY_WORKOUT_EXERCISE + "" TEXT NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1482"$1482$"KEY_NUMBER_OF_SETS_OR_REPS_TO_BE_DONE + "" TEXT NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1483"$1483$"KEY_EXTRA_WEIGHT + "" TEXT, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1484"$1484$"KEY_EXTRA_PERCENTAGE_OF_MAIN_EXERCISE + "" TEXT, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1485"$1485$"KEY_EXTRA_MAIN_EXERCISE_NAME + "" TEXT, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1486"$1486$"KEY_INCREMENT + "" TEXT, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1487"$1487$"KEY_MAIN_EXERCISE_WEIGHT + "" TEXT, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1488"$1488$"KEY_IS_BBB + "" INTEGER, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1489"$1489$"KEY_EXTRA_ORDER_IN_LIST + "" TEXT NOT NULL);"");"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1490"$1490$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1491"$1491$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1492"$1492$"* Called when the database is upgraded."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1493"$1493$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1494"$1494$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1495"$1495$"public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1496"$1496$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1497"$1497$"db.execSQL(""ALTER TABLE "" + DATABASE_TABLE_WENDLER_EXTRA_LIST + "" ADD COLUMN "" +"$"count"$1$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1498"$1498$"KEY_IS_BBB + "" INTEGER DEFAULT 0"");"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1499"$1499$"} catch (Exception e) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1500"$1500$"WendlerizedLog.v(""Failed to add column "" + KEY_IS_BBB + "" in "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1501"$1501$"DATABASE_TABLE_WENDLER_EXTRA_LIST);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1502"$1502$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1503"$1503$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1504"$1504$"db.execSQL(""ALTER TABLE "" + DATABASE_TABLE_WENDLER_STATS + "" ADD COLUMN """$"count"$1$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1505"$1505$"+ KEY_SHOULD_DELOAD + "" INTEGER DEFAULT 0"");"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1506"$1506$"} catch (Exception e) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1507"$1507$"WendlerizedLog.v(""Failed to add column "" + KEY_SHOULD_DELOAD + "" in "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1508"$1508$"DATABASE_TABLE_WENDLER_STATS);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1509"$1509$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1510"$1510$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1511"$1511$"db.execSQL(""ALTER TABLE "" + DATABASE_TABLE_WENDLER_STATS + "" ADD COLUMN """$"count"$1$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1512"$1512$"+ KEY_CYCLE_NAME + "" INTEGER DEFAULT 0"");"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1513"$1513$"} catch (Exception e) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1514"$1514$"WendlerizedLog.v(""Failed to add column "" + KEY_CYCLE_NAME + "" in "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1515"$1515$"DATABASE_TABLE_WENDLER_STATS);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1516"$1516$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1517"$1517$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1518"$1518$"db.execSQL(""ALTER TABLE "" + DATABASE_TABLE_WENDLER_WORKOUT + "" ADD COLUMN """$"count"$1$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1519"$1519$"+ KEY_CYCLE_NAME + "" INTEGER DEFAULT 0"");"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1520"$1520$"} catch (Exception e) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1521"$1521$"WendlerizedLog.v(""Failed to add column "" + KEY_CYCLE_NAME + "" in "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1522"$1522$"DATABASE_TABLE_WENDLER_WORKOUT);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1523"$1523$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1524"$1524$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1525"$1525$"db.execSQL(""ALTER TABLE "" + DATABASE_TABLE_WENDLER_EXTRA + "" ADD COLUMN "" +"$"count"$1$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1526"$1526$"KEY_MAIN_EXERCISE_WEIGHT + "" TEXT DEFAULT 0"");"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1527"$1527$"} catch (Exception e) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1528"$1528$"WendlerizedLog.v(""Failed to add column "" + KEY_MAIN_EXERCISE_WEIGHT + "" in "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1529"$1529$"DATABASE_TABLE_WENDLER_EXTRA);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1530"$1530$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1531"$1531$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1532"$1532$"db.execSQL(""ALTER TABLE "" + DATABASE_TABLE_WENDLER_EXTRA_LIST + "" ADD COLUMN "" +"$"count"$1$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1533"$1533$"KEY_MAIN_EXERCISE_WEIGHT + "" TEXT DEFAULT 0"");"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1534"$1534$"} catch (Exception e) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1535"$1535$"WendlerizedLog.v(""Failed to add column "" + KEY_MAIN_EXERCISE_WEIGHT + "" in "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1536"$1536$"DATABASE_TABLE_WENDLER_EXTRA_LIST);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1537"$1537$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1538"$1538$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1539"$1539$"db.execSQL(""ALTER TABLE "" + DATABASE_TABLE_WENDLER_EXTRA + "" ADD COLUMN "" +"$"count"$1$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1540"$1540$"KEY_IS_STARTED + "" TEXT DEFAULT 0"");"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1541"$1541$"} catch (Exception e) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1542"$1542$"WendlerizedLog.v(""Failed to add column "" + DATABASE_TABLE_WENDLER_EXTRA + "" in "" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1543"$1543$"KEY_IS_STARTED);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1544"$1544$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1545"$1545$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1546"$1546$"db.execSQL(""ALTER TABLE "" + DATABASE_TABLE_WENDLER_EXTRA_LIST + "" ADD COLUMN "" +"$"count"$1$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1547"$1547$"KEY_INCREMENT + "" TEXT DEFAULT 0"");"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1548"$1548$"} catch (Exception e) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1549"$1549$"WendlerizedLog.v(""Failed to add column "" + DATABASE_TABLE_WENDLER_EXTRA_LIST"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1550"$1550$"+ "" in "" + KEY_INCREMENT);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1551"$1551$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1552"$1552$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1553"$1553$"db.execSQL(""ALTER TABLE "" + DATABASE_TABLE_WENDLER_EXTRA_LIST + "" ADD COLUMN "" +"$"count"$1$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1554"$1554$"KEY_IS_BBB + "" INTEGER DEFAULT 0"");"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1555"$1555$"} catch (Exception e) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1556"$1556$"WendlerizedLog.v(""Failed to add column "" + DATABASE_TABLE_WENDLER_EXTRA_LIST"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1557"$1557$"+ "" in "" + KEY_IS_BBB);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1558"$1558$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1559"$1559$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1560"$1560$"db.execSQL(""ALTER TABLE "" + DATABASE_TABLE_WENDLER_EXTRA + "" ADD COLUMN "" +"$"count"$1$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1561"$1561$"KEY_IS_STARTED + "" INTEGER DEFAULT 0"");"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1562"$1562$"} catch (Exception e) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1563"$1563$"WendlerizedLog.v(""Failed to add column "" + DATABASE_TABLE_WENDLER_EXTRA"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1564"$1564$"+ "" in "" + KEY_IS_STARTED);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1565"$1565$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1566"$1566$"if (oldVersion < 12 && newVersion >= 12) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1567"$1567$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1568"$1568$"db.execSQL(""ALTER TABLE "" + DATABASE_TABLE_WENDLER_WORKOUT + "" ADD COLUMN "" +"$"count"$1$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1569"$1569$"KEY_WORKOUT_EST_ONE_RM + "" INTEGER DEFAULT 0"");"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1570"$1570$"setEst1rmForExistingWorkouts(db);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1571"$1571$"} catch(Exception e) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1572"$1572$"WendlerizedLog.v(""Failed to add column "" + DATABASE_TABLE_WENDLER_WORKOUT"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1573"$1573$"+ "" in "" + KEY_WORKOUT_EST_ONE_RM);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1574"$1574$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1575"$1575$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1576"$1576$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1577"$1577$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1578"$1578$"* Restore the database from a file."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1579"$1579$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1580"$1580$"@SuppressWarnings(""ConstantConditions"")"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1581"$1581$"public void restoreDatabase(File file) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1582"$1582$"close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1583"$1583$"File oldDb = new File(String.valueOf(mContext.getDatabasePath(getDatabaseName())));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1584"$1584$"if (file.exists()) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1585"$1585$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1586"$1586$"copyFile(new FileInputStream(file), new FileOutputStream(oldDb));"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1587"$1587$"} catch (IOException e) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1588"$1588$"e.printStackTrace();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1589"$1589$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1590"$1590$"getWritableDatabase().close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1591"$1591$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1592"$1592$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1593"$1593$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1594"$1594$"* Copy a given file."$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1595"$1595$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1596"$1596$"private static void copyFile(FileInputStream fromFile, FileOutputStream toFile)"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1597"$1597$"throws IOException {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1598"$1598$"FileChannel fromChannel = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1599"$1599$"FileChannel toChannel = null;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1600"$1600$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1601"$1601$"fromChannel = fromFile.getChannel();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1602"$1602$"toChannel = toFile.getChannel();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1603"$1603$"fromChannel.transferTo(0, fromChannel.size(), toChannel);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1604"$1604$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1605"$1605$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1606"$1606$"if (fromChannel != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1607"$1607$"fromChannel.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1608"$1608$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1609"$1609$"} finally {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1610"$1610$"if (toChannel != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1611"$1611$"toChannel.close();"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1612"$1612$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1613"$1613$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1614"$1614$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1615"$1615$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1616"$1616$"private static void setEst1rmForExistingWorkouts(SQLiteDatabase database)"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1617"$1617$"throws android.database.SQLException{"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1618"$1618$"String format ="$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1619"$1619$"""UPDATE %1$s SET %2$s ="" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1620"$1620$""" CASE WHEN %4$s > 0"" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1621"$1621$""" THEN %3$s * %4$s * 0.0333 + %3$s"" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1622"$1622$""" ELSE -1"" +"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1623"$1623$""" END""                                ;"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1624"$1624$"Object[] args = {DATABASE_TABLE_WENDLER_WORKOUT, KEY_WORKOUT_EST_ONE_RM,"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1625"$1625$"KEY_WORKOUT_LAST_SET, KEY_WORKOUT_REPS};"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1626"$1626$"String sql = String.format(Locale.ROOT, format, args);"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1627"$1627$"database.execSQL(sql);"$"count"$1$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1628"$1628$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1629"$1629$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"flawed\SqlHandler.java:1630"$1630$"}"$"ignore"$0$"..\sql-dataset\test\flawed\SqlHandler.java"
"secured\AccountServiceInterface.java:1"$1$"package db;"$"ignore"$0$"..\sql-dataset\test\secured\AccountServiceInterface.java"
"secured\AccountServiceInterface.java:2"$2$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\secured\AccountServiceInterface.java"
"secured\AccountServiceInterface.java:3"$3$"/**"$"ignore"$0$"..\sql-dataset\test\secured\AccountServiceInterface.java"
"secured\AccountServiceInterface.java:4"$4$"* Created by igor on 5/23/14."$"ignore"$0$"..\sql-dataset\test\secured\AccountServiceInterface.java"
"secured\AccountServiceInterface.java:5"$5$"*/"$"ignore"$0$"..\sql-dataset\test\secured\AccountServiceInterface.java"
"secured\AccountServiceInterface.java:6"$6$"public interface AccountServiceInterface {"$"ignore"$0$"..\sql-dataset\test\secured\AccountServiceInterface.java"
"secured\AccountServiceInterface.java:7"$7$"DBStatus registration(String login, String passd) throws SQLException;"$"ignore"$0$"..\sql-dataset\test\secured\AccountServiceInterface.java"
"secured\AccountServiceInterface.java:8"$8$"DBStatus login(String login, String passd) throws SQLException;"$"ignore"$0$"..\sql-dataset\test\secured\AccountServiceInterface.java"
"secured\AccountServiceInterface.java:9"$9$"}"$"ignore"$0$"..\sql-dataset\test\secured\AccountServiceInterface.java"
"secured\JdbcGameScoreRepository.java:1"$1$"package com.patience.klondike.infrastructure.persistence;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:2"$2$"import static com.google.common.base.Preconditions.checkNotNull;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:3"$3$"import static com.google.common.collect.Maps.newHashMap;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:4"$4$"import java.sql.ResultSet;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:5"$5$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:6"$6$"import java.util.List;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:7"$7$"import java.util.Map;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:8"$8$"import org.springframework.beans.factory.annotation.Value;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:9"$9$"import org.springframework.jdbc.core.RowMapper;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:10"$10$"import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:11"$11$"import org.springframework.stereotype.Component;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:12"$12$"import com.patience.klondike.domain.model.game.GameId;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:13"$13$"import com.patience.klondike.domain.model.game.score.GameScore;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:14"$14$"import com.patience.klondike.domain.model.game.score.GameScoreRepository;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:15"$15$"import com.patience.klondike.infrastructure.persistence.model.game.score.GameScoreDO;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:16"$16$"@Component"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:17"$17$"public class JdbcGameScoreRepository implements GameScoreRepository {"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:18"$18$"private NamedParameterJdbcTemplate jdbcTemplate;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:19"$19$"private ObjectSerializer objectSerializer;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:20"$20$"@Value(""${sql.gamescore.exists}"")"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:21"$21$"private String searchSql;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:22"$22$"@Value(""${sql.gamescore.retrieve}"")"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:23"$23$"private String selectSql;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:24"$24$"@Value(""${sql.gamescore.insert}"")"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:25"$25$"private String insertSql;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:26"$26$"@Value(""${sql.gamescore.update}"")"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:27"$27$"private String updateSql;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:28"$28$"public JdbcGameScoreRepository(NamedParameterJdbcTemplate jdbcTemplate, ObjectSerializer objectSerializer) {"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:29"$29$"this.jdbcTemplate = checkNotNull(jdbcTemplate, ""JdbcTemplate must be provided."");"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:30"$30$"this.objectSerializer = checkNotNull(objectSerializer, ""ObjectSerializer must be provided."");	"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:31"$31$"}"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:32"$32$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:33"$33$"public void save(GameScore game) {		"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:34"$34$"Map<String, Object> parameters = buildParameterMap(game);		"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:35"$35$"int count = jdbcTemplate.queryForObject(searchSql, parameters, Integer.class);		"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:36"$36$"String sql = count == 0 ? insertSql	: updateSql;		"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:37"$37$"jdbcTemplate.update(sql, parameters);	"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:38"$38$"}"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:39"$39$"private Map<String, Object> buildParameterMap(GameScore gameScore) {"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:40"$40$"Map<String, Object> parameters = newHashMap();"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:41"$41$"parameters.put(""gameId"", gameScore.gameId().id());		"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:42"$42$"parameters.put(""data"", convertToJson(gameScore));"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:43"$43$"parameters.put(""existingVersion"", gameScore.version());"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:44"$44$"parameters.put(""newVersion"", gameScore.version() + 1);"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:45"$45$"return parameters;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:46"$46$"}"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:47"$47$"private String convertToJson(GameScore game) {"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:48"$48$"GameScoreDO gameScoreDO = new GameScoreDO(game);		"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:49"$49$"return objectSerializer.serialize(gameScoreDO);		"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:50"$50$"}"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:51"$51$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:52"$52$"public GameScore gameScoreOfId(GameId gameId) {"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:53"$53$"Map<String, String> parameters = newHashMap();"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:54"$54$"parameters.put(""gameId"", gameId.id());	"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:55"$55$"List<GameScore> results = jdbcTemplate.query(selectSql, parameters, new RowMapper<GameScore>() {"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:56"$56$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:57"$57$"public GameScore mapRow(ResultSet resultSet, int idx) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:58"$58$"String data = resultSet.getString(""data"");"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:59"$59$"GameScoreDO gameScoreDO = objectSerializer.deserialize(data, GameScoreDO.class);"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:60"$60$"GameScore gameScore = gameScoreDO.toGameScore();"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:61"$61$"gameScore.setVersion(resultSet.getInt(""version""));"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:62"$62$"return gameScore;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:63"$63$"}			"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:64"$64$"});"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:65"$65$"if (results.isEmpty()) {"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:66"$66$"return null;"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:67"$67$"}"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:68"$68$"return results.get(0);"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:69"$69$"}	"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\JdbcGameScoreRepository.java:70"$70$"}"$"ignore"$0$"..\sql-dataset\test\secured\JdbcGameScoreRepository.java"
"secured\MapResultSetProcessor.java:1"$1$"/*"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:2"$2$"* Copyright (c) 2017 Evident Solutions Oy"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:3"$3$"*"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:4"$4$"* Permission is hereby granted, free of charge, to any person obtaining a copy"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:5"$5$"* of this software and associated documentation files (the ""Software""), to deal"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:6"$6$"* in the Software without restriction, including without limitation the rights"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:7"$7$"* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:8"$8$"* copies of the Software, and to permit persons to whom the Software is"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:9"$9$"* furnished to do so, subject to the following conditions:"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:10"$10$"*"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:11"$11$"* The above copyright notice and this permission notice shall be included in"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:12"$12$"* all copies or substantial portions of the Software."$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:13"$13$"*"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:14"$14$"* THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:15"$15$"* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:16"$16$"* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:17"$17$"* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:18"$18$"* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:19"$19$"* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:20"$20$"* THE SOFTWARE."$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:21"$21$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:22"$22$"package org.dalesbred.internal.result;"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:23"$23$"import org.dalesbred.internal.instantiation.*;"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:24"$24$"import org.dalesbred.internal.jdbc.ResultSetUtils;"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:25"$25$"import org.dalesbred.internal.utils.Primitives;"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:26"$26$"import org.dalesbred.result.ResultSetProcessor;"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:27"$27$"import org.dalesbred.result.UnexpectedResultException;"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:28"$28$"import org.jetbrains.annotations.NotNull;"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:29"$29$"import java.sql.ResultSet;"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:30"$30$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:31"$31$"import java.util.LinkedHashMap;"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:32"$32$"import java.util.Map;"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:33"$33$"import static java.util.Objects.requireNonNull;"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:34"$34$"/**"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:35"$35$"* ResultSetProcessor that expects results with two columns and creates map from them."$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:36"$36$"*"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:37"$37$"* <p>This processor updates the map in order in which the rows are read. Therefore, if"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:38"$38$"* the keys of the result are not distinct, the result contains the last binding of given key."$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:39"$39$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:40"$40$"public final class MapResultSetProcessor<K,V> implements ResultSetProcessor<Map<K,V>> {"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:41"$41$"private final @NotNull Class<K> keyType;"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:42"$42$"private final @NotNull Class<V> valueType;"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:43"$43$"private final @NotNull InstantiatorProvider instantiatorRegistry;"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:44"$44$"public MapResultSetProcessor(@NotNull Class<K> keyType,"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:45"$45$"@NotNull Class<V> valueType,"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:46"$46$"@NotNull InstantiatorProvider instantiatorRegistry) {"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:47"$47$"this.keyType = Primitives.wrap(requireNonNull(keyType));"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:48"$48$"this.valueType = Primitives.wrap(requireNonNull(valueType));"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:49"$49$"this.instantiatorRegistry = requireNonNull(instantiatorRegistry);"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:50"$50$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:51"$51$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:52"$52$"public @NotNull Map<K, V> process(@NotNull ResultSet resultSet) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:53"$53$"NamedTypeList types = ResultSetUtils.getTypes(resultSet.getMetaData());"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:54"$54$"if (types.size() < 2)"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:55"$55$"throw new UnexpectedResultException(""Expected ResultSet with at least 2 columns, but got "" + types.size() + "" columns."");"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:56"$56$"NamedTypeList valueTypes = types.subList(1, types.size());"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:57"$57$"TypeConversion keyConversion = instantiatorRegistry.getConversionFromDbValue(types.getType(0), keyType);"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:58"$58$"Instantiator<V> valueInstantiator = instantiatorRegistry.findInstantiator(valueType, valueTypes);"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:59"$59$"// For performance reasons we reuse the same arguments-array and InstantiatorArguments-object for all rows."$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:60"$60$"// This should be fine as long as the instantiators don't hang on to their arguments for too long."$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:61"$61$"Object[] valueArguments = new Object[valueTypes.size()];"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:62"$62$"InstantiatorArguments instantiatorArguments = new InstantiatorArguments(valueTypes, valueArguments);"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:63"$63$"Map<K, V> result = new LinkedHashMap<>();"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:64"$64$"while (resultSet.next()) {"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:65"$65$"K key = keyType.cast(keyConversion.convert(resultSet.getObject(1)));"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:66"$66$"for (int i = 0; i < valueArguments.length; i++)"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:67"$67$"valueArguments[i] = resultSet.getObject(i+2);"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:68"$68$"V value = valueInstantiator.instantiate(instantiatorArguments);"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:69"$69$"result.put(key, value);"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:70"$70$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:71"$71$"return result;"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:72"$72$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\MapResultSetProcessor.java:73"$73$"}"$"ignore"$0$"..\sql-dataset\test\secured\MapResultSetProcessor.java"
"secured\AeException.java:1"$1$"// $Header: /Development/AEDevelopment/projects/org.activebpel.rt/src/org/activebpel/rt/AeException.java,v 1.19 2007/03/16 12:00:04 mford Exp $"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:2"$2$"/////////////////////////////////////////////////////////////////////////////"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:3"$3$"//               PROPRIETARY RIGHTS STATEMENT"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:4"$4$"// The contents of this file represent confidential information that is the"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:5"$5$"// proprietary property of Active Endpoints, Inc.  Viewing or use of"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:6"$6$"// this information is prohibited without the express written consent of"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:7"$7$"// Active Endpoints, Inc. Removal of this PROPRIETARY RIGHTS STATEMENT"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:8"$8$"// is strictly forbidden. Copyright (c) 2002-2006 All rights reserved."$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:9"$9$"/////////////////////////////////////////////////////////////////////////////"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:10"$10$"package org.activebpel.rt;"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:11"$11$"import org.activebpel.rt.util.AeLoggerFactory;"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:12"$12$"import java.io.PrintWriter;"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:13"$13$"import java.io.StringWriter;"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:14"$14$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:15"$15$"import java.util.logging.Logger;"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:16"$16$"/**"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:17"$17$"* Describes the standard exception"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:18"$18$"*/"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:19"$19$"public class AeException extends Exception {"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:20"$20$"/**"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:21"$21$"*"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:22"$22$"*/"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:23"$23$"private static final long serialVersionUID = -7891249123313611358L;"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:24"$24$"/**"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:25"$25$"* Flag indicating if stack trace enabled, on by default."$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:26"$26$"*/"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:27"$27$"public static boolean sStackTraceOn = true;"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:28"$28$"/**"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:29"$29$"* Message associated with this exception - for serialization."$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:30"$30$"*/"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:31"$31$"private String mInfo;"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:32"$32$"/**"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:33"$33$"* The logger to use for messages."$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:34"$34$"*/"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:35"$35$"private static final Logger sLogger = AeLoggerFactory.createLogger(""AeException""); //$NON-NLS-1$"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:36"$36$"/**"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:37"$37$"* Construct a new runtime exception."$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:38"$38$"*/"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:39"$39$"public AeException() {"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:40"$40$"super();"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:41"$41$"}"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:42"$42$"/**"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:43"$43$"* Construct a new runtime exception with the passed info string."$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:44"$44$"*"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:45"$45$"* @see java.lang.Throwable#Throwable(String)"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:46"$46$"*/"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:47"$47$"public AeException(String aInfo) {"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:48"$48$"super(aInfo);"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:49"$49$"setInfo(aInfo);"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:50"$50$"}"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:51"$51$"/**"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:52"$52$"* Construct with a root exception (used primarily for rethrowing an underlying exception)."$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:53"$53$"*"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:54"$54$"* @param aRootCause"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:55"$55$"*/"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:56"$56$"public AeException(Throwable aRootCause) {"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:57"$57$"super(aRootCause);"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:58"$58$"setInfo(aRootCause.getLocalizedMessage());"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:59"$59$"}"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:60"$60$"/**"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:61"$61$"* Construct with a root exception (used prinarily for rethrowing an underlying exception)."$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:62"$62$"*"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:63"$63$"* @param aInfo      Informational message for the exception"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:64"$64$"* @param aRootCause Root cause of the exception"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:65"$65$"*/"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:66"$66$"public AeException(String aInfo, Throwable aRootCause) {"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:67"$67$"super(aInfo, aRootCause);"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:68"$68$"}"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:69"$69$"/**"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:70"$70$"* Utility method to write info to the console."$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:71"$71$"*"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:72"$72$"* @param aInfo Informational message to be displayed."$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:73"$73$"*/"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:74"$74$"public static void info(String aInfo) {"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:75"$75$"sLogger.info(aInfo);"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:76"$76$"}"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:77"$77$"/**"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:78"$78$"* Log an error"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:79"$79$"*"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:80"$80$"* @param aThrowable Throwable who's stack trace is to be logged"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:81"$81$"* @param aSummary   Informational message to be displayed."$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:82"$82$"*/"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:83"$83$"public static void logError(Throwable aThrowable, String aSummary) {"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:84"$84$"StringWriter sw = new StringWriter();"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:85"$85$"//noinspection IOResourceOpenedButNotSafelyClosed"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:86"$86$"PrintWriter pw = new PrintWriter(sw);"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:87"$87$"// Collect everything into a single string before we log it to the logger."$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:88"$88$"printError(pw, aThrowable, aSummary);"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:89"$89$"// Log the collected error information."$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:90"$90$"sLogger.severe(sw.toString());"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:91"$91$"}"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:92"$92$"/**"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:93"$93$"* Logs an error including nested causes and in the case of SQLExceptions, the next SQL exception in the chain."$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:94"$94$"*"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:95"$95$"* @param aThrowable"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:96"$96$"*/"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:97"$97$"public static void logError(Throwable aThrowable) {"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:98"$98$"logError(aThrowable, null);"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:99"$99$"}"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:100"$100$"/**"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:101"$101$"* Prints an exception stack trace to the given output stream."$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:102"$102$"*/"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:103"$103$"public static void printError(PrintWriter aOut, Throwable aThrowable) {"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:104"$104$"printError(aOut, aThrowable, null, true);"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:105"$105$"}"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:106"$106$"/**"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:107"$107$"* Called by {@link #logError(Throwable, String)} to print an error message"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:108"$108$"* and/or exception to the given output stream."$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:109"$109$"*/"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:110"$110$"private static void printError(PrintWriter aOut, Throwable aThrowable, String aSummary) {"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:111"$111$"printError(aOut, aThrowable, aSummary, sStackTraceOn);"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:112"$112$"}"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:113"$113$"/**"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:114"$114$"* Prints an error message and/or exception stack trace to the given output"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:115"$115$"* stream."$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:116"$116$"*/"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:117"$117$"private static void printError(PrintWriter aOut, Throwable aThrowable, String aSummary, boolean aStackTraceOn) {"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:118"$118$"if (aSummary != null) {"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:119"$119$"aOut.println(aSummary);"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:120"$120$"}"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:121"$121$"if (aThrowable != null) {"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:122"$122$"if (aStackTraceOn) {"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:123"$123$"aThrowable.printStackTrace(aOut);"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:124"$124$"} else {"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:125"$125$"aOut.println(aThrowable.getLocalizedMessage());"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:126"$126$"printCausedByMessages(aOut, aThrowable);"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:127"$127$"}"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:128"$128$"if (aThrowable instanceof SQLException) {"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:129"$129$"printError(aOut, ((SQLException) aThrowable).getNextException(), null, aStackTraceOn);"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:130"$130$"}"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:131"$131$"}"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:132"$132$"}"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:133"$133$"/**"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:134"$134$"* Called by {@link #printError(PrintWriter, Throwable, String)} to recursively"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:135"$135$"* print ""Caused by: "" messages for nested causes."$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:136"$136$"*/"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:137"$137$"private static void printCausedByMessages(PrintWriter aOut, Throwable aThrowable) {"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:138"$138$"Throwable cause = aThrowable.getCause();"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:139"$139$"if ((cause != null) && (cause != aThrowable)) {"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:140"$140$"aOut.print(AeMessages.getString(""AeException.2"")); //$NON-NLS-1$"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:141"$141$"aOut.println(cause.getLocalizedMessage());"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:142"$142$"printCausedByMessages(aOut, cause);"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:143"$143$"}"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:144"$144$"}"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:145"$145$"/**"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:146"$146$"* Log a warning"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:147"$147$"*"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:148"$148$"* @param aSummary Informational message to be displayed."$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:149"$149$"*/"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:150"$150$"public static void logWarning(String aSummary) {"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:151"$151$"sLogger.warning(aSummary);"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:152"$152$"}"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:153"$153$"/**"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:154"$154$"* Logs this exception error."$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:155"$155$"*/"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:156"$156$"public void logError() {"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:157"$157$"logError(this);"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:158"$158$"}"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:159"$159$"/**"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:160"$160$"* @return Returns the info for the exception."$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:161"$161$"*/"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:162"$162$"public String getInfo() {"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:163"$163$"return mInfo;"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:164"$164$"}"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:165"$165$"/**"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:166"$166$"* @param aInfo The info to set."$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:167"$167$"*/"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:168"$168$"public void setInfo(String aInfo) {"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:169"$169$"mInfo = aInfo;"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:170"$170$"}"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"secured\AeException.java:171"$171$"}"$"ignore"$0$"..\sql-dataset\test\secured\AeException.java"
"flawed\Contact_DAO.java:1"$1$"package com.example.newdatabase.app;"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:2"$2$"import android.content.ContentValues;"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:3"$3$"import android.content.Context;"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:4"$4$"import android.database.Cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:5"$5$"import android.database.sqlite.SQLiteDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:6"$6$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:7"$7$"import java.util.ArrayList;"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:8"$8$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:9"$9$"* Created by Marion on 03/20/15."$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:10"$10$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:11"$11$"public class Contact_DAO {"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:12"$12$"private SQLiteDatabase database;"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:13"$13$"private ContactHelper helper;"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:14"$14$"private String[] allColumns = {ContactContract.Column_ID, ContactContract.NAME, ContactContract.phone};"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:15"$15$"private Cursor cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:16"$16$"public Contact_DAO(Context context) {"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:17"$17$"helper = new ContactHelper(context, ContactContract.DATABASE_NAME, ContactContract.DATABASE_VERSION);"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:18"$18$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:19"$19$"public void open() throws SQLException {"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:20"$20$"database = helper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:21"$21$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:22"$22$"public void close() {"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:23"$23$"helper.close();"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:24"$24$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:25"$25$"public Contact createContact(String name, String number) {"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:26"$26$"ContentValues values = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:27"$27$"values.put(ContactContract.NAME, name);"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:28"$28$"values.put(ContactContract.phone, number);"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:29"$29$"if (database == null) {"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:30"$30$"database = helper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:31"$31$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:32"$32$"database.insert(ContactContract.Table_Name, null, values);"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:33"$33$"cursor = database.query(ContactContract.Table_Name,"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:34"$34$"allColumns, null, null,"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:35"$35$"null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:36"$36$"cursor.moveToLast();"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:37"$37$"Contact contact = new Contact();"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:38"$38$"contact.setName(cursor.getString(0));"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:39"$39$"contact.setNumber(cursor.getLong(1));"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:40"$40$"return contact;"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:41"$41$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:42"$42$"public ArrayList<Contact> getAllContacts() throws SQLException {"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:43"$43$"this.open();"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:44"$44$"ArrayList<Contact> contacts = new ArrayList<Contact>();"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:45"$45$"if (database == null) {"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:46"$46$"database = helper.getReadableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:47"$47$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:48"$48$"Cursor cursor = database.rawQuery(""Select * from "" + ContactContract.Table_Name, null);"$"count"$1$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:49"$49$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:50"$50$"while (!cursor.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:51"$51$"Contact contact = new Contact();"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:52"$52$"contact.setName(cursor.getString(1));"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:53"$53$"contact.setNumber(cursor.getLong(2));"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:54"$54$"contacts.add(contact);"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:55"$55$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:56"$56$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:57"$57$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:58"$58$"close();"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:59"$59$"return contacts;"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:60"$60$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:61"$61$"public void deleteComment(Contact contact) {"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:62"$62$"long id = contact.getId();"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:63"$63$"System.out.println(""Contact deleted with id: "" + id);"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:64"$64$"database.delete(ContactContract.Table_Name, ContactContract.Column_ID"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:65"$65$"+ "" = "" + id, null);"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:66"$66$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:67"$67$"public Cursor getCursor() throws SQLException {"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:68"$68$"if (isCursor()) {"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:69"$69$"this.getAllContacts();"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:70"$70$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:71"$71$"return cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:72"$72$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:73"$73$"private boolean isCursor() {"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:74"$74$"if (this.cursor == null)"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:75"$75$"return false;"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:76"$76$"return true;"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:77"$77$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\Contact_DAO.java:78"$78$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Contact_DAO.java"
"flawed\TaskDataSource.java:1"$1$"package com.example.rachel.wygt;"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:2"$2$"import android.content.ContentValues;"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:3"$3$"import android.content.Context;"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:4"$4$"import android.database.Cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:5"$5$"import android.database.sqlite.SQLiteDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:6"$6$"import android.util.Log;"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:7"$7$"import com.google.android.gms.maps.model.LatLng;"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:8"$8$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:9"$9$"import java.util.ArrayList;"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:10"$10$"import java.util.List;"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:11"$11$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:12"$12$"* Created by Rachel on 10/28/14."$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:13"$13$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:14"$14$"public class TaskDataSource {"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:15"$15$"private SQLiteDatabase database;"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:16"$16$"private MySQLiteHelper dbHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:17"$17$"private String[] allColumns = { MySQLiteHelper.COLUMN_ID,"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:18"$18$"MySQLiteHelper.COLUMN_REMINDER , MySQLiteHelper.COLUMN_LATITUDE, MySQLiteHelper.COLUMN_LONGITUDE,"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:19"$19$"MySQLiteHelper.COLUMN_ADDRESS, MySQLiteHelper.COLUMN_RADIUS,MySQLiteHelper.COLUMN_RADIUS_TYPE,"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:20"$20$"MySQLiteHelper.COLUMN_TIME,MySQLiteHelper.COLUMN_ORIGINAL_RADIUS_VALUE, MySQLiteHelper.COLUMN_TASK_TYPE,"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:21"$21$"MySQLiteHelper.COLUMN_IS_ACTIVE"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:22"$22$"};"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:23"$23$"public TaskDataSource(Context context) {"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:24"$24$"dbHelper = new MySQLiteHelper(context);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:25"$25$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:26"$26$"public void open() throws SQLException {"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:27"$27$"database = dbHelper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:28"$28$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:29"$29$"public void close() {"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:30"$30$"dbHelper.close();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:31"$31$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:32"$32$"public Task createTask(LatLng location, String reminder, long radius, int taskType, String address, String radius_type, int original, int active) {"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:33"$33$"ContentValues values = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:34"$34$"values.put(MySQLiteHelper.COLUMN_REMINDER, reminder);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:35"$35$"values.put(MySQLiteHelper.COLUMN_LATITUDE, location.latitude);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:36"$36$"values.put(MySQLiteHelper.COLUMN_LONGITUDE, location.longitude);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:37"$37$"values.put(MySQLiteHelper.COLUMN_RADIUS, radius);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:38"$38$"values.put(MySQLiteHelper.COLUMN_TIME, System.currentTimeMillis());"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:39"$39$"values.put(MySQLiteHelper.COLUMN_TASK_TYPE, taskType);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:40"$40$"values.put(MySQLiteHelper.COLUMN_ADDRESS,address);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:41"$41$"values.put(MySQLiteHelper.COLUMN_RADIUS_TYPE, radius_type);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:42"$42$"values.put(MySQLiteHelper.COLUMN_ORIGINAL_RADIUS_VALUE, original);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:43"$43$"values.put(MySQLiteHelper.COLUMN_IS_ACTIVE, active);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:44"$44$"long insertId = database.insert(MySQLiteHelper.TABLE_TASK, null,"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:45"$45$"values);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:46"$46$"Cursor cursor = database.query(MySQLiteHelper.TABLE_TASK,"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:47"$47$"allColumns, MySQLiteHelper.COLUMN_ID + "" = "" + insertId, null,"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:48"$48$"null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:49"$49$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:50"$50$"Task newTask = cursorToTask(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:51"$51$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:52"$52$"Log.d(""TaskDataSource"", ""Task created with id: "" + newTask.getId());"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:53"$53$"return newTask;"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:54"$54$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:55"$55$"public void deleteTask(Task task) {"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:56"$56$"long id = task.getId();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:57"$57$"System.out.println(""Task deleted with id: "" + id);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:58"$58$"database.delete(MySQLiteHelper.TABLE_TASK, MySQLiteHelper.COLUMN_ID"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:59"$59$"+ "" = "" + id, null);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:60"$60$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:61"$61$"public List<Task> getAllTasks() {"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:62"$62$"List<Task> tasks = new ArrayList<Task>();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:63"$63$"Cursor cursor = database.query(MySQLiteHelper.TABLE_TASK,"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:64"$64$"allColumns, null, null, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:65"$65$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:66"$66$"while (!cursor.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:67"$67$"Task task = cursorToTask(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:68"$68$"tasks.add(task);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:69"$69$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:70"$70$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:71"$71$"// make sure to close the cursor"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:72"$72$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:73"$73$"return tasks;"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:74"$74$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:75"$75$"public void updateTask(Task task){"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:76"$76$"ContentValues values = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:77"$77$"values.put(MySQLiteHelper.COLUMN_REMINDER, task.getReminder());"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:78"$78$"values.put(MySQLiteHelper.COLUMN_LATITUDE, task.getLatitude());"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:79"$79$"values.put(MySQLiteHelper.COLUMN_LONGITUDE, task.getLongitude());"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:80"$80$"values.put(MySQLiteHelper.COLUMN_RADIUS, task.getRadius());"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:81"$81$"values.put(MySQLiteHelper.COLUMN_TIME, System.currentTimeMillis());"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:82"$82$"values.put(MySQLiteHelper.COLUMN_TASK_TYPE, task.getTaskType());"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:83"$83$"values.put(MySQLiteHelper.COLUMN_ADDRESS,task.getAddress());"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:84"$84$"values.put(MySQLiteHelper.COLUMN_RADIUS_TYPE, task.getRadius_type());"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:85"$85$"values.put(MySQLiteHelper.COLUMN_ORIGINAL_RADIUS_VALUE, task.getOriginalRadius());"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:86"$86$"values.put(MySQLiteHelper.COLUMN_IS_ACTIVE, task.getIsActive());"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:87"$87$"database.update(MySQLiteHelper.TABLE_TASK, values, MySQLiteHelper.COLUMN_ID+""=""+task.getId(), null);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:88"$88$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:89"$89$"public List<Task> getTextTasks(){"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:90"$90$"List<Task> tasks = new ArrayList<Task>();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:91"$91$"Cursor cursor = database.rawQuery(""select * from ""+MySQLiteHelper.TABLE_TASK+"" where ""+"$"count"$1$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:92"$92$"MySQLiteHelper.COLUMN_TASK_TYPE+""=""+Task.TEXT_MESSAGE_TASK_TYPE+"""", null);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:93"$93$"if(cursor!=null) {"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:94"$94$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:95"$95$"while (!cursor.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:96"$96$"Task task = cursorToTask(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:97"$97$"tasks.add(task);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:98"$98$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:99"$99$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:100"$100$"// make sure to close the cursor"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:101"$101$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:102"$102$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:103"$103$"return tasks;"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:104"$104$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:105"$105$"public Task getTaskById(long id){"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:106"$106$"Task task = null;"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:107"$107$"Cursor cursor = database.rawQuery(""select * from ""+MySQLiteHelper.TABLE_TASK+"" where ""+"$"count"$1$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:108"$108$"MySQLiteHelper.COLUMN_ID+""=""+id+"""", null);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:109"$109$"if(cursor!=null) {"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:110"$110$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:111"$111$"while (!cursor.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:112"$112$"task = cursorToTask(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:113"$113$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:114"$114$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:115"$115$"// make sure to close the cursor"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:116"$116$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:117"$117$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:118"$118$"return task;"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:119"$119$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:120"$120$"public List<Task> getCallReminderTasks(){"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:121"$121$"List<Task> tasks = new ArrayList<Task>();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:122"$122$"Cursor cursor = database.rawQuery(""select * from ""+MySQLiteHelper.TABLE_TASK+"" where ""+"$"count"$1$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:123"$123$"MySQLiteHelper.COLUMN_TASK_TYPE+""=""+Task.CALL_REMINDER_TASK_TYPE+"""", null);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:124"$124$"if(cursor!= null){"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:125"$125$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:126"$126$"while (!cursor.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:127"$127$"Task task = cursorToTask(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:128"$128$"tasks.add(task);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:129"$129$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:130"$130$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:131"$131$"// make sure to close the cursor"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:132"$132$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:133"$133$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:134"$134$"return tasks;"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:135"$135$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:136"$136$"public List<Task> getReminderMessageTasks(){"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:137"$137$"List<Task> tasks = new ArrayList<Task>();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:138"$138$"Cursor cursor = database.rawQuery(""select * from ""+MySQLiteHelper.TABLE_TASK+"" where ""+"$"count"$1$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:139"$139$"MySQLiteHelper.COLUMN_TASK_TYPE+""=""+Task.REMINDER_MESSAGE_TASK_TYPE+"""", null);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:140"$140$"if(cursor!=null) {"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:141"$141$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:142"$142$"while (!cursor.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:143"$143$"Task task = cursorToTask(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:144"$144$"tasks.add(task);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:145"$145$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:146"$146$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:147"$147$"// make sure to close the cursor"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:148"$148$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:149"$149$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:150"$150$"return tasks;"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:151"$151$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:152"$152$"public List<Task> getSoundTasks(){"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:153"$153$"List<Task> tasks = new ArrayList<Task>();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:154"$154$"Cursor cursor = database.rawQuery(""select * from ""+MySQLiteHelper.TABLE_TASK+"" where ""+"$"count"$1$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:155"$155$"MySQLiteHelper.COLUMN_TASK_TYPE+""=""+Task.SOUND_SETTING_TASK_TYPE+"""", null);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:156"$156$"if(cursor!=null) {"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:157"$157$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:158"$158$"while (!cursor.isAfterLast()) {"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:159"$159$"Task task = cursorToTask(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:160"$160$"tasks.add(task);"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:161"$161$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:162"$162$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:163"$163$"// make sure to close the cursor"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:164"$164$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:165"$165$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:166"$166$"return tasks;"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:167"$167$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:168"$168$"private Task cursorToTask(Cursor cursor) {"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:169"$169$"Task task = new Task();"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:170"$170$"task.setId(cursor.getLong(0));"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:171"$171$"task.setReminder(cursor.getString(1));"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:172"$172$"task.setLatitude(cursor.getDouble(2));"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:173"$173$"task.setLongitude(cursor.getDouble(3));"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:174"$174$"task.setRadius(cursor.getLong(5));"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:175"$175$"task.setTime(cursor.getLong(7));"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:176"$176$"task.setTaskType(cursor.getInt(9));"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:177"$177$"task.setAddress(cursor.getString(4));"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:178"$178$"task.setRadius_type(cursor.getString(6));"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:179"$179$"task.setOriginalRadius(cursor.getInt(8));"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:180"$180$"task.setIsActive(cursor.getInt(10));"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:181"$181$"return task;"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:182"$182$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TaskDataSource.java:183"$183$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TaskDataSource.java"
"flawed\TeamsDataSource.java:1"$1$"package org.gitmad.sportsmobile.db;"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:2"$2$"import android.content.ContentValues;"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:3"$3$"import android.content.Context;"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:4"$4$"import android.database.Cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:5"$5$"import android.database.sqlite.SQLiteDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:6"$6$"import android.util.Log;"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:7"$7$"import org.gitmad.sportsmobile.model.Team;"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:8"$8$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:9"$9$"import java.util.ArrayList;"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:10"$10$"import java.util.List;"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:11"$11$"public class TeamsDataSource"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:12"$12$"{"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:13"$13$"private SQLiteDatabase database;"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:14"$14$"private MySQLiteHelper dbHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:15"$15$"private String[] allColumns = {"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:16"$16$"MySQLiteHelper.COLUMN_ID,"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:17"$17$"MySQLiteHelper.COLUMN_LONGNAME,"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:18"$18$"MySQLiteHelper.COLUMN_SHORTNAME,"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:19"$19$"MySQLiteHelper.COLUMN_CONFERENCE,"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:20"$20$"MySQLiteHelper.COLUMN_HOMETOWN,"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:21"$21$"MySQLiteHelper.COLUMN_COLOR,"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:22"$22$"MySQLiteHelper.COLUMN_IMAGEID"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:23"$23$"};"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:24"$24$"public TeamsDataSource(Context context)"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:25"$25$"{"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:26"$26$"dbHelper = new MySQLiteHelper(context);"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:27"$27$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:28"$28$"public void open() throws SQLException"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:29"$29$"{"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:30"$30$"database = dbHelper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:31"$31$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:32"$32$"public void close()"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:33"$33$"{"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:34"$34$"dbHelper.close();"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:35"$35$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:36"$36$"public Team createTeam(String longName, String shortName, String conference, String hometown, int color, int image_id)"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:37"$37$"{"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:38"$38$"ContentValues values = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:39"$39$"values.put(MySQLiteHelper.COLUMN_LONGNAME, longName);"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:40"$40$"values.put(MySQLiteHelper.COLUMN_SHORTNAME, shortName);"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:41"$41$"values.put(MySQLiteHelper.COLUMN_CONFERENCE, conference);"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:42"$42$"values.put(MySQLiteHelper.COLUMN_HOMETOWN, hometown);"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:43"$43$"values.put(MySQLiteHelper.COLUMN_COLOR, color);"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:44"$44$"values.put(MySQLiteHelper.COLUMN_IMAGEID, image_id);"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:45"$45$"long insertId = database.insert(MySQLiteHelper.TABLE_TEAMS, null, values);"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:46"$46$"Cursor cursor = database.query(MySQLiteHelper.TABLE_TEAMS, allColumns, MySQLiteHelper.COLUMN_ID+ "" = ""+ insertId, null, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:47"$47$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:48"$48$"Team team = cursorToTeam(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:49"$49$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:50"$50$"return team;"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:51"$51$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:52"$52$"public void deleteTeam(Team team)"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:53"$53$"{"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:54"$54$"long id = team.getId();"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:55"$55$"Log.d(""Team deleted with id: ""+id, ""DB"");"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:56"$56$"database.delete(MySQLiteHelper.TABLE_TEAMS, MySQLiteHelper.COLUMN_ID + "" = ""+ id, null);"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:57"$57$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:58"$58$"public List<Team> getAllTeams()"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:59"$59$"{"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:60"$60$"List<Team> teams = new ArrayList<Team>();"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:61"$61$"Cursor cursor = database.rawQuery(""select * from ""+MySQLiteHelper.TABLE_TEAMS, null);"$"count"$1$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:62"$62$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:63"$63$"while(!cursor.isAfterLast())"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:64"$64$"{"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:65"$65$"Team team = cursorToTeam(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:66"$66$"teams.add(team);"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:67"$67$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:68"$68$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:69"$69$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:70"$70$"return teams;"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:71"$71$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:72"$72$"public List<Team> getConference(String conference)"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:73"$73$"{"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:74"$74$"List<Team> teams = new ArrayList<Team>();"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:75"$75$"Cursor cursor = database.query(MySQLiteHelper.TABLE_TEAMS, allColumns, MySQLiteHelper.COLUMN_CONFERENCE +"" = ""+conference, null, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:76"$76$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:77"$77$"while(!cursor.isAfterLast())"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:78"$78$"{"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:79"$79$"Team team = cursorToTeam(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:80"$80$"teams.add(team);"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:81"$81$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:82"$82$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:83"$83$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:84"$84$"return teams;"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:85"$85$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:86"$86$"public Team getTeam(long id)"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:87"$87$"{"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:88"$88$"Cursor cursor = database.query(MySQLiteHelper.TABLE_TEAMS, allColumns, MySQLiteHelper.COLUMN_ID +"" = ""+id, null, null, null, null);"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:89"$89$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:90"$90$"Team team = cursorToTeam(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:91"$91$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:92"$92$"return team;"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:93"$93$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:94"$94$"public Team cursorToTeam(Cursor cursor)"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:95"$95$"{"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:96"$96$"Team team = new Team(cursor.getLong(0), cursor.getString(1), cursor.getString(2), cursor.getString(3), cursor.getString(4), cursor.getInt(5));"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:97"$97$"team.setImageId(cursor.getInt(6));"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:98"$98$"return team;"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:99"$99$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:100"$100$"public Team lookup(String code)"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:101"$101$"{"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:102"$102$"Cursor cursor = database.query(MySQLiteHelper.TABLE_TEAMS, allColumns, MySQLiteHelper.COLUMN_SHORTNAME+ "" = \'""+code+""\'"",null,null,null,null);"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:103"$103$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:104"$104$"if(cursor.getCount()==0)"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:105"$105$"return null;"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:106"$106$"Team team = cursorToTeam(cursor);"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:107"$107$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:108"$108$"return team;"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:109"$109$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"flawed\TeamsDataSource.java:110"$110$"}"$"ignore"$0$"..\sql-dataset\test\flawed\TeamsDataSource.java"
"secured\MsSqlDbSupport.java:1"$1$"/*"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:2"$2$"* Copyright 2008,  Unitils.org"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:3"$3$"*"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:4"$4$"* Licensed under the Apache License, Version 2.0 (the ""License"");"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:5"$5$"* you may not use this file except in compliance with the License."$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:6"$6$"* You may obtain a copy of the License at"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:7"$7$"*"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:8"$8$"*     http://www.apache.org/licenses/LICENSE-2.0"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:9"$9$"*"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:10"$10$"* Unless required by applicable law or agreed to in writing, software"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:11"$11$"* distributed under the License is distributed on an ""AS IS"" BASIS,"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:12"$12$"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:13"$13$"* See the License for the specific language governing permissions and"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:14"$14$"* limitations under the License."$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:15"$15$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:16"$16$"package org.jtester.module.database.support;"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:17"$17$"import static ext.jtester.org.apache.commons.dbutils.DbUtils.closeQuietly;"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:18"$18$"import java.sql.Connection;"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:19"$19$"import java.sql.ResultSet;"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:20"$20$"import java.sql.Statement;"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:21"$21$"import java.util.Set;"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:22"$22$"import org.jtester.exception.JTesterException;"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:23"$23$"/**"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:24"$24$"* Implementation of {@link DbSupport} for a MsSQL database."$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:25"$25$"* <p/>"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:26"$26$"* Special thanks to Niki Driessen who donated the initial version of the Derby"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:27"$27$"* support code."$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:28"$28$"* "$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:29"$29$"* @author Tim Ducheyne"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:30"$30$"* @author Niki Driessen"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:31"$31$"* @author Filip Neven"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:32"$32$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:33"$33$"@SuppressWarnings({ ""rawtypes"", ""unchecked"" })"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:34"$34$"public class MsSqlDbSupport extends DbSupport {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:35"$35$"/**"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:36"$36$"* Creates a new DB support instance for MS SQL."$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:37"$37$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:38"$38$"public MsSqlDbSupport() {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:39"$39$"super(""mssql"");"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:40"$40$"}"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:41"$41$"/**"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:42"$42$"* Returns the names of all tables in the database."$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:43"$43$"* "$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:44"$44$"* @return The names of all tables in the database"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:45"$45$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:46"$46$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:47"$47$"public Set<String> getTableNames() {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:48"$48$"SQLHandler handler = getSQLHandler();"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:49"$49$"Set set = handler"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:50"$50$".getItemsAsStringSet(""select t.name from sys.tables t, sys.schemas s where t.schema_id = s.schema_id and s.name = '"""$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:51"$51$"+ getSchemaName() + ""'"");"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:52"$52$"return set;"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:53"$53$"}"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:54"$54$"/**"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:55"$55$"* Gets the names of all columns of the given table."$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:56"$56$"* "$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:57"$57$"* @param tableName"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:58"$58$"*            The table, not null"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:59"$59$"* @return The names of the columns of the table with the given name"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:60"$60$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:61"$61$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:62"$62$"public Set<String> getColumnNames(String tableName) {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:63"$63$"SQLHandler handler = getSQLHandler();"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:64"$64$"Set set = handler"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:65"$65$".getItemsAsStringSet(""select c.name from sys.columns c, sys.tables t, sys.schemas s where c.object_id = t.object_id and t.name = '"""$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:66"$66$"+ tableName + ""' and t.schema_id = s.schema_id and s.name = '"" + getSchemaName() + ""'"");"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:67"$67$"return set;"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:68"$68$"}"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:69"$69$"/**"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:70"$70$"* Retrieves the names of all the views in the database schema."$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:71"$71$"* "$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:72"$72$"* @return The names of all views in the database"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:73"$73$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:74"$74$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:75"$75$"public Set<String> getViewNames() {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:76"$76$"SQLHandler handler = getSQLHandler();"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:77"$77$"Set set = handler"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:78"$78$".getItemsAsStringSet(""select v.name from sys.views v, sys.schemas s where v.schema_id = s.schema_id and s.name = '"""$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:79"$79$"+ getSchemaName() + ""'"");"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:80"$80$"return set;"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:81"$81$"}"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:82"$82$"/**"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:83"$83$"* Retrieves the names of all synonyms in the database schema."$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:84"$84$"* "$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:85"$85$"* @return The names of all synonyms in the database"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:86"$86$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:87"$87$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:88"$88$"public Set<String> getSynonymNames() {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:89"$89$"SQLHandler handler = getSQLHandler();"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:90"$90$"Set set = handler"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:91"$91$".getItemsAsStringSet(""select o.name from sys.synonyms o, sys.schemas s where o.schema_id = s.schema_id and s.name = '"""$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:92"$92$"+ getSchemaName() + ""'"");"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:93"$93$"return set;"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:94"$94$"}"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:95"$95$"/**"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:96"$96$"* Retrieves the names of all the triggers in the database schema."$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:97"$97$"* "$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:98"$98$"* @return The names of all triggers in the database"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:99"$99$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:100"$100$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:101"$101$"public Set<String> getTriggerNames() {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:102"$102$"SQLHandler handler = getSQLHandler();"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:103"$103$"Set set = handler"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:104"$104$".getItemsAsStringSet(""select t.name from sys.triggers t, sys.all_objects o, sys.schemas s where t.parent_id = o.object_id and o.schema_id = s.schema_id and s.name = '"""$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:105"$105$"+ getSchemaName() + ""'"");"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:106"$106$"return set;"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:107"$107$"}"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:108"$108$"/**"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:109"$109$"* Retrieves the names of all the types in the database schema."$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:110"$110$"* "$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:111"$111$"* @return The names of all types in the database"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:112"$112$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:113"$113$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:114"$114$"public Set<String> getTypeNames() {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:115"$115$"SQLHandler handler = getSQLHandler();"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:116"$116$"Set set = handler"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:117"$117$".getItemsAsStringSet(""select t.name from sys.types t, sys.schemas s where t.schema_id = s.schema_id and s.name = '"""$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:118"$118$"+ getSchemaName() + ""'"");"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:119"$119$"return set;"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:120"$120$"}"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:121"$121$"/**"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:122"$122$"* Gets the names of all identity columns of the given table."$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:123"$123$"* "$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:124"$124$"* @param tableName"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:125"$125$"*            The table, not null"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:126"$126$"* @return The names of the identity columns of the table with the given"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:127"$127$"*         name"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:128"$128$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:129"$129$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:130"$130$"public Set<String> getIdentityColumnNames(String tableName) {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:131"$131$"SQLHandler handler = getSQLHandler();"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:132"$132$"Set set = handler"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:133"$133$".getItemsAsStringSet(""select i.name from sys.identity_columns i, sys.tables t, sys.schemas s where i.object_id = t.object_id and t.name = '"""$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:134"$134$"+ tableName + ""' and t.schema_id = s.schema_id and s.name = '"" + getSchemaName() + ""'"");"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:135"$135$"return set;"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:136"$136$"}"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:137"$137$"/**"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:138"$138$"* Disables all referential constraints (e.g. foreign keys) on all table in"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:139"$139$"* the schema"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:140"$140$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:141"$141$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:142"$142$"public void disableReferentialConstraints() {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:143"$143$"Set<String> tableNames = getTableNames();"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:144"$144$"for (String tableName : tableNames) {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:145"$145$"disableReferentialConstraints(tableName);"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:146"$146$"}"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:147"$147$"}"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:148"$148$"// todo refactor (see oracle)"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:149"$149$"protected void disableReferentialConstraints(String tableName) {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:150"$150$"SQLHandler sqlHandler = getSQLHandler();"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:151"$151$"Set<String> constraintNames = sqlHandler"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:152"$152$".getItemsAsStringSet(""select f.name from sys.foreign_keys f, sys.tables t, sys.schemas s where f.parent_object_id = t.object_id and t.name = '"""$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:153"$153$"+ tableName + ""' and t.schema_id = s.schema_id and s.name = '"" + getSchemaName() + ""'"");"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:154"$154$"for (String constraintName : constraintNames) {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:155"$155$"sqlHandler.executeUpdate(""alter table "" + qualified(tableName) + "" drop constraint """$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:156"$156$"+ quoted(constraintName));"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:157"$157$"}"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:158"$158$"}"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:159"$159$"/**"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:160"$160$"* Disables all value constraints (e.g. not null) on all tables in the"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:161"$161$"* schema"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:162"$162$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:163"$163$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:164"$164$"public void disableValueConstraints() {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:165"$165$"Set<String> tableNames = getTableNames();"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:166"$166$"for (String tableName : tableNames) {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:167"$167$"disableValueConstraints(tableName);"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:168"$168$"}"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:169"$169$"}"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:170"$170$"// todo refactor (see oracle)"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:171"$171$"protected void disableValueConstraints(String tableName) {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:172"$172$"SQLHandler sqlHandler = getSQLHandler();"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:173"$173$"// disable all unique constraints"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:174"$174$"Set<String> keyConstraintNames = sqlHandler"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:175"$175$".getItemsAsStringSet(""select k.name from sys.key_constraints k, sys.tables t, sys.schemas s where k.type = 'UQ' and k.parent_object_id = t.object_id and t.name = '"""$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:176"$176$"+ tableName + ""' and t.schema_id = s.schema_id and s.name = '"" + getSchemaName() + ""'"");"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:177"$177$"for (String keyConstraintName : keyConstraintNames) {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:178"$178$"sqlHandler.executeUpdate(""alter table "" + qualified(tableName) + "" drop constraint """$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:179"$179$"+ quoted(keyConstraintName));"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:180"$180$"}"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:181"$181$"// disable all check constraints"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:182"$182$"Set<String> checkConstraintNames = sqlHandler"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:183"$183$".getItemsAsStringSet(""select c.name from sys.check_constraints c, sys.tables t, sys.schemas s where c.parent_object_id = t.object_id and t.name = '"""$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:184"$184$"+ tableName + ""' and t.schema_id = s.schema_id and s.name = '"" + getSchemaName() + ""'"");"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:185"$185$"for (String checkConstraintName : checkConstraintNames) {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:186"$186$"sqlHandler.executeUpdate(""alter table "" + qualified(tableName) + "" drop constraint """$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:187"$187$"+ quoted(checkConstraintName));"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:188"$188$"}"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:189"$189$"// disable all not null constraints"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:190"$190$"disableNotNullConstraints(tableName);"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:191"$191$"}"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:192"$192$"/**"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:193"$193$"* Increments the identity value for the specified identity column on the"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:194"$194$"* specified table to the given value. If there is no identity specified on"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:195"$195$"* the given primary key, the method silently finishes without effect."$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:196"$196$"* "$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:197"$197$"* @param tableName"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:198"$198$"*            The table with the identity column, not null"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:199"$199$"* @param identityColumnName"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:200"$200$"*            The column, not null"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:201"$201$"* @param identityValue"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:202"$202$"*            The new value"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:203"$203$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:204"$204$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:205"$205$"public void incrementIdentityColumnToValue(String tableName, String identityColumnName, long identityValue) {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:206"$206$"// there can only be 1 identity column per table"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:207"$207$"getSQLHandler()"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:208"$208$".executeUpdate(""DBCC CHECKIDENT ('"" + qualified(tableName) + ""', reseed, "" + identityValue + "")"");"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:209"$209$"}"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:210"$210$"/**"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:211"$211$"* Synonyms are supported."$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:212"$212$"* "$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:213"$213$"* @return True"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:214"$214$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:215"$215$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:216"$216$"public boolean supportsSynonyms() {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:217"$217$"return true;"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:218"$218$"}"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:219"$219$"/**"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:220"$220$"* Triggers are supported."$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:221"$221$"* "$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:222"$222$"* @return True"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:223"$223$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:224"$224$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:225"$225$"public boolean supportsTriggers() {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:226"$226$"return true;"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:227"$227$"}"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:228"$228$"/**"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:229"$229$"* Types are supported"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:230"$230$"* "$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:231"$231$"* @return true"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:232"$232$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:233"$233$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:234"$234$"public boolean supportsTypes() {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:235"$235$"return true;"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:236"$236$"}"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:237"$237$"/**"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:238"$238$"* Identity columns are supported."$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:239"$239$"* "$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:240"$240$"* @return True"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:241"$241$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:242"$242$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:243"$243$"public boolean supportsIdentityColumns() {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:244"$244$"return true;"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:245"$245$"}"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:246"$246$"/**"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:247"$247$"* Disables not-null constraints on the given table."$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:248"$248$"* <p/>"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:249"$249$"* For primary keys, row-guid, identity and computed columns not-null"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:250"$250$"* constrains cannot be disabled in MS-Sql."$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:251"$251$"* "$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:252"$252$"* @param tableName"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:253"$253$"*            The table, not null"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:254"$254$"*/"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:255"$255$"protected void disableNotNullConstraints(String tableName) {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:256"$256$"SQLHandler sqlHandler = getSQLHandler();"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:257"$257$"// retrieve the name of the primary key, since we cannot remove the"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:258"$258$"// not-null constraint on this column"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:259"$259$"Set<String> primaryKeyColumnNames = sqlHandler"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:260"$260$".getItemsAsStringSet(""select c.name from sys.key_constraints k, sys.index_columns i, sys.columns c, sys.tables t, sys.schemas s """$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:261"$261$"+ ""where k.type = 'PK' and i.index_id = k.unique_index_id and i.column_id = c.column_id """$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:262"$262$"+ ""  and c.object_id = t.object_id and k.parent_object_id = t.object_id and i.object_id = t.object_id """$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:263"$263$"+ ""  and t.name = '"""$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:264"$264$"+ tableName"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:265"$265$"+ ""' and t.schema_id = s.schema_id and s.name = '"""$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:266"$266$"+ getSchemaName() + ""'"");"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:267"$267$"Connection connection = null;"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:268"$268$"Statement statement = null;"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:269"$269$"ResultSet resultSet = null;"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:270"$270$"try {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:271"$271$"connection = sqlHandler.getDataSource().getConnection();"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:272"$272$"statement = connection.createStatement();"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:273"$273$"// get all not-null columns but not row-guid, identity and computed"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:274"$274$"// columns (these cannot be altered in MS-Sql)"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:275"$275$"resultSet = statement"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:276"$276$".executeQuery(""select c.name column_name, upper(y.name) data_type, c.max_length, c.precision from sys.types y, sys.columns c, sys.tables t, sys.schemas s """$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:277"$277$"+ ""where c.is_nullable = 0 and c.is_rowguidcol = 0 and c.is_identity = 0 and c.is_computed = 0 """$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:278"$278$"+ ""  and y.user_type_id = c.user_type_id and c.object_id = t.object_id and t.name = '"""$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:279"$279$"+ tableName + ""' and t.schema_id = s.schema_id and s.name = '"" + getSchemaName() + ""'"");"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:280"$280$"while (resultSet.next()) {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:281"$281$"String columnName = resultSet.getString(""column_name"");"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:282"$282$"if (primaryKeyColumnNames.contains(columnName)) {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:283"$283$"// skip primary key columns"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:284"$284$"continue;"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:285"$285$"}"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:286"$286$"String dataType = resultSet.getString(""data_type"");"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:287"$287$"if (""TIMESTAMP"".equals(dataType)) {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:288"$288$"// timestamp columns cannot be altered in MS-Sql"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:289"$289$"continue;"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:290"$290$"}"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:291"$291$"// handle data types that require a length and precision"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:292"$292$"if (""NUMERIC"".equals(dataType) || ""DECIMAL"".equals(dataType)) {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:293"$293$"String maxLength = resultSet.getString(""max_length"");"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:294"$294$"String precision = resultSet.getString(""precision"");"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:295"$295$"dataType += ""("" + maxLength + "", "" + precision + "")"";"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:296"$296$"} else if (dataType.contains(""CHAR"")) {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:297"$297$"String maxLength = resultSet.getString(""max_length"");"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:298"$298$"dataType += ""("" + maxLength + "")"";"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:299"$299$"}"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:300"$300$"// remove the not-null constraint"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:301"$301$"sqlHandler.executeUpdate(""alter table "" + qualified(tableName) + "" alter column "" + quoted(columnName)"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:302"$302$"+ "" "" + dataType + "" null"");"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:303"$303$"}"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:304"$304$"} catch (Throwable e) {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:305"$305$"throw new JTesterException(""Error while disabling not null constraints. Table name: "" + tableName, e);"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:306"$306$"} finally {"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:307"$307$"closeQuietly(connection, statement, resultSet);"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:308"$308$"}"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:309"$309$"}"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"secured\MsSqlDbSupport.java:310"$310$"}"$"ignore"$0$"..\sql-dataset\test\secured\MsSqlDbSupport.java"
"flawed\FormulaOneDatabaseManager.java:1"$1$"package com.example.owner.muccoursework;"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:2"$2$"import android.content.ContentValues;"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:3"$3$"import android.content.Context;"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:4"$4$"import android.database.Cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:5"$5$"import android.database.sqlite.SQLiteDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:6"$6$"import android.database.sqlite.SQLiteException;"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:7"$7$"import android.database.sqlite.SQLiteOpenHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:8"$8$"import android.util.Log;"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:9"$9$"import java.io.FileOutputStream;"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:10"$10$"import java.io.IOException;"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:11"$11$"import java.io.InputStream;"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:12"$12$"import java.io.OutputStream;"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:13"$13$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:14"$14$"import java.util.Locale;"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:15"$15$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:16"$16$"* Created by owner on 11/12/2014."$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:17"$17$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:18"$18$"public class FormulaOneDatabaseManager extends SQLiteOpenHelper {"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:19"$19$"//define database version, path, name, and fields"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:20"$20$"//these must match the names in the database file itself"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:21"$21$"//store application context in a context variable as well"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:22"$22$"private static final int DB_VER = 1;"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:23"$23$"private static final String DB_PATH = ""/data/data/com.example.owner.muccoursework/databases/"";"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:24"$24$"private static final String DB_NAME = ""formula1.s3db"";"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:25"$25$"private static final String TBL_DATABASEINFO = ""Formula1"";"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:26"$26$"public static final String COL_DRIVERID = ""DriverID"";"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:27"$27$"public static final String COL_DRIVERNAME = ""DriverName"";"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:28"$28$"public static final String COL_DRIVERTEAM = ""DriverTeam"";"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:29"$29$"public static final String COL_DRIVERIMAGE = ""DriverImage"";"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:30"$30$"public static final String COL_AUSTRALIARESULT = ""AustraliaResult"";"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:31"$31$"public static final String COL_MALAYSIARESULT = ""MalaysiaResult"";"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:32"$32$"public static final String COL_BAHRAINRESULT = ""BahrainResult"";"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:33"$33$"public static final String COL_CHINARESULT = ""ChinaResult"";"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:34"$34$"public static final String COL_SPAINRESULT = ""SpainResult"";"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:35"$35$"public static final String COL_MONACORESULT = ""MonacoResult"";"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:36"$36$"public static final String COL_CANADARESULT = ""CanadaResult"";"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:37"$37$"public static final String COL_AUSTRIARESULT = ""AustriaResult"";"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:38"$38$"public static final String COL_GREATBRITAINRESULT = ""GreatBritainResult"";"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:39"$39$"public static final String COL_GERMANYRESULT = ""GermanyResult"";"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:40"$40$"public static final String COL_HUNGARYRESULT = ""HungaryResult"";"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:41"$41$"public static final String COL_BELGIUMRESULT = ""BelgiumResult"";"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:42"$42$"public static final String COL_ITALYRESULT = ""ItalyResult"";"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:43"$43$"public static final String COL_SINGAPORERESULT = ""SingaporeResult"";"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:44"$44$"public static final String COL_JAPANRESULT = ""JapanResult"";"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:45"$45$"public static final String COL_RUSSIARESULT = ""RussiaResult"";"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:46"$46$"public static final String COL_UNITEDSTATESRESULT = ""UnitedStatesResult"";"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:47"$47$"public static final String COL_BRAZILRESULT = ""BrazilResult"";"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:48"$48$"public static final String COL_ABUDHABIRESULT = ""AbuDhabiResult"";"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:49"$49$"private final Context appContext;"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:50"$50$"public FormulaOneDatabaseManager(Context context, String name, SQLiteDatabase.CursorFactory factory, int version){"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:51"$51$"//call constructor for superclass and assign the context variable"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:52"$52$"super(context, name, factory, version);"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:53"$53$"this.appContext = context;"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:54"$54$"}"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:55"$55$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:56"$56$"public void onCreate(SQLiteDatabase db){"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:57"$57$"//create SQL query string based on the database's fields and types of those fields"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:58"$58$"//execute the query to ensure that the correct database can be found"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:59"$59$"String CREATE_DATABASEINFO_TABLE = ""CREATE TABLE IF NOT EXISTS "" +"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:60"$60$"TBL_DATABASEINFO + ""("" + COL_DRIVERID + "" INTEGER PRIMARY KEY,"" + COL_DRIVERNAME"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:61"$61$"+ "" TEXT,"" + COL_DRIVERTEAM + "" TEXT,"" + COL_DRIVERIMAGE + "" TEXT,"""$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:62"$62$"+ COL_AUSTRALIARESULT + "" TEXT"" + COL_MALAYSIARESULT + "" TEXT"" + COL_BAHRAINRESULT"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:63"$63$"+ "" TEXT"" + COL_CHINARESULT + "" TEXT"" + COL_SPAINRESULT + "" TEXT"" + COL_MONACORESULT"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:64"$64$"+ "" TEXT"" + COL_CANADARESULT + "" TEXT"" + COL_AUSTRIARESULT + "" TEXT"" + COL_GREATBRITAINRESULT"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:65"$65$"+ "" TEXT"" + COL_GERMANYRESULT + "" TEXT"" + COL_HUNGARYRESULT + "" TEXT"" + COL_BELGIUMRESULT"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:66"$66$"+ "" TEXT"" + COL_ITALYRESULT + "" TEXT"" + COL_SINGAPORERESULT + "" TEXT"" + COL_JAPANRESULT"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:67"$67$"+ "" TEXT"" + COL_RUSSIARESULT + "" TEXT"" + COL_UNITEDSTATESRESULT + "" TEXT"" + COL_BRAZILRESULT"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:68"$68$"+ "" TEXT"" + COL_ABUDHABIRESULT + "" TEXT"" + "")"";"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:69"$69$"db.execSQL(CREATE_DATABASEINFO_TABLE);"$"count"$1$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:70"$70$"}"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:71"$71$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:72"$72$"public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion){"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:73"$73$"//if the database has been changed after making the initial call, upgrade it"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:74"$74$"if (newVersion > oldVersion)"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:75"$75$"{"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:76"$76$"db.execSQL(""DROP TABLE IF EXISTS "" + TBL_DATABASEINFO);"$"count"$1$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:77"$77$"onCreate(db);"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:78"$78$"}"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:79"$79$"}"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:80"$80$"public void dbCreate() throws IOException{"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:81"$81$"//on creation of the database, attempt to copy it from the assets folder to the app's proper location"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:82"$82$"//create an empty database if the database cannot be found"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:83"$83$"//copy the database's information from assets"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:84"$84$"boolean dbExist = dbCheck();"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:85"$85$"if(!dbExist){"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:86"$86$"this.getReadableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:87"$87$"try{"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:88"$88$"copyDBFromAssets();"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:89"$89$"} catch (IOException e){"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:90"$90$"throw new Error(""Error copying database"");"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:91"$91$"}"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:92"$92$"}"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:93"$93$"}"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:94"$94$"private boolean dbCheck(){"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:95"$95$"//attempt to open the database to ensure it exists"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:96"$96$"//if a database is found and opened, close it to allow for further processing"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:97"$97$"SQLiteDatabase db = null;"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:98"$98$"try{"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:99"$99$"String dbPath = DB_PATH + DB_NAME;"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:100"$100$"db = SQLiteDatabase.openDatabase(dbPath, null, SQLiteDatabase.OPEN_READONLY);"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:101"$101$"db.setLocale(Locale.getDefault());"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:102"$102$"db.setVersion(1);"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:103"$103$"}catch(SQLiteException e){"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:104"$104$"Log.e(""SQLHelper"", ""Database not Found!"");"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:105"$105$"}"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:106"$106$"if(db!=null){"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:107"$107$"db.close();"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:108"$108$"}"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:109"$109$"return db != null ? true : false;"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:110"$110$"}"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:111"$111$"private void copyDBFromAssets() throws IOException{"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:112"$112$"//provide newly created empty database with the database from the assets folder"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:113"$113$"//stream the data as a byte array across input and output streams"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:114"$114$"InputStream dbInput = null;"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:115"$115$"OutputStream dbOutput = null;"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:116"$116$"String dbFileName = DB_PATH + DB_NAME;"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:117"$117$"try{"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:118"$118$"dbInput = appContext.getAssets().open(DB_NAME);"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:119"$119$"dbOutput = new FileOutputStream(dbFileName);"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:120"$120$"byte[] buffer = new byte[1024];"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:121"$121$"int length;"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:122"$122$"while ((length = dbInput.read(buffer)) > 0){"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:123"$123$"dbOutput.write(buffer, 0, length);"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:124"$124$"}"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:125"$125$"dbOutput.flush();"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:126"$126$"dbOutput.close();"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:127"$127$"dbInput.close();"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:128"$128$"} catch (IOException e)"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:129"$129$"{"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:130"$130$"throw new Error(""Problems copying DB!"");"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:131"$131$"}"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:132"$132$"}"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:133"$133$"public void addDatabaseInfo (DatabaseInfo theDatabaseInfo){"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:134"$134$"//populate a new database entry with the relevant data from each of the fields"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:135"$135$"ContentValues values = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:136"$136$"values.put(COL_DRIVERID, theDatabaseInfo.getDriverID());"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:137"$137$"values.put(COL_DRIVERNAME, theDatabaseInfo.getDriverName());"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:138"$138$"values.put(COL_DRIVERTEAM, theDatabaseInfo.getDriverTeam());"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:139"$139$"values.put(COL_DRIVERIMAGE, theDatabaseInfo.getDriverImage());"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:140"$140$"values.put(COL_AUSTRALIARESULT, theDatabaseInfo.getAustraliaResult());"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:141"$141$"values.put(COL_MALAYSIARESULT, theDatabaseInfo.getMalaysiaResult());"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:142"$142$"values.put(COL_BAHRAINRESULT, theDatabaseInfo.getBahrainResult());"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:143"$143$"values.put(COL_CHINARESULT, theDatabaseInfo.getChinaResult());"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:144"$144$"values.put(COL_SPAINRESULT, theDatabaseInfo.getSpainResult());"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:145"$145$"values.put(COL_MONACORESULT, theDatabaseInfo.getMonacoResult());"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:146"$146$"values.put(COL_CANADARESULT, theDatabaseInfo.getCanadaResult());"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:147"$147$"values.put(COL_GREATBRITAINRESULT, theDatabaseInfo.getGreatbritainResult());"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:148"$148$"values.put(COL_GERMANYRESULT, theDatabaseInfo.getGermanyResult());"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:149"$149$"values.put(COL_HUNGARYRESULT, theDatabaseInfo.getHungaryResult());"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:150"$150$"values.put(COL_BELGIUMRESULT, theDatabaseInfo.getBelgiumResult());"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:151"$151$"values.put(COL_ITALYRESULT, theDatabaseInfo.getItalyResult());"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:152"$152$"values.put(COL_SINGAPORERESULT, theDatabaseInfo.getSingaporeResult());"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:153"$153$"values.put(COL_JAPANRESULT, theDatabaseInfo.getJapanResult());"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:154"$154$"values.put(COL_RUSSIARESULT, theDatabaseInfo.getRussiaResult());"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:155"$155$"values.put(COL_UNITEDSTATESRESULT, theDatabaseInfo.getUnitedstatesResult());"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:156"$156$"values.put(COL_BRAZILRESULT, theDatabaseInfo.getBrazilResult());"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:157"$157$"values.put(COL_ABUDHABIRESULT, theDatabaseInfo.getAbudhabiResult());"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:158"$158$"SQLiteDatabase db = this.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:159"$159$"db.insert(TBL_DATABASEINFO, null, values);"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:160"$160$"db.close();"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:161"$161$"}"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:162"$162$"public DatabaseInfo findDriverData (String thisDriverData) {"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:163"$163$"//find the user's particular driver data"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:164"$164$"//create a query string based on the driver's name"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:165"$165$"//open the database and carry out the query using a cursor to move through the database's records to find the matching information"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:166"$166$"//store the data in an object of type DatabaseInfo and return it to the main activity"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:167"$167$"String query = ""Select * FROM "" + TBL_DATABASEINFO + "" WHERE "" + COL_DRIVERNAME + "" = \"""" + thisDriverData + ""\"""";"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:168"$168$"SQLiteDatabase db = this.getReadableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:169"$169$"Cursor cursor = db.rawQuery(query, null);"$"count"$1$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:170"$170$"DatabaseInfo databaseInfo = new DatabaseInfo();"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:171"$171$"if (cursor.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:172"$172$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:173"$173$"databaseInfo.setDriverID(Integer.parseInt(cursor.getString(0)));"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:174"$174$"databaseInfo.setDriverName(cursor.getString(1));"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:175"$175$"databaseInfo.setDriverTeam(cursor.getString(2));"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:176"$176$"databaseInfo.setDriverImage(cursor.getString(3));"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:177"$177$"databaseInfo.setAustraliaResult(cursor.getString(4));"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:178"$178$"databaseInfo.setMalaysiaResult(cursor.getString(5));"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:179"$179$"databaseInfo.setBahrainResult(cursor.getString(6));"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:180"$180$"databaseInfo.setChinaResult(cursor.getString(7));"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:181"$181$"databaseInfo.setSpainResult(cursor.getString(8));"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:182"$182$"databaseInfo.setMonacoResult(cursor.getString(9));"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:183"$183$"databaseInfo.setCanadaResult(cursor.getString(10));"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:184"$184$"databaseInfo.setAustriaResult(cursor.getString(11));"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:185"$185$"databaseInfo.setGreatbritainResult(cursor.getString(12));"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:186"$186$"databaseInfo.setGermanyResult(cursor.getString(13));"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:187"$187$"databaseInfo.setHungaryResult(cursor.getString(14));"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:188"$188$"databaseInfo.setBelgiumResult(cursor.getString(15));"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:189"$189$"databaseInfo.setItalyResult(cursor.getString(16));"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:190"$190$"databaseInfo.setSingaporeResult(cursor.getString(17));"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:191"$191$"databaseInfo.setJapanResult(cursor.getString(18));"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:192"$192$"databaseInfo.setRussiaResult(cursor.getString(19));"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:193"$193$"databaseInfo.setUnitedstatesResult(cursor.getString(20));"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:194"$194$"databaseInfo.setBrazilResult(cursor.getString(21));"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:195"$195$"databaseInfo.setAbudhabiResult(cursor.getString(22));"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:196"$196$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:197"$197$"} else {"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:198"$198$"databaseInfo = null;"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:199"$199$"}"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:200"$200$"db.close();"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:201"$201$"return databaseInfo;"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:202"$202$"}"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:203"$203$"public boolean removeDriverData(String thisDriverData){"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:204"$204$"//similar to above, but used to delete a driver"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:205"$205$"boolean result = false;"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:206"$206$"String query = ""Select * FROM ""  + TBL_DATABASEINFO + "" WHERE "" + COL_DRIVERNAME + "" = \"""" + thisDriverData + ""\"""";"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:207"$207$"SQLiteDatabase db = this.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:208"$208$"Cursor cursor = db.rawQuery(query, null);"$"count"$1$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:209"$209$"DatabaseInfo databaseInfo = new DatabaseInfo();"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:210"$210$"if(cursor.moveToFirst()){"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:211"$211$"databaseInfo.setDriverID(Integer.parseInt(cursor.getString(0)));"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:212"$212$"db.delete(TBL_DATABASEINFO, COL_DRIVERID + "" = ?"","$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:213"$213$"new String[] {String.valueOf(databaseInfo.getDriverID())});"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:214"$214$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:215"$215$"result = true;"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:216"$216$"}"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:217"$217$"db.close();"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:218"$218$"return result;"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:219"$219$"}"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"flawed\FormulaOneDatabaseManager.java:220"$220$"}"$"ignore"$0$"..\sql-dataset\test\flawed\FormulaOneDatabaseManager.java"
"secured\ComponentDaoImpl.java:1"$1$"package com.sgsoft.servicer.util.dao.oracle;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:2"$2$"import com.sgsoft.servicer.db.DBManager;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:3"$3$"import com.sgsoft.servicer.db.exception.DBException;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:4"$4$"import com.sgsoft.servicer.entity.Component;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:5"$5$"import com.sgsoft.servicer.util.dao.ComponentDAO;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:6"$6$"import com.sgsoft.servicer.util.dao.closer.DAOCloseHelper;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:7"$7$"import java.sql.PreparedStatement;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:8"$8$"import java.sql.ResultSet;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:9"$9$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:10"$10$"import java.util.ArrayList;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:11"$11$"import java.util.List;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:12"$12$"/**"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:13"$13$"* Created by Viktor Rotar on 07.04.14."$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:14"$14$"*/"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:15"$15$"public class ComponentDaoImpl extends DAOCloseHelper implements ComponentDAO {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:16"$16$"private static final String COMPONENT_ID_VALUE = ""COMPONENT_ID"";"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:17"$17$"private static final String COMPONENT_NAME_VALUE = ""COMPONENT_NAME"";"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:18"$18$"private static final String COMPONENT_DESCRIPTION_VALUE = ""COMPONENT_DESCRIPTION"";"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:19"$19$"private static final String COMPONENT_PRICE_VALUE = ""PRICE"";"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:20"$20$"private static final String ORDER_ID_VALUE = ""ORDER_ID"";"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:21"$21$"private static final String BID_ID_VALUE = ""BID_ID"";"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:22"$22$"private static final String GET_BY_ID_QUERY = ""SELECT * FROM Component WHERE ""+COMPONENT_ID_VALUE+"" = ?"";"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:23"$23$"private static final String DELETE_BY_ID_QUERY = ""DELETE FROM Component WHERE ""+COMPONENT_ID_VALUE+"" = ?"";"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:24"$24$"private static final String GET_ALL_COMPONENTS_QUERY = ""SELECT * FROM Components ORDER BY ""+COMPONENT_NAME_VALUE;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:25"$25$"private static final String CREATE_COMPONENT_QUERY = ""INSERT INTO Component VALUES(component_seq.NEXTVAL, ?, ?, ?)"";"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:26"$26$"private static final String UPDATE_COMPONENT_QUERY = ""UPDATE Component SET ""+COMPONENT_NAME_VALUE+"" = ?, ""+COMPONENT_DESCRIPTION_VALUE+"" = ?, ""+COMPONENT_PRICE_VALUE"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:27"$27$"+"" = ? WHERE ""+COMPONENT_ID_VALUE+"" = ?"";"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:28"$28$"private static final String GET_COMPONENTS_BY_ORDER_QUERY = ""SELECT ""+COMPONENT_ID_VALUE+"" FROM Order_component WHERE ""+"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:29"$29$"ORDER_ID_VALUE+"" = ?"";"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:30"$30$"private static final String ADD_COMPONENT_TO_BID_QUERY = ""INSERT INTO Component_economics VALUES(?, ?)"";"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:31"$31$"private static final String REMOVE_COMPONENT_FROM_BID_QUERY = ""DELETE FROM Component_economics WHERE ""+BID_ID_VALUE+"" = ? AND ""+ORDER_ID_VALUE+"" = ?"";"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:32"$32$"private static final String GET_COMPONENTS_BY_BID_QUERY = ""SELECT * FROM Component_economics WHERE ""+BID_ID_VALUE+"" = ?"";"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:33"$33$"private static final String ADD_COMPONENTS_QUERY = ""INSERT INTO Order_component VALUES(?, ?)"";"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:34"$34$"private static final String DELETE_COMPONENTS_QUERY = ""DELETE FROM Order_component WHERE ""+ORDER_ID_VALUE+"" = ? AND ""+"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:35"$35$"COMPONENT_ID_VALUE + "" = ?"";"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:36"$36$"private DBManager dbManager;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:37"$37$"public ComponentDaoImpl(DBManager dbManager)"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:38"$38$"{"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:39"$39$"this.dbManager = dbManager;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:40"$40$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:41"$41$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:42"$42$"public Component getById(Integer id) throws DBException {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:43"$43$"PreparedStatement preparedStatement = null;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:44"$44$"ResultSet resultSet = null;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:45"$45$"Component component  = null;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:46"$46$"try"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:47"$47$"{"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:48"$48$"preparedStatement = dbManager.preparedStatement(GET_BY_ID_QUERY);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:49"$49$"preparedStatement.setInt(1, id);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:50"$50$"resultSet = preparedStatement.executeQuery();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:51"$51$"while(resultSet.next())"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:52"$52$"{"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:53"$53$"component = getComponentEntity(resultSet);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:54"$54$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:55"$55$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:56"$56$"catch (SQLException ex)"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:57"$57$"{"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:58"$58$"throw new DBException(ex.getMessage(), ex);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:59"$59$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:60"$60$"finally {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:61"$61$"closeResultSet(resultSet);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:62"$62$"closeStatement(preparedStatement);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:63"$63$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:64"$64$"return component;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:65"$65$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:66"$66$"private Component getComponentEntity(ResultSet resultSet) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:67"$67$"Component component = new Component();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:68"$68$"component.setId(resultSet.getInt(COMPONENT_ID_VALUE));"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:69"$69$"component.setName(resultSet.getString(COMPONENT_NAME_VALUE));"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:70"$70$"component.setDescription(resultSet.getString(COMPONENT_DESCRIPTION_VALUE));"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:71"$71$"component.setPrice(resultSet.getDouble(COMPONENT_PRICE_VALUE));"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:72"$72$"return component;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:73"$73$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:74"$74$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:75"$75$"public int saveComponent(Component component) throws DBException {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:76"$76$"PreparedStatement preparedStatement = null;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:77"$77$"int result = 0;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:78"$78$"try"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:79"$79$"{"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:80"$80$"dbManager.commit();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:81"$81$"preparedStatement = dbManager.preparedStatement(CREATE_COMPONENT_QUERY);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:82"$82$"preparedStatement.setString(1, component.getName());"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:83"$83$"preparedStatement.setString(2, component.getDescription());"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:84"$84$"preparedStatement.setDouble(3, component.getPrice());"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:85"$85$"result = preparedStatement.executeUpdate();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:86"$86$"dbManager.commit();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:87"$87$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:88"$88$"catch (SQLException ex)"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:89"$89$"{"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:90"$90$"dbManager.rollback();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:91"$91$"throw new DBException(ex.getMessage(), ex);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:92"$92$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:93"$93$"finally {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:94"$94$"closeStatement(preparedStatement);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:95"$95$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:96"$96$"return result;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:97"$97$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:98"$98$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:99"$99$"public int updateComponent(Component component) throws DBException {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:100"$100$"PreparedStatement preparedStatement = null;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:101"$101$"int result = 0;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:102"$102$"try"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:103"$103$"{"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:104"$104$"dbManager.commit();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:105"$105$"preparedStatement = dbManager.preparedStatement(UPDATE_COMPONENT_QUERY);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:106"$106$"preparedStatement.setString(1, component.getName());"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:107"$107$"preparedStatement.setString(2, component.getDescription());"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:108"$108$"preparedStatement.setDouble(3, component.getPrice());"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:109"$109$"preparedStatement.setInt(4, component.getId());"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:110"$110$"result = preparedStatement.executeUpdate();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:111"$111$"dbManager.commit();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:112"$112$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:113"$113$"catch (SQLException ex)"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:114"$114$"{"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:115"$115$"dbManager.rollback();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:116"$116$"throw new DBException(ex.getMessage(), ex);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:117"$117$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:118"$118$"finally {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:119"$119$"closeStatement(preparedStatement);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:120"$120$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:121"$121$"return result;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:122"$122$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:123"$123$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:124"$124$"public int deleteById(Integer id) throws DBException {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:125"$125$"PreparedStatement preparedStatement = null;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:126"$126$"int result = 0;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:127"$127$"try"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:128"$128$"{"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:129"$129$"dbManager.commit();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:130"$130$"preparedStatement = dbManager.preparedStatement(DELETE_BY_ID_QUERY);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:131"$131$"preparedStatement.setInt(1, id);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:132"$132$"result = preparedStatement.executeUpdate();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:133"$133$"dbManager.commit();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:134"$134$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:135"$135$"catch (SQLException ex)"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:136"$136$"{"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:137"$137$"dbManager.rollback();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:138"$138$"throw new DBException(ex.getMessage(), ex);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:139"$139$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:140"$140$"finally {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:141"$141$"closeStatement(preparedStatement);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:142"$142$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:143"$143$"return result;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:144"$144$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:145"$145$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:146"$146$"public List<Component> getComponentsOrderByName() throws DBException {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:147"$147$"ResultSet resultSet = dbManager.execSQL(GET_ALL_COMPONENTS_QUERY);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:148"$148$"List<Component> components = new ArrayList<Component>();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:149"$149$"try"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:150"$150$"{"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:151"$151$"while(resultSet.next())"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:152"$152$"{"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:153"$153$"components.add(getComponentEntity(resultSet));"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:154"$154$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:155"$155$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:156"$156$"catch (SQLException ex)"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:157"$157$"{"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:158"$158$"throw new DBException(ex.getMessage(), ex);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:159"$159$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:160"$160$"finally {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:161"$161$"closeResultSet(resultSet);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:162"$162$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:163"$163$"return components;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:164"$164$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:165"$165$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:166"$166$"public List<Component> getComponentsByOrderId(Integer id) throws DBException {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:167"$167$"PreparedStatement preparedStatement = null;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:168"$168$"ResultSet resultSet = null;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:169"$169$"List<Component> components= new ArrayList<Component>();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:170"$170$"try"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:171"$171$"{"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:172"$172$"preparedStatement = dbManager.preparedStatement(GET_COMPONENTS_BY_ORDER_QUERY);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:173"$173$"preparedStatement.setInt(1, id);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:174"$174$"resultSet = preparedStatement.executeQuery();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:175"$175$"while(resultSet.next())"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:176"$176$"{"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:177"$177$"components.add(getComponentEntityById(resultSet));"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:178"$178$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:179"$179$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:180"$180$"catch (SQLException ex)"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:181"$181$"{"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:182"$182$"throw new DBException(ex.getMessage(), ex);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:183"$183$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:184"$184$"finally {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:185"$185$"closeResultSet(resultSet);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:186"$186$"closeStatement(preparedStatement);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:187"$187$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:188"$188$"return components;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:189"$189$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:190"$190$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:191"$191$"public List<Component> getComponentsByBid(Integer bidId) throws DBException {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:192"$192$"PreparedStatement preparedStatement = null;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:193"$193$"ResultSet resultSet = null;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:194"$194$"List<Component> components = new ArrayList<Component>();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:195"$195$"try"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:196"$196$"{"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:197"$197$"preparedStatement = dbManager.preparedStatement(GET_COMPONENTS_BY_BID_QUERY);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:198"$198$"preparedStatement.setInt(1, bidId);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:199"$199$"resultSet = preparedStatement.executeQuery();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:200"$200$"while(resultSet.next())"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:201"$201$"{"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:202"$202$"components.add(getComponentEntityById(resultSet));"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:203"$203$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:204"$204$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:205"$205$"catch (SQLException ex)"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:206"$206$"{"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:207"$207$"throw new DBException(ex.getMessage(), ex);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:208"$208$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:209"$209$"finally {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:210"$210$"closeResultSet(resultSet);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:211"$211$"closeStatement(preparedStatement);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:212"$212$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:213"$213$"return components;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:214"$214$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:215"$215$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:216"$216$"public int addComponentToBid(Integer bidId, Integer componentId) throws DBException {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:217"$217$"PreparedStatement preparedStatement = null;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:218"$218$"int result = 0;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:219"$219$"try"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:220"$220$"{"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:221"$221$"dbManager.commit();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:222"$222$"preparedStatement = dbManager.preparedStatement(ADD_COMPONENT_TO_BID_QUERY);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:223"$223$"preparedStatement.setInt(1, bidId);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:224"$224$"preparedStatement.setInt(2, componentId);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:225"$225$"result = preparedStatement.executeUpdate();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:226"$226$"dbManager.commit();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:227"$227$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:228"$228$"catch (SQLException ex)"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:229"$229$"{"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:230"$230$"dbManager.rollback();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:231"$231$"throw new DBException(ex.getMessage(), ex);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:232"$232$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:233"$233$"finally {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:234"$234$"closeStatement(preparedStatement);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:235"$235$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:236"$236$"return  result;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:237"$237$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:238"$238$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:239"$239$"public int removeComponentFromBid(Integer bidId, Integer componentId) throws DBException {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:240"$240$"PreparedStatement preparedStatement = null;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:241"$241$"int result = 0;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:242"$242$"try"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:243"$243$"{"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:244"$244$"dbManager.commit();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:245"$245$"preparedStatement = dbManager.preparedStatement(REMOVE_COMPONENT_FROM_BID_QUERY);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:246"$246$"preparedStatement.setInt(1, bidId);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:247"$247$"preparedStatement.setInt(2, componentId);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:248"$248$"result = preparedStatement.executeUpdate();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:249"$249$"dbManager.commit();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:250"$250$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:251"$251$"catch (SQLException ex)"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:252"$252$"{"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:253"$253$"dbManager.rollback();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:254"$254$"throw new DBException(ex.getMessage(), ex);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:255"$255$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:256"$256$"finally {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:257"$257$"closeStatement(preparedStatement);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:258"$258$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:259"$259$"return result;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:260"$260$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:261"$261$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:262"$262$"public int addComponentToOrder(Integer orderId, Integer componentId) throws DBException {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:263"$263$"PreparedStatement preparedStatement = null;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:264"$264$"int result = 0;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:265"$265$"try"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:266"$266$"{"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:267"$267$"dbManager.commit();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:268"$268$"preparedStatement = dbManager.preparedStatement(ADD_COMPONENTS_QUERY);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:269"$269$"preparedStatement.setInt(1, orderId);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:270"$270$"preparedStatement.setInt(2, componentId);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:271"$271$"result = preparedStatement.executeUpdate();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:272"$272$"dbManager.commit();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:273"$273$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:274"$274$"catch (SQLException ex)"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:275"$275$"{"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:276"$276$"dbManager.rollback();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:277"$277$"throw new DBException(ex.getMessage(), ex);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:278"$278$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:279"$279$"finally {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:280"$280$"closeStatement(preparedStatement);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:281"$281$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:282"$282$"return  result;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:283"$283$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:284"$284$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:285"$285$"public int removeComponentFromOrder(Integer orderId, Integer componentId) throws DBException {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:286"$286$"PreparedStatement preparedStatement = null;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:287"$287$"int result = 0;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:288"$288$"try"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:289"$289$"{"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:290"$290$"dbManager.commit();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:291"$291$"preparedStatement = dbManager.preparedStatement(DELETE_COMPONENTS_QUERY);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:292"$292$"preparedStatement.setInt(1, orderId);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:293"$293$"preparedStatement.setInt(2, componentId);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:294"$294$"result = preparedStatement.executeUpdate();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:295"$295$"dbManager.commit();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:296"$296$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:297"$297$"catch (SQLException ex)"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:298"$298$"{"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:299"$299$"dbManager.rollback();"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:300"$300$"throw new DBException(ex.getMessage(), ex);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:301"$301$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:302"$302$"finally {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:303"$303$"closeStatement(preparedStatement);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:304"$304$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:305"$305$"return result;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:306"$306$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:307"$307$"private Component getComponentEntityById(ResultSet resultSet) throws SQLException, DBException {"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:308"$308$"int componentId = resultSet.getInt(COMPONENT_ID_VALUE);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:309"$309$"Component component = this.getById(componentId);"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:310"$310$"return component;"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:311"$311$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"secured\ComponentDaoImpl.java:312"$312$"}"$"ignore"$0$"..\sql-dataset\test\secured\ComponentDaoImpl.java"
"flawed\EquipoDAO.java:1"$1$"package com.example.edward.analisis_clinico;"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:2"$2$"import android.content.ContentValues;"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:3"$3$"import android.content.Context;"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:4"$4$"import android.database.Cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:5"$5$"import android.database.sqlite.SQLiteDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:6"$6$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:7"$7$"import java.util.ArrayList;"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:8"$8$"import java.util.List;"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:9"$9$"public class EquipoDAO {"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:10"$10$"private DBHelper helper;"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:11"$11$"private SQLiteDatabase db,db2;"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:12"$12$"public EquipoDAO(Context context) {"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:13"$13$"helper = new DBHelper(context,""analisis_clinico_bd"", null, 1);"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:14"$14$"// db= helper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:15"$15$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:16"$16$"public void open()throws SQLException {"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:17"$17$"db = helper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:18"$18$"db2 = helper.getReadableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:19"$19$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:20"$20$"public void close(){"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:21"$21$"helper.close();"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:22"$22$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:23"$23$"public long insertarEquipoSQL1(String cod_equipo, String nombre_equipo, String marca_equipo,String estado_equipo ){"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:24"$24$"long estado = 0;"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:25"$25$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:26"$26$"ContentValues valores = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:27"$27$"valores.put(""cod_equipo"",cod_equipo);"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:28"$28$"valores.put(""nombre_equipo"",nombre_equipo);"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:29"$29$"valores.put(""marca_equipo"",marca_equipo);"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:30"$30$"valores.put(""estado_equipo"",estado_equipo);"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:31"$31$"estado=db.insert(""EQUIPO"",null,valores);"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:32"$32$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:33"$33$"catch (Exception e){estado=0;}"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:34"$34$"return estado;"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:35"$35$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:36"$36$"public long eliminarEquipoSQL(String cod_equipo){"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:37"$37$"long estado1=0;"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:38"$38$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:39"$39$"estado1 = db.delete(""EQUIPO"",""cod_equipo=?"",new String[]{String.valueOf(cod_equipo)});"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:40"$40$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:41"$41$"catch (Exception e){"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:42"$42$"estado1 = 0;"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:43"$43$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:44"$44$"return estado1;"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:45"$45$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:46"$46$"/* public ArrayList<EquipoMandar> ListaEquiposSQL(){"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:47"$47$"Cursor c;"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:48"$48$"ArrayList<EquipoMandar> listado = new ArrayList<EquipoMandar>();"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:49"$49$"c = db.rawQuery("" SELECT * FROM EQUIPO "", null);"$"count"$1$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:50"$50$"while (c.moveToNext()){"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:51"$51$"EquipoMandar objtequipo =new EquipoMandar();"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:52"$52$"objtequipo.setCod_equipo(c.getString(0));"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:53"$53$"objtequipo.setNombre_equipo(c.getString(1));"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:54"$54$"objtequipo.setMarca_equipo(c.getString(2));"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:55"$55$"objtequipo.setEstado_equipo(c.getString(3));"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:56"$56$"listado.add(objtequipo);"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:57"$57$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:58"$58$"c.close();"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:59"$59$"return listado;"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:60"$60$"}*/"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:61"$61$"public List consultarVerEquipo2SQL() {"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:62"$62$"List<String> lista = new ArrayList<String>();"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:63"$63$"Cursor cur = db2.rawQuery(""SELECT * FROM EQUIPO"", null);"$"count"$1$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:64"$64$"while (cur.moveToNext()) {"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:65"$65$"lista.add(cur.getString(0) + "" | "" + cur.getString(1) + "" | "" + cur.getString(2) + "" | "" + cur.getString(3));"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:66"$66$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:67"$67$"cur.close();"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:68"$68$"return (lista);"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:69"$69$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:70"$70$"/*   public long modificarEquipoSQL(String cod_equipo, String nombre_equipo, String marca_equipo,String estado_equipo){"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:71"$71$"long estado = 0;"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:72"$72$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:73"$73$"ContentValues valores = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:74"$74$"valores.put(""nombre_equipo"",nombre_equipo);"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:75"$75$"valores.put(""marca_equipo"",marca_equipo);"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:76"$76$"valores.put(""estado_equipo"",estado_equipo);"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:77"$77$"estado=db.update(""EQUIPO"",valores,""cod_equipo=""+cod_equipo,null);"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:78"$78$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:79"$79$"catch (Exception e){estado=0;}"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:80"$80$"return estado;"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:81"$81$"}*/"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\EquipoDAO.java:82"$82$"}"$"ignore"$0$"..\sql-dataset\test\flawed\EquipoDAO.java"
"flawed\UtentiDatabaseAdapter.java:1"$1$"package it.splineyellow.quizgame;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:2"$2$"import android.content.ContentValues;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:3"$3$"import android.content.Context;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:4"$4$"import android.database.Cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:5"$5$"import android.database.sqlite.SQLiteDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:6"$6$"import android.database.sqlite.SQLiteOpenHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:7"$7$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:8"$8$"// Copyright SplineYellow - 2014"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:9"$9$"/*"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:10"$10$"Classe per la gestione del Database Utenti."$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:11"$11$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:12"$12$"public class UtentiDatabaseAdapter {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:13"$13$"public static final String KEY_NICKNAME = ""nickname"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:14"$14$"public static final String KEY_PASSWORD = ""password"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:15"$15$"public static final String KEY_GIOCATE = ""giocate"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:16"$16$"public static final String KEY_VINTE = ""vinte"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:17"$17$"public static final String KEY_PAREGGIATE = ""pareggiate"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:18"$18$"public static final String KEY_PERSE = ""perse"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:19"$19$"public static final String KEY_GIUSTE = ""risp_giuste"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:20"$20$"public static final String KEY_ERRATE = ""risp_errate"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:21"$21$"public static final String KEY_ULTIMO = ""ultimo_accesso"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:22"$22$"public static final String TAG = ""UtentiDatabaseAdapter"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:23"$23$"public static final String DATABASE_NAME = ""utenti.db"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:24"$24$"public static final String TABLE_UTENTI = ""utenti"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:25"$25$"public static final int DATABASE_VERSION = 1;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:26"$26$"private static final String KEY_VARIABILE = ""variabile"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:27"$27$"private static final String KEY_VALORE = ""valore"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:28"$28$"private static final String TABLE_VARIABILI = ""variabili_utenti"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:29"$29$"private static final String TABLE_UTENTI_CREATE = ""create table "" +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:30"$30$"TABLE_UTENTI + "" ("" +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:31"$31$"KEY_NICKNAME + "" text primary key,"" +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:32"$32$"KEY_PASSWORD + "" text not null,"" +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:33"$33$"KEY_GIOCATE + "" integer not null,"" +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:34"$34$"KEY_VINTE + "" integer not null,"" +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:35"$35$"KEY_PAREGGIATE + "" integer not null,"" +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:36"$36$"KEY_PERSE + "" integer not null,"" +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:37"$37$"KEY_GIUSTE + "" integer not null,"" +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:38"$38$"KEY_ERRATE + "" integer not null,"" +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:39"$39$"KEY_ULTIMO + "" text not null"" +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:40"$40$""");"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:41"$41$"private static final String TABLE_VARIABILI_CREATE = ""create table "" +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:42"$42$"TABLE_VARIABILI + "" ("" +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:43"$43$"KEY_VARIABILE + "" text primary key,"" +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:44"$44$"KEY_VALORE + "" text not null,"" +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:45"$45$""" check ("" + KEY_VALORE + "" = 'true' or "" + KEY_VALORE + "" = 'false')"" +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:46"$46$""");"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:47"$47$"public static final String TABLE_UTENTI_DROP = ""drop table if exists "" + TABLE_UTENTI + "";"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:48"$48$"public static final String TABLE_VARIABILI_DROP = ""drop table if exists "" + TABLE_VARIABILI + "";"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:49"$49$"private final Context context;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:50"$50$"private DatabaseHelper DBHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:51"$51$"private SQLiteDatabase db;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:52"$52$"public UtentiDatabaseAdapter(Context ctx) {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:53"$53$"this.context = ctx;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:54"$54$"DBHelper = new DatabaseHelper(context);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:55"$55$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:56"$56$"private static class DatabaseHelper extends SQLiteOpenHelper {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:57"$57$"DatabaseHelper (Context context) {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:58"$58$"super (context, DATABASE_NAME, null, DATABASE_VERSION);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:59"$59$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:60"$60$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:61"$61$"public void onCreate(SQLiteDatabase db) {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:62"$62$"db.execSQL(TABLE_UTENTI_CREATE);"$"count"$1$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:63"$63$"db.execSQL(TABLE_VARIABILI_CREATE);"$"count"$1$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:64"$64$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:65"$65$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:66"$66$"public void onUpgrade (SQLiteDatabase db, int oldVersion, int newVersion) {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:67"$67$"db.execSQL(TABLE_UTENTI_DROP);"$"count"$1$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:68"$68$"onCreate(db);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:69"$69$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:70"$70$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:71"$71$"public UtentiDatabaseAdapter open() throws SQLException {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:72"$72$"db = DBHelper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:73"$73$"return this;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:74"$74$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:75"$75$"public void close() {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:76"$76$"DBHelper.close();"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:77"$77$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:78"$78$"public void checkOrInitializeDB () {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:79"$79$"try{"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:80"$80$"String sql = ""SELECT ""+ KEY_NICKNAME +"" FROM "" + TABLE_UTENTI + "";"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:81"$81$"Cursor cursor = db.rawQuery(sql, null);"$"count"$1$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:82"$82$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:83"$83$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:84"$84$"catch(Exception s){"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:85"$85$"db.execSQL(TABLE_UTENTI_DROP);"$"count"$1$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:86"$86$"db.execSQL(TABLE_VARIABILI_DROP);"$"count"$1$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:87"$87$"db.execSQL(TABLE_UTENTI_CREATE);"$"count"$1$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:88"$88$"db.execSQL(TABLE_VARIABILI_CREATE);"$"count"$1$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:89"$89$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:90"$90$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:91"$91$"public boolean alreadyIn (String user) {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:92"$92$"String check = ""select count("" + KEY_NICKNAME + "") from "" + TABLE_UTENTI +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:93"$93$""" where "" + KEY_NICKNAME + "" = '"" + user + ""';"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:94"$94$"Cursor c = db.rawQuery(check, null);"$"count"$1$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:95"$95$"if (c != null && c.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:96"$96$"if (c.getInt(0) == 0) {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:97"$97$"return false;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:98"$98$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:99"$99$"return true;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:100"$100$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:101"$101$"return false;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:102"$102$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:103"$103$"public void insertUser (String username, String password, String accessTimestamp) {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:104"$104$"accessTimestamp = formatDate (accessTimestamp);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:105"$105$"ContentValues initialValues = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:106"$106$"initialValues.put(KEY_NICKNAME, username);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:107"$107$"initialValues.put(KEY_PASSWORD, password);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:108"$108$"initialValues.put(KEY_GIOCATE, 0);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:109"$109$"initialValues.put(KEY_VINTE, 0);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:110"$110$"initialValues.put(KEY_PAREGGIATE, 0);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:111"$111$"initialValues.put(KEY_PERSE, 0);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:112"$112$"initialValues.put(KEY_GIUSTE, 0);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:113"$113$"initialValues.put(KEY_ERRATE, 0);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:114"$114$"initialValues.put(KEY_ULTIMO, accessTimestamp);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:115"$115$"db.insert(TABLE_UTENTI, null, initialValues);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:116"$116$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:117"$117$"public String formatDate (String ts) {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:118"$118$"ts = ts.substring(0, 2) + "":"" + ts.substring(2,4) + "":"" + ts.substring(4, 6) + "";"" +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:119"$119$"ts.substring(6, 8) + ""/"" + ts.substring(8, 10) + ""/"" + ts.substring(10);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:120"$120$"return ts;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:121"$121$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:122"$122$"public void updateLastAccess (String timestamp, String username) {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:123"$123$"timestamp = formatDate(timestamp);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:124"$124$"ContentValues initialValues = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:125"$125$"initialValues.put(KEY_ULTIMO, timestamp);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:126"$126$"db.update(TABLE_UTENTI, initialValues, KEY_NICKNAME + "" = '"" + username + ""'"", null);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:127"$127$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:128"$128$"public String getCurrentUser () {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:129"$129$"String query = ""select "" + KEY_NICKNAME + "", "" +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:130"$130$"KEY_PASSWORD + "", max("" + KEY_ULTIMO + "") from "" + TABLE_UTENTI + "";"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:131"$131$"Cursor c = db.rawQuery(query, null);"$"count"$1$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:132"$132$"if (c != null && c.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:133"$133$"return c.getString(0) + "","" + c.getString(1);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:134"$134$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:135"$135$"else"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:136"$136$"return ""Guest,guest"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:137"$137$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:138"$138$"public int getPlayData (String user, int parameter) {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:139"$139$"String camp;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:140"$140$"switch (parameter) {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:141"$141$"case 1: camp = KEY_GIOCATE;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:142"$142$"break;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:143"$143$"case 2: camp = KEY_VINTE;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:144"$144$"break;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:145"$145$"case 3: camp = KEY_PAREGGIATE;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:146"$146$"break;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:147"$147$"case 4: camp = KEY_PERSE;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:148"$148$"break;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:149"$149$"case 5: camp = KEY_GIUSTE;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:150"$150$"break;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:151"$151$"case 6: camp = KEY_ERRATE;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:152"$152$"break;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:153"$153$"default: return 0;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:154"$154$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:155"$155$"String query = ""select "" + camp + "" from "" + TABLE_UTENTI +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:156"$156$""" where "" + KEY_NICKNAME + "" = '"" + user + ""';"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:157"$157$"Cursor c = db.rawQuery(query, null);"$"count"$1$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:158"$158$"if (c != null && c.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:159"$159$"return c.getInt(0);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:160"$160$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:161"$161$"return 0;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:162"$162$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:163"$163$"public String getLastAccess (String user) {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:164"$164$"String query = ""select "" + KEY_ULTIMO + "" from "" + TABLE_UTENTI +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:165"$165$""" where "" + KEY_NICKNAME + "" = '"" + user + ""';"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:166"$166$"Cursor c = db.rawQuery(query, null);"$"count"$1$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:167"$167$"if (c != null && c.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:168"$168$"return c.getString(0);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:169"$169$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:170"$170$"return """";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:171"$171$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:172"$172$"public String getPasswordByUser (String user) {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:173"$173$"String query = ""select "" + KEY_PASSWORD + "" from "" + TABLE_UTENTI +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:174"$174$""" where "" + KEY_NICKNAME + "" = '"" + user + ""';"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:175"$175$"Cursor c = db.rawQuery(query, null);"$"count"$1$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:176"$176$"if (c != null && c.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:177"$177$"return c.getString(0);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:178"$178$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:179"$179$"return """";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:180"$180$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:181"$181$"public void updateWin () {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:182"$182$"String[] userData = getCurrentUser().split("","");"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:183"$183$"String user = userData[0];"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:184"$184$"int oldWin = getPlayData(user, 2);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:185"$185$"int win = oldWin + 1;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:186"$186$"String query = ""UPDATE "" + TABLE_UTENTI + "" SET "" + KEY_VINTE +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:187"$187$""" = "" + Integer.toString(win) + "" WHERE "" + KEY_NICKNAME +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:188"$188$""" = '"" + user + ""';"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:189"$189$"db.execSQL(query);"$"count"$1$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:190"$190$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:191"$191$"public void updateLost () {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:192"$192$"String[] userData = getCurrentUser().split("","");"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:193"$193$"String user = userData[0];"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:194"$194$"int oldLost = getPlayData(user, 2);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:195"$195$"int lost = oldLost + 1;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:196"$196$"String query = ""UPDATE "" + TABLE_UTENTI + "" SET "" + KEY_PERSE +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:197"$197$""" = "" + Integer.toString(lost) + "" WHERE "" + KEY_NICKNAME +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:198"$198$""" = '"" + user + ""';"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:199"$199$"db.execSQL(query);"$"count"$1$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:200"$200$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:201"$201$"public void updateDraw () {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:202"$202$"String[] userData = getCurrentUser().split("","");"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:203"$203$"String user = userData[0];"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:204"$204$"int oldDraw = getPlayData(user, 2);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:205"$205$"int draw = oldDraw + 1;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:206"$206$"String query = ""UPDATE "" + TABLE_UTENTI + "" SET "" + KEY_PAREGGIATE +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:207"$207$""" = "" + Integer.toString(draw) + "" WHERE "" + KEY_NICKNAME +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:208"$208$""" = '"" + user + ""';"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:209"$209$"db.execSQL(query);"$"count"$1$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:210"$210$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:211"$211$"public void updateScore (String username, int giuste) {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:212"$212$"int errate = 3 - giuste;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:213"$213$"int oldGiuste = getPlayData(username, 5);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:214"$214$"int oldErrate = getPlayData(username, 6);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:215"$215$"giuste = giuste + oldGiuste;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:216"$216$"errate = errate + oldErrate;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:217"$217$"String queryGiuste = ""UPDATE "" + TABLE_UTENTI + "" SET "" +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:218"$218$"KEY_GIUSTE + "" = "" + Integer.toString(giuste) + "" WHERE "" + KEY_NICKNAME + "" = '"" + username + ""';"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:219"$219$"String queryErrate = ""UPDATE "" + TABLE_UTENTI + "" SET "" +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:220"$220$"KEY_ERRATE + "" = "" + Integer.toString(errate) + "" WHERE "" + KEY_NICKNAME + "" = '"" + username + ""';"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:221"$221$"db.execSQL(queryGiuste);"$"count"$1$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:222"$222$"if (errate != 0) {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:223"$223$"db.execSQL(queryErrate);"$"count"$1$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:224"$224$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:225"$225$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:226"$226$"public void insertBooleanVariable (String varName, boolean bool) {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:227"$227$"String value;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:228"$228$"if (bool) value = ""true"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:229"$229$"else value = ""false"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:230"$230$"ContentValues variable = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:231"$231$"variable.put(KEY_VARIABILE, varName);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:232"$232$"variable.put(KEY_VALORE, value);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:233"$233$"db.insert(TABLE_VARIABILI, null, variable);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:234"$234$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:235"$235$"public void setBooleanVariable (String varName, boolean bool) {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:236"$236$"String value;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:237"$237$"if (bool) value = ""true"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:238"$238$"else value = ""false"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:239"$239$"String query = ""UPDATE "" + TABLE_VARIABILI + "" SET "" +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:240"$240$"KEY_VALORE + "" = '"" + value + ""' WHERE "" + KEY_VARIABILE + "" = '"" + varName + ""';"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:241"$241$"db.execSQL(query);"$"count"$1$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:242"$242$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:243"$243$"public boolean getBooleanVariable (String varName) {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:244"$244$"String query = ""SELECT "" + KEY_VALORE + "" FROM ""+ TABLE_VARIABILI +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:245"$245$""" WHERE "" + KEY_VARIABILE + "" = '"" + varName + ""';"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:246"$246$"Cursor c = db.rawQuery(query, null);"$"count"$1$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:247"$247$"if (c != null && c.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:248"$248$"if (c.getString(0).equals(""true"")) return true;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:249"$249$"else return false;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:250"$250$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:251"$251$"return false;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:252"$252$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:253"$253$"public void setIntegerVariable (String varName, int integer) {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:254"$254$"String value = Integer.toString(integer);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:255"$255$"String query = ""UPDATE "" + TABLE_VARIABILI + "" SET "" +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:256"$256$"KEY_VALORE + "" = '"" + value + ""' WHERE "" + KEY_VARIABILE + "" = '"" + varName + ""';"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:257"$257$"db.execSQL(query);"$"count"$1$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:258"$258$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:259"$259$"public int getIntegerVariable (String varName) {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:260"$260$"String query = ""SELECT "" + KEY_VALORE + "" FROM ""+ TABLE_VARIABILI +"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:261"$261$""" WHERE "" + KEY_VARIABILE + "" = '"" + varName + ""';"";"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:262"$262$"Cursor c = db.rawQuery(query, null);"$"count"$1$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:263"$263$"if (c != null && c.moveToFirst()) {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:264"$264$"return Integer.parseInt(c.getString(0));"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:265"$265$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:266"$266$"return 0;"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:267"$267$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:268"$268$"public void insertDefaultBooleanVariables () {"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:269"$269$"ContentValues var = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:270"$270$"var.put(KEY_VARIABILE, ""receivingScore"");"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:271"$271$"var.put(KEY_VALORE, ""false"");"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:272"$272$"db.insert(TABLE_VARIABILI, null, var);"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:273"$273$"var = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:274"$274$"var.put(KEY_VARIABILE, ""gameCounter"");"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:275"$275$"var.put(KEY_VALORE, ""0"");"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:276"$276$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"flawed\UtentiDatabaseAdapter.java:277"$277$"}"$"ignore"$0$"..\sql-dataset\test\flawed\UtentiDatabaseAdapter.java"
"secured\DfDelimiterDataJdbcHandler.java:1"$1$"/*"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:2"$2$"* Copyright 2014-2021 the original author or authors."$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:3"$3$"*"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:4"$4$"* Licensed under the Apache License, Version 2.0 (the ""License"");"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:5"$5$"* you may not use this file except in compliance with the License."$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:6"$6$"* You may obtain a copy of the License at"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:7"$7$"*"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:8"$8$"*     http://www.apache.org/licenses/LICENSE-2.0"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:9"$9$"*"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:10"$10$"* Unless required by applicable law or agreed to in writing, software"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:11"$11$"* distributed under the License is distributed on an ""AS IS"" BASIS,"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:12"$12$"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, "$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:13"$13$"* either express or implied. See the License for the specific language"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:14"$14$"* governing permissions and limitations under the License."$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:15"$15$"*/"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:16"$16$"package org.dbflute.logic.replaceschema.loaddata.delimiter.secretary;"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:17"$17$"import java.io.BufferedReader;"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:18"$18$"import java.io.FileInputStream;"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:19"$19$"import java.io.IOException;"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:20"$20$"import java.io.InputStreamReader;"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:21"$21$"import java.sql.Connection;"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:22"$22$"import java.sql.PreparedStatement;"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:23"$23$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:24"$24$"import org.slf4j.Logger;"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:25"$25$"import org.slf4j.LoggerFactory;"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:26"$26$"/**"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:27"$27$"* @author jflute"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:28"$28$"* @since 1.2.5 extracted from DfDelimiterDataWriterImpl (2021/01/20 Wednesday at roppongi japanese)"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:29"$29$"*/"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:30"$30$"public class DfDelimiterDataJdbcHandler {"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:31"$31$"private static final Logger _log = LoggerFactory.getLogger(DfDelimiterDataJdbcHandler.class);"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:32"$32$"// ==================================================================================="$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:33"$33$"//                                                                   Batch Transaction"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:34"$34$"//                                                                   ================="$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:35"$35$"public void beginTransaction(Connection conn) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:36"$36$"conn.setAutoCommit(false);"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:37"$37$"}"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:38"$38$"public PreparedStatement prepareStatement(Connection conn, String executedSql) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:39"$39$"return conn.prepareStatement(executedSql);"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:40"$40$"}"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:41"$41$"public void commitTransaction(Connection conn) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:42"$42$"conn.commit();"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:43"$43$"}"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:44"$44$"public void rollbackTransaction(Connection conn) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:45"$45$"conn.rollback();"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:46"$46$"}"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:47"$47$"public void commitJustInCase(Connection conn) {"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:48"$48$"final Boolean autoCommit = getAutoCommit(conn);"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:49"$49$"if (autoCommit != null && !autoCommit) { // basically no way, just in case"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:50"$50$"try {"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:51"$51$"commitTransaction(conn);"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:52"$52$"} catch (SQLException continued) {"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:53"$53$"_log.warn(""Failed to commit the transaction."", continued);"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:54"$54$"}"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:55"$55$"}"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:56"$56$"}"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:57"$57$"public Boolean getAutoCommit(Connection conn) {"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:58"$58$"Boolean autoCommit = null;"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:59"$59$"try {"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:60"$60$"autoCommit = conn != null ? conn.getAutoCommit() : null;"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:61"$61$"} catch (SQLException continued) {"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:62"$62$"// because it is possible that the connection would have already closed"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:63"$63$"_log.warn(""Connection#getAutoCommit() said: "" + continued.getMessage());"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:64"$64$"}"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:65"$65$"return autoCommit;"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:66"$66$"}"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:67"$67$"// ==================================================================================="$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:68"$68$"//                                                                              Closer"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:69"$69$"//                                                                              ======"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:70"$70$"public void closeStream(FileInputStream fis, InputStreamReader ir, BufferedReader br) {"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:71"$71$"try {"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:72"$72$"if (fis != null) {"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:73"$73$"fis.close();"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:74"$74$"}"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:75"$75$"if (ir != null) {"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:76"$76$"ir.close();"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:77"$77$"}"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:78"$78$"if (br != null) {"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:79"$79$"br.close();"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:80"$80$"}"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:81"$81$"} catch (IOException continued) {"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:82"$82$"_log.warn(""File-close threw the exception: "", continued);"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:83"$83$"}"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:84"$84$"}"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:85"$85$"public void close(PreparedStatement ps) {"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:86"$86$"if (ps != null) {"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:87"$87$"try {"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:88"$88$"ps.close();"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:89"$89$"} catch (SQLException ignored) {"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:90"$90$"_log.info(""Statement.close() threw the exception!"", ignored);"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:91"$91$"}"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:92"$92$"}"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:93"$93$"}"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:94"$94$"public void close(Connection conn) {"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:95"$95$"if (conn != null) {"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:96"$96$"try {"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:97"$97$"conn.close();"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:98"$98$"} catch (SQLException ignored) {"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:99"$99$"_log.info(""Connection.close() threw the exception!"", ignored);"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:100"$100$"}"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:101"$101$"}"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:102"$102$"}"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\DfDelimiterDataJdbcHandler.java:103"$103$"}"$"ignore"$0$"..\sql-dataset\test\secured\DfDelimiterDataJdbcHandler.java"
"secured\WorldAuthenticator.java:1"$1$"package com.jenjinstudios.world.server.sql;"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:2"$2$"import com.jenjinstudios.server.net.User;"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:3"$3$"import com.jenjinstudios.server.sql.Authenticator;"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:4"$4$"import com.jenjinstudios.world.Actor;"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:5"$5$"import com.jenjinstudios.world.server.WorldClientHandler;"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:6"$6$"import java.sql.Connection;"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:7"$7$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:8"$8$"import java.util.logging.Level;"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:9"$9$"import java.util.logging.Logger;"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:10"$10$"/**"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:11"$11$"* Handles SQL stuff for a WorldServer."$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:12"$12$"* @author Caleb Brinkman"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:13"$13$"*/"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:14"$14$"@SuppressWarnings(""SpellCheckingInspection"")"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:15"$15$"public class WorldAuthenticator extends Authenticator"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:16"$16$"{"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:17"$17$"/** The column name of the X coordinate. */"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:18"$18$"private static final String X_COORD = ""xCoord"";"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:19"$19$"/** The column name of the Y coordinate. */"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:20"$20$"private static final String Y_COORD = ""yCoord"";"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:21"$21$"/** The column name of the zone ID. */"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:22"$22$"private static final String ZONE_ID = ""zoneID"";"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:23"$23$"/** The Logger used for this class. */"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:24"$24$"private static final Logger LOGGER = Logger.getLogger(WorldAuthenticator.class.getName());"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:25"$25$"/**"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:26"$26$"* Create a new SQLHandler with the given database information, and connect to the database."$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:27"$27$"*/"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:28"$28$"public WorldAuthenticator(Connection connection) { super(connection); }"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:29"$29$"public void updatePlayer(WorldClientHandler worldClientHandler) {"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:30"$30$"Actor player = worldClientHandler.getPlayer();"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:31"$31$"User user = worldClientHandler.getUser();"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:32"$32$"user.getProperties().put(X_COORD, player.getVector2D().getXCoordinate());"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:33"$33$"user.getProperties().put(Y_COORD, player.getVector2D().getYCoordinate());"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:34"$34$"user.getProperties().put(ZONE_ID, player.getZoneID());"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:35"$35$"try"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:36"$36$"{"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:37"$37$"super.updateUserProperties(user);"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:38"$38$"} catch (SQLException e)"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:39"$39$"{"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:40"$40$"LOGGER.log(Level.SEVERE, ""Unable to update player information in database!"", e);"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:41"$41$"}"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:42"$42$"}"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\WorldAuthenticator.java:43"$43$"}"$"ignore"$0$"..\sql-dataset\test\secured\WorldAuthenticator.java"
"secured\BasicDriverManagerDataSource.java:1"$1$"/**"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:2"$2$"* Copyright 2013 Peergreen S.A.S. All rights reserved."$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:3"$3$"* Proprietary and confidential."$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:4"$4$"*"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:5"$5$"* Unless required by applicable law or agreed to in writing, software"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:6"$6$"* distributed under the License is distributed on an ""AS IS"" BASIS,"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:7"$7$"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:8"$8$"* See the License for the specific language governing permissions and"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:9"$9$"* limitations under the License."$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:10"$10$"*/"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:11"$11$"package com.peergreen.jdbc.internal;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:12"$12$"import javax.sql.DataSource;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:13"$13$"import java.io.ByteArrayOutputStream;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:14"$14$"import java.io.PrintWriter;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:15"$15$"import java.sql.Connection;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:16"$16$"import java.sql.Driver;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:17"$17$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:18"$18$"import java.sql.SQLFeatureNotSupportedException;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:19"$19$"import java.util.Properties;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:20"$20$"import java.util.logging.Logger;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:21"$21$"import static java.lang.String.format;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:22"$22$"/**"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:23"$23$"* Basic DataSource implementation that does not perform any pooling or instance control."$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:24"$24$"* This is just a {@link Connection} factory based on the given {@link java.sql.Driver}."$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:25"$25$"*/"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:26"$26$"public class BasicDriverManagerDataSource implements DataSource {"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:27"$27$"private final Driver driver;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:28"$28$"private String url;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:29"$29$"private String username;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:30"$30$"private String password;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:31"$31$"private int loginTimeout = 0;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:32"$32$"private final Properties properties;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:33"$33$"private PrintWriter logger;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:34"$34$"public BasicDriverManagerDataSource(final Driver driver) {"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:35"$35$"// TODO this writer prints nowhere"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:36"$36$"this(driver, new PrintWriter(new ByteArrayOutputStream()));"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:37"$37$"}"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:38"$38$"public BasicDriverManagerDataSource(final Driver driver, final PrintWriter logger) {"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:39"$39$"this.driver = driver;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:40"$40$"this.properties = new Properties();"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:41"$41$"this.logger = logger;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:42"$42$"}"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:43"$43$"public String getUrl() {"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:44"$44$"return url;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:45"$45$"}"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:46"$46$"public void setUrl(final String url) {"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:47"$47$"this.url = url;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:48"$48$"}"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:49"$49$"public String getUsername() {"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:50"$50$"return username;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:51"$51$"}"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:52"$52$"public void setUser(final String username) {"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:53"$53$"this.username = username;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:54"$54$"properties.setProperty(""user"", username);"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:55"$55$"}"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:56"$56$"public String getPassword() {"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:57"$57$"return password;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:58"$58$"}"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:59"$59$"public void setPassword(final String password) {"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:60"$60$"this.password = password;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:61"$61$"properties.setProperty(""password"", password);"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:62"$62$"}"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:63"$63$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:64"$64$"public Connection getConnection() throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:65"$65$"return driver.connect(url, properties);"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:66"$66$"}"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:67"$67$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:68"$68$"public Connection getConnection(final String username, final String password) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:69"$69$"Properties info = new Properties();"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:70"$70$"info.setProperty(""user"", username);"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:71"$71$"info.setProperty(""password"", password);"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:72"$72$"return driver.connect(url, info);"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:73"$73$"}"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:74"$74$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:75"$75$"public PrintWriter getLogWriter() throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:76"$76$"return logger;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:77"$77$"}"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:78"$78$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:79"$79$"public void setLogWriter(final PrintWriter out) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:80"$80$"this.logger = out;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:81"$81$"}"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:82"$82$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:83"$83$"public void setLoginTimeout(final int seconds) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:84"$84$"this.loginTimeout = seconds;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:85"$85$"}"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:86"$86$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:87"$87$"public int getLoginTimeout() throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:88"$88$"return loginTimeout;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:89"$89$"}"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:90"$90$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:91"$91$"public Logger getParentLogger() throws SQLFeatureNotSupportedException {"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:92"$92$"return null;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:93"$93$"}"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:94"$94$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:95"$95$"public <T> T unwrap(final Class<T> iface) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:96"$96$"throw new SQLException(format(""%s does not wrap another DataSource instance"", getClass().getName()));"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:97"$97$"}"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:98"$98$"@Override"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:99"$99$"public boolean isWrapperFor(final Class<?> iface) throws SQLException {"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:100"$100$"return false;"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:101"$101$"}"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"secured\BasicDriverManagerDataSource.java:102"$102$"}"$"ignore"$0$"..\sql-dataset\test\secured\BasicDriverManagerDataSource.java"
"flawed\DatabaseWrapper.java:1"$1$"package com.webmyne.paylabas.userapp.base;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:2"$2$"import android.content.ContentValues;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:3"$3$"import android.content.Context;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:4"$4$"import android.database.Cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:5"$5$"import android.database.sqlite.SQLiteDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:6"$6$"import android.database.sqlite.SQLiteOpenHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:7"$7$"import android.util.Log;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:8"$8$"import com.webmyne.paylabas.userapp.model.City;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:9"$9$"import com.webmyne.paylabas.userapp.model.Country;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:10"$10$"import com.webmyne.paylabas.userapp.model.State;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:11"$11$"import com.webmyne.paylabas_user.BuildConfig;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:12"$12$"import java.io.File;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:13"$13$"import java.io.FileOutputStream;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:14"$14$"import java.io.IOException;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:15"$15$"import java.io.InputStream;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:16"$16$"import java.io.OutputStream;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:17"$17$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:18"$18$"import java.util.ArrayList;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:19"$19$"import java.util.HashMap;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:20"$20$"import java.util.List;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:21"$21$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:22"$22$"* Created by krishnakumar on 09-12-2014."$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:23"$23$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:24"$24$"public class DatabaseWrapper extends SQLiteOpenHelper {"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:25"$25$"private static String TAG = ""DATABASE_WRAPPER"";"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:26"$26$"private  String DB_PATH = ""/data/data/com.webmyne.paylabas_user/databases/"";"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:27"$27$"private static String DB_NAME = ""PayLabas.db"";"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:28"$28$"private SQLiteDatabase myDataBase = null;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:29"$29$"private Context myContext;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:30"$30$"ArrayList<Country> country_obj;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:31"$31$"ArrayList<State> state_obj;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:32"$32$"//private StateManager state = StateManager.getInstance();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:33"$33$"private SQLiteDatabase db;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:34"$34$"public DatabaseWrapper(Context context) {"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:35"$35$"super(context, DB_NAME,null,1);"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:36"$36$"this.myContext = context;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:37"$37$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:38"$38$"public void createDataBase() throws IOException {"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:39"$39$"boolean dbExist = checkDataBase();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:40"$40$"if(dbExist){"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:41"$41$"Log.v(""log_tag"", ""database does exist"");"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:42"$42$"}else{"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:43"$43$"Log.v(""log_tag"", ""database does not exist"");"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:44"$44$"this.getReadableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:45"$45$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:46"$46$"copyDataBase();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:47"$47$"} catch (IOException e) {"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:48"$48$"e.printStackTrace();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:49"$49$"throw new Error(""Error copying database"");"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:50"$50$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:51"$51$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:52"$52$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:53"$53$"private void copyDataBase() throws IOException{"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:54"$54$"InputStream myInput = myContext.getAssets().open(DB_NAME);"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:55"$55$"String outFileName = DB_PATH + DB_NAME;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:56"$56$"OutputStream myOutput = new FileOutputStream(outFileName);"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:57"$57$"byte[] buffer = new byte[1024];"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:58"$58$"int length;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:59"$59$"while ((length = myInput.read(buffer))>0){"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:60"$60$"myOutput.write(buffer, 0, length);"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:61"$61$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:62"$62$"myOutput.flush();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:63"$63$"myOutput.close();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:64"$64$"myInput.close();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:65"$65$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:66"$66$"private boolean checkDataBase(){"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:67"$67$"File folder = new File(DB_PATH);"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:68"$68$"if(!folder.exists()){"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:69"$69$"folder.mkdir();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:70"$70$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:71"$71$"File dbFile = new File(DB_PATH + DB_NAME);"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:72"$72$"return dbFile.exists();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:73"$73$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:74"$74$"public boolean openDataBase() throws SQLException"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:75"$75$"{"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:76"$76$"String mPath = DB_PATH + DB_NAME;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:77"$77$"Log.e(""mPath"", mPath);"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:78"$78$"myDataBase = SQLiteDatabase.openDatabase(mPath, null, SQLiteDatabase.CREATE_IF_NECESSARY);"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:79"$79$"//mDataBase = SQLiteDatabase.openDatabase(mPath, null, SQLiteDatabase.NO_LOCALIZED_COLLATORS);"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:80"$80$"return myDataBase != null;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:81"$81$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:82"$82$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:83"$83$"public synchronized void close()"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:84"$84$"{"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:85"$85$"if(myDataBase != null)"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:86"$86$"myDataBase.close();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:87"$87$"super.close();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:88"$88$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:89"$89$"public  ArrayList<State> getStateData(int CountryID){"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:90"$90$"state_obj = new ArrayList<State>();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:91"$91$"Cursor c = null;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:92"$92$"//   return mDb.rawQuery(""SELECT * FROM myTable WHERE column1 = ""+ someValue, null);"$"count"$1$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:93"$93$"String query = ""select * from state where CountryID = "";"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:94"$94$"c = myDataBase.rawQuery(query+CountryID,null);"$"count"$1$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:95"$95$"c.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:96"$96$"if(c.moveToFirst()){"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:97"$97$"do {"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:98"$98$"int sid= c.getInt(c.getColumnIndex(""StateID""));"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:99"$99$"String StateN=c.getString(c.getColumnIndex(""StateName""));"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:100"$100$"int Countrycode=c.getInt(c.getColumnIndex(""CountryID""));"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:101"$101$"State temp_obj=new State();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:102"$102$"temp_obj.StateID=sid;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:103"$103$"temp_obj.StateName=StateN;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:104"$104$"temp_obj.CountryID=Countrycode;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:105"$105$"state_obj.add(temp_obj);"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:106"$106$"}while (c.moveToNext());"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:107"$107$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:108"$108$"c.close();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:109"$109$"return state_obj;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:110"$110$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:111"$111$"public  ArrayList<City> getCityData(int StateID){"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:112"$112$"ArrayList<City> cities = new ArrayList<City>();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:113"$113$"Cursor c = null;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:114"$114$"//   return mDb.rawQuery(""SELECT * FROM myTable WHERE column1 = ""+ someValue, null);"$"count"$1$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:115"$115$"String query = ""select * from city where StateID = "";"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:116"$116$"c = myDataBase.rawQuery(query+StateID,null);"$"count"$1$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:117"$117$"c.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:118"$118$"if(c.moveToFirst()){"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:119"$119$"do {"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:120"$120$"City city = new City();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:121"$121$"city.CityID = c.getLong(c.getColumnIndex(""CityID""));"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:122"$122$"city.CityName = c.getString(c.getColumnIndex(""CityName""));"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:123"$123$"city.StateID = c.getLong(c.getColumnIndex(""StateID""));"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:124"$124$"cities.add(city);"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:125"$125$"}while (c.moveToNext());"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:126"$126$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:127"$127$"c.close();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:128"$128$"return cities;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:129"$129$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:130"$130$"public void insertCities(ArrayList<City> cities){"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:131"$131$"for(City city : cities){"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:132"$132$"ContentValues cv = new ContentValues();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:133"$133$"cv.put(""CityID"",city.CityID);"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:134"$134$"cv.put(""CityName"",city.CityName);"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:135"$135$"cv.put(""StateID"",city.StateID);"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:136"$136$"myDataBase.insert(""city"",null,cv);"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:137"$137$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:138"$138$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:139"$139$"public boolean isAlreadyInDatabase(int stateID){"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:140"$140$"boolean isThere = false;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:141"$141$"Cursor c = null;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:142"$142$"String query = ""select * from city where StateID =""+stateID;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:143"$143$"c = myDataBase.rawQuery(query,null);"$"count"$1$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:144"$144$"if(c == null){"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:145"$145$"isThere = false;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:146"$146$"}else{"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:147"$147$"if(c.getCount()>0){"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:148"$148$"isThere = true;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:149"$149$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:150"$150$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:151"$151$"return isThere;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:152"$152$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:153"$153$"public ArrayList<Country> getCountryData(){"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:154"$154$"country_obj = new ArrayList<Country>();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:155"$155$"Cursor c = null;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:156"$156$"String query = ""select * from country"";"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:157"$157$"c = myDataBase.rawQuery(query,null);"$"count"$1$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:158"$158$"c.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:159"$159$"if(c.moveToFirst()){"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:160"$160$"do {"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:161"$161$"int cid= c.getInt(c.getColumnIndex(""CountryID""));"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:162"$162$"String CountryN=c.getString(c.getColumnIndex(""CountryName""));"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:163"$163$"int CountryC=c.getInt(c.getColumnIndex(""CountryCode""));"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:164"$164$"String shortC=c.getString(c.getColumnIndex(""shortCode""));"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:165"$165$"int forTopup=c.getInt(c.getColumnIndex(""ForTopUp""));"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:166"$166$"String flagc=c.getString(c.getColumnIndex(""FlagClass""));"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:167"$167$"String cmp_sh_name=c.getString(c.getColumnIndex(""CountryShortName""));"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:168"$168$"Country datalist=new Country(cid,CountryN,CountryC,shortC,forTopup,flagc,cmp_sh_name);"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:169"$169$"country_obj.add(datalist);"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:170"$170$"}while (c.moveToNext());"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:171"$171$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:172"$172$"c.close();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:173"$173$"return country_obj;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:174"$174$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:175"$175$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:176"$176$"public void onCreate(SQLiteDatabase db) {"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:177"$177$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:178"$178$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:179"$179$"public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:180"$180$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:181"$181$"// All the methods for fetching specific data from local Database"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseWrapper.java:182"$182$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseWrapper.java"
"flawed\DatabaseOpenHelper.java:1"$1$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:2"$2$"* Copyright (C) 2014 wak"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:3"$3$"*"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:4"$4$"* Licensed under the Apache License, Version 2.0 (the ""License"");"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:5"$5$"* you may not use this file except in compliance with the License."$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:6"$6$"* You may obtain a copy of the License at"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:7"$7$"*"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:8"$8$"*    http://www.apache.org/licenses/LICENSE-2.0"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:9"$9$"*"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:10"$10$"* Unless required by applicable law or agreed to in writing, software"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:11"$11$"* distributed under the License is distributed on an ""AS IS"" BASIS,"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:12"$12$"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:13"$13$"* See the License for the specific language governing permissions and"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:14"$14$"* limitations under the License."$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:15"$15$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:16"$16$"package com.github.wakhub.monodict.db;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:17"$17$"import android.content.Context;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:18"$18$"import android.database.Cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:19"$19$"import android.database.sqlite.SQLiteDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:20"$20$"import android.util.Log;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:21"$21$"import com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:22"$22$"import com.j256.ormlite.dao.Dao;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:23"$23$"import com.j256.ormlite.support.ConnectionSource;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:24"$24$"import com.j256.ormlite.table.TableUtils;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:25"$25$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:26"$26$"import java.util.ArrayList;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:27"$27$"import java.util.List;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:28"$28$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:29"$29$"* Created by wak on 5/17/14."$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:30"$30$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:31"$31$"public class DatabaseOpenHelper extends OrmLiteSqliteOpenHelper {"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:32"$32$"private static final String TAG = DatabaseOpenHelper.class.getSimpleName();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:33"$33$"private static final String DATABASE_NAME = ""data.db"";"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:34"$34$"private static final int DATABASE_VERSION = 1;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:35"$35$"public DatabaseOpenHelper(Context context) {"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:36"$36$"super(context, DATABASE_NAME, null, DATABASE_VERSION);"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:37"$37$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:38"$38$"private List<String> getTableNames(SQLiteDatabase database) {"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:39"$39$"List<String> tableNames = new ArrayList<String>();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:40"$40$"Cursor cursor = database.rawQuery(""SELECT DISTINCT tbl_name FROM sqlite_master"", null);"$"count"$1$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:41"$41$"if (cursor == null) {"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:42"$42$"return tableNames;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:43"$43$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:44"$44$"if (cursor.getCount() < 1) {"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:45"$45$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:46"$46$"return tableNames;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:47"$47$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:48"$48$"cursor.moveToFirst();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:49"$49$"for (int i = 0; i < cursor.getCount(); i++) {"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:50"$50$"tableNames.add(cursor.getString(0));"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:51"$51$"cursor.moveToNext();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:52"$52$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:53"$53$"cursor.close();"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:54"$54$"return tableNames;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:55"$55$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:56"$56$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:57"$57$"public void onCreate(SQLiteDatabase database, ConnectionSource connectionSource) {"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:58"$58$"Log.d(TAG, ""onCreate"");"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:59"$59$"List<String> tableNames = getTableNames(database);"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:60"$60$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:61"$61$"if (!tableNames.contains(""bookmark"")) {"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:62"$62$"TableUtils.createTableIfNotExists(connectionSource, Bookmark.class);"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:63"$63$"Bookmark.initData((Dao<Bookmark, Long>) getDao(Bookmark.class));"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:64"$64$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:65"$65$"if (!tableNames.contains(""card"")) {"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:66"$66$"TableUtils.createTableIfNotExists(connectionSource, Card.class);"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:67"$67$"Card.initData((Dao<Card, Long>) getDao(Card.class));"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:68"$68$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:69"$69$"} catch (SQLException e) {"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:70"$70$"Log.d(TAG, ""Failed to create tables"", e);"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:71"$71$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:72"$72$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:73"$73$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:74"$74$"* http://www.greenmoonsoftware.com/2012/02/sqlite-schema-migration-in-android/"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:75"$75$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:76"$76$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:77"$77$"public void onUpgrade(SQLiteDatabase database, ConnectionSource connectionSource, int oldVersion, int newVersion) {"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:78"$78$"Log.d(TAG, String.format(""onUpgrade: %d => %d"", oldVersion, newVersion));"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:79"$79$"if (REVISIONS.length < 1) {"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:80"$80$"return;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:81"$81$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:82"$82$"for (int i = oldVersion; i < newVersion; i++) {"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:83"$83$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:84"$84$"Revision revision = REVISIONS[i - 1];"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:85"$85$"revision.execute(this, connectionSource);"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:86"$86$"} catch (Exception e) {"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:87"$87$"Log.d(TAG, ""Version up error"", e);"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:88"$88$"throw new RuntimeException(e);"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:89"$89$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:90"$90$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:91"$91$"onCreate(database, connectionSource);"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:92"$92$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:93"$93$"private static interface Revision {"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:94"$94$"public void execute(DatabaseOpenHelper openHelper, ConnectionSource connectionSource)"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:95"$95$"throws SQLException;"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:96"$96$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:97"$97$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:98"$98$"* Don't include ""CREATE TABLE"" here"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:99"$99$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:100"$100$"private static final Revision[] REVISIONS = new Revision[]{"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:101"$101$"// Example"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:102"$102$"//            new Revision() {"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:103"$103$"//                @Override"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:104"$104$"//                public void execute(DatabaseOpenHelper openHelper, ConnectionSource connectionSource)"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:105"$105$"//                        throws SQLException {"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:106"$106$"//                    openHelper.getDao(Card.class).executeRaw(String.format("$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:107"$107$"//                            ""ALTER TABLE card ADD COLUMN %s VARCHAR"","$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:108"$108$"//                            Card.Column.DICTIONARY));"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:109"$109$"//                }"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:110"$110$"//            }"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:111"$111$"};"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\DatabaseOpenHelper.java:112"$112$"}"$"ignore"$0$"..\sql-dataset\test\flawed\DatabaseOpenHelper.java"
"flawed\WeatherDbHelper.java:1"$1$"package nodza.com.sunshine.app.data;"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:2"$2$"import android.content.Context;"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:3"$3$"import android.database.sqlite.SQLiteDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:4"$4$"import android.database.sqlite.SQLiteOpenHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:5"$5$"import nodza.com.sunshine.app.data.WeatherContract.LocationEntry;"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:6"$6$"import nodza.com.sunshine.app.data.WeatherContract.WeatherEntry;"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:7"$7$"import java.sql.SQLClientInfoException;"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:8"$8$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:9"$9$"* Created by noelh on 7/26/14."$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:10"$10$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:11"$11$"public class WeatherDbHelper extends SQLiteOpenHelper {"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:12"$12$"// If you change the database schema, you must increment the database version."$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:13"$13$"private static final int DATABASE_VERSION = 1;"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:14"$14$"public static final String DATABASE_NAME = ""weather.db"";"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:15"$15$"public WeatherDbHelper(Context context) {"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:16"$16$"super(context, DATABASE_NAME, null, DATABASE_VERSION);"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:17"$17$"}"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:18"$18$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:19"$19$"public void onCreate(SQLiteDatabase sqLiteDatabase) {"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:20"$20$"// Create a table to hold locations.  A location consists of the string supplied in the"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:21"$21$"// location setting, the city name, and the latitude and longitude"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:22"$22$"final String SQL_CREATE_LOCATION_TABLE = ""CREATE TABLE "" + LocationEntry.TABLE_NAME + "" ("" +"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:23"$23$"LocationEntry._ID + "" INTEGER PRIMARY KEY,"" +"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:24"$24$"LocationEntry.COLUMN_LOCATION_SETTING + "" TEXT UNIQUE NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:25"$25$"LocationEntry.COLUMN_CITY_NAME + "" TEXT NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:26"$26$"LocationEntry.COLUMN_COORD_LAT + "" REAL NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:27"$27$"LocationEntry.COLUMN_COORD_LONG + "" REAL NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:28"$28$"""UNIQUE ("" + LocationEntry.COLUMN_LOCATION_SETTING +"") ON CONFLICT IGNORE""+"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:29"$29$""" );"";"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:30"$30$"final String SQL_CREATE_WEATHER_TABLE = ""CREATE TABLE "" + WeatherEntry.TABLE_NAME + "" ("" +"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:31"$31$"// Why AutoIncrement here, and not above?"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:32"$32$"// Unique keys will be auto-generated in either case.  But for weather"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:33"$33$"// forecasting, it's reasonable to assume the user will want information"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:34"$34$"// for a certain date and all dates *following*, so the forecast data"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:35"$35$"// should be sorted accordingly."$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:36"$36$"WeatherEntry._ID + "" INTEGER PRIMARY KEY AUTOINCREMENT,"" +"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:37"$37$"// the ID of the location entry associated with this weather data"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:38"$38$"WeatherEntry.COLUMN_LOC_KEY + "" INTEGER NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:39"$39$"WeatherEntry.COLUMN_DATETEXT + "" TEXT NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:40"$40$"WeatherEntry.COLUMN_SHORT_DESC + "" TEXT NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:41"$41$"WeatherEntry.COLUMN_WEATHER_ID + "" INTEGER NOT NULL,"" +"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:42"$42$"WeatherEntry.COLUMN_MIN_TEMP + "" REAL NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:43"$43$"WeatherEntry.COLUMN_MAX_TEMP + "" REAL NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:44"$44$"WeatherEntry.COLUMN_HUMIDITY + "" REAL NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:45"$45$"WeatherEntry.COLUMN_PRESSURE + "" REAL NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:46"$46$"WeatherEntry.COLUMN_WIND_SPEED + "" REAL NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:47"$47$"WeatherEntry.COLUMN_DEGREES + "" REAL NOT NULL, "" +"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:48"$48$"// Set up the location column as a foreign key to location table."$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:49"$49$""" FOREIGN KEY ("" + WeatherEntry.COLUMN_LOC_KEY + "") REFERENCES "" +"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:50"$50$"LocationEntry.TABLE_NAME + "" ("" + LocationEntry._ID + ""), "" +"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:51"$51$"// To assure the application have just one weather entry per day"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:52"$52$"// per location, it's created a UNIQUE constraint with REPLACE strategy"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:53"$53$""" UNIQUE ("" + WeatherEntry.COLUMN_DATETEXT + "", "" +"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:54"$54$"WeatherEntry.COLUMN_LOC_KEY + "") ON CONFLICT REPLACE);"";"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:55"$55$"sqLiteDatabase.execSQL(SQL_CREATE_LOCATION_TABLE);"$"count"$1$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:56"$56$"sqLiteDatabase.execSQL(SQL_CREATE_WEATHER_TABLE);"$"count"$1$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:57"$57$"}"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:58"$58$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:59"$59$"public void onUpgrade(SQLiteDatabase sqLiteDatabase, int oldVersion, int newVersion) {"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:60"$60$"// This database is only a cache for online data, so its upgrade policy is"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:61"$61$"// to simply to discard the data and start over"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:62"$62$"// Note that this only fires if you change the version number for your database."$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:63"$63$"// It does NOT depend on the version number for your application."$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:64"$64$"// If you want to update the schema without wiping data, commenting out the next 2 lines"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:65"$65$"// should be your top priority before modifying this method."$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:66"$66$"sqLiteDatabase.execSQL(""DROP TABLE IF EXISTS "" + LocationEntry.TABLE_NAME);"$"count"$1$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:67"$67$"sqLiteDatabase.execSQL(""DROP TABLE IF EXISTS "" + WeatherEntry.TABLE_NAME);"$"count"$1$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:68"$68$"onCreate(sqLiteDatabase);"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:69"$69$"}"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\WeatherDbHelper.java:70"$70$"}"$"ignore"$0$"..\sql-dataset\test\flawed\WeatherDbHelper.java"
"flawed\GroceriesProvider.java:1"$1$"package com.example.fadzlirazali.grocerylistapp;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:2"$2$"import android.content.ContentProvider;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:3"$3$"import android.content.ContentUris;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:4"$4$"import android.content.ContentValues;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:5"$5$"import android.content.Context;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:6"$6$"import android.content.UriMatcher;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:7"$7$"import android.database.Cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:8"$8$"import android.database.sqlite.SQLiteDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:9"$9$"import android.database.sqlite.SQLiteOpenHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:10"$10$"import android.database.sqlite.SQLiteQueryBuilder;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:11"$11$"import android.net.Uri;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:12"$12$"import android.text.TextUtils;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:13"$13$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:14"$14$"import java.util.HashMap;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:15"$15$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:16"$16$"* Created by FadzliRazali on 1/12/15 based on Tutorialpoint.com"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:17"$17$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:18"$18$"public class GroceriesProvider extends ContentProvider {"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:19"$19$"/*PROPERTIES DECLARATIONS*/"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:20"$20$"static final String PROVIDER_NAME= ""com.example.provider.Kitchen"";"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:21"$21$"static final String URL=""content://"" + PROVIDER_NAME + ""/groceries"";"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:22"$22$"static final Uri CONTENT_URI = Uri.parse(URL);"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:23"$23$"/*property item*/"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:24"$24$"static final String _ID=""_id"";"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:25"$25$"static final String NAME=""name"";"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:26"$26$"static final String GROCERY=""grocery"";"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:27"$27$"private static HashMap<String, String> GROCERIES_PROJECTION_MAP;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:28"$28$"static final int GROCERIES=1;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:29"$29$"static final int GROCERY_ID=2;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:30"$30$"/*URI untuk dptkan grocery by item id */"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:31"$31$"static final UriMatcher uriMatcher;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:32"$32$"static {"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:33"$33$"uriMatcher = new UriMatcher (UriMatcher.NO_MATCH);"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:34"$34$"/*tambah uri tuk 1 grocery sahaja*/"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:35"$35$"uriMatcher.addURI(PROVIDER_NAME, ""groceries"", GROCERIES);"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:36"$36$"uriMatcher.addURI(PROVIDER_NAME,""groceries/#"",GROCERY_ID);"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:37"$37$"}"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:38"$38$"/*"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:39"$39$"* Database specific constant declarations"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:40"$40$"*"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:41"$41$"* */"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:42"$42$"private SQLiteDatabase db;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:43"$43$"static final String DATABASE_NAME=""Kitchen"";"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:44"$44$"static final String GROCERIES_TABLE_NAME=""groceries"";"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:45"$45$"static final int DATABASE_VERSION=1;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:46"$46$"static final String CREATE_DB_TABLE="$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:47"$47$"""CREATE TABLE "" + GROCERIES_TABLE_NAME +"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:48"$48$""" (_id INTEGER PRIMARY KEY AUTOINCREMENT, ""+"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:49"$49$""" name TEXT NOT NULL,""+"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:50"$50$""" grocery TEXT NOT NULL);"";"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:51"$51$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:52"$52$"* Helper class that actually creates and manages"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:53"$53$"* the provider's underlying data repository."$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:54"$54$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:55"$55$"private static class DatabaseHelper extends SQLiteOpenHelper{"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:56"$56$"DatabaseHelper(Context context){"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:57"$57$"super(context,DATABASE_NAME,null,DATABASE_VERSION);"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:58"$58$"}"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:59"$59$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:60"$60$"public void onCreate(SQLiteDatabase db){"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:61"$61$"/*sql the SQL statement to be executed*/"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:62"$62$"db.execSQL(CREATE_DB_TABLE);"$"count"$1$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:63"$63$"}"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:64"$64$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:65"$65$"/*database needs to be upgraded if has an old one*/"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:66"$66$"public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion){"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:67"$67$"db.execSQL(""DROP TABLE IF EXISTS ""+ GROCERIES_TABLE_NAME);"$"count"$1$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:68"$68$"onCreate(db);"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:69"$69$"}"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:70"$70$"}"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:71"$71$"/*First activity load*/"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:72"$72$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:73"$73$"public boolean onCreate() {"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:74"$74$"/*Context allows access to application-specific resources and classes*/"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:75"$75$"Context context = getContext();"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:76"$76$"/* creates and manages the provider's underlying data repository*/"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:77"$77$"DatabaseHelper dbHelper = new DatabaseHelper(context);"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:78"$78$"/*"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:79"$79$"* Create a write able db which will trigger its creation if doesnt exits"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:80"$80$"* */"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:81"$81$"db=dbHelper.getWritableDatabase();"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:82"$82$"return (db == null)? false:true;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:83"$83$"}"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:84"$84$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:85"$85$"public Uri insert(Uri uri, ContentValues values) {"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:86"$86$"/*"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:87"$87$"* Add a new item record"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:88"$88$"*"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:89"$89$"* insert(table to insert the row into, optional,contains the initial column values)"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:90"$90$"* */"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:91"$91$"long rowID = db.insert(GROCERIES_TABLE_NAME,"""",values);"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:92"$92$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:93"$93$"/*"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:94"$94$"* if record is added"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:95"$95$"* */"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:96"$96$"if(rowID>0){"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:97"$97$"Uri _uri = ContentUris.withAppendedId(CONTENT_URI, rowID);"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:98"$98$"getContext().getContentResolver().notifyChange(_uri, null);"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:99"$99$"return _uri;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:100"$100$"}"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:101"$101$"throw new SQLException(""Failed to add a record into ""+ uri);"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:102"$102$"} catch (SQLException e) {"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:103"$103$"e.printStackTrace();"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:104"$104$"}"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:105"$105$"return null;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:106"$106$"}"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:107"$107$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:108"$108$"public Cursor query(Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) {"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:109"$109$"SQLiteQueryBuilder qb = new SQLiteQueryBuilder();"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:110"$110$"qb.setTables(GROCERIES_TABLE_NAME);"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:111"$111$"switch (uriMatcher.match(uri)){"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:112"$112$"case GROCERIES:"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:113"$113$"qb.setProjectionMap(GROCERIES_PROJECTION_MAP);"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:114"$114$"break;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:115"$115$"case GROCERY_ID:"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:116"$116$"qb.appendWhere(_ID + ""="" + uri.getPathSegments().get(1));"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:117"$117$"break;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:118"$118$"default:"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:119"$119$"throw new IllegalArgumentException(""Unknown URI""+ uri);"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:120"$120$"}"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:121"$121$"if(sortOrder==null || sortOrder==""""){"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:122"$122$"/*"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:123"$123$"* By default sort on grocery name"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:124"$124$"* */"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:125"$125$"sortOrder=NAME;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:126"$126$"}"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:127"$127$"Cursor c =qb.query(db,projection, selection,selectionArgs, null,null,sortOrder);"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:128"$128$"/*"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:129"$129$"* register to watch a content URI for changes"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:130"$130$"* */"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:131"$131$"c.setNotificationUri(getContext().getContentResolver(), uri);"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:132"$132$"return c;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:133"$133$"}"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:134"$134$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:135"$135$"public int delete(Uri uri, String selection, String[] selectionArgs) {"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:136"$136$"int count =0;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:137"$137$"switch (uriMatcher.match(uri)){"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:138"$138$"case GROCERIES:"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:139"$139$"count = db.delete(GROCERIES_TABLE_NAME, selection,selectionArgs);"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:140"$140$"break;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:141"$141$"case GROCERY_ID:"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:142"$142$"String id = uri.getPathSegments().get(1);"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:143"$143$"count=db.delete(GROCERIES_TABLE_NAME, _ID + "" = ""+ id + (!TextUtils.isEmpty(selection)?"" AND (""+"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:144"$144$"selection+ ')': """"),selectionArgs);"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:145"$145$"break;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:146"$146$"default:"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:147"$147$"throw new IllegalArgumentException(""Unknown URI "" +uri);"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:148"$148$"}"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:149"$149$"getContext().getContentResolver().notifyChange(uri,null);"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:150"$150$"return count;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:151"$151$"}"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:152"$152$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:153"$153$"public int update(Uri uri, ContentValues values, String selection, String[] selectionArgs) {"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:154"$154$"int count =0;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:155"$155$"switch (uriMatcher.match(uri)){"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:156"$156$"case GROCERIES:"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:157"$157$"count=db.update(GROCERIES_TABLE_NAME,values,_ID + "" = "" + uri.getPathSegments().get(1)+"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:158"$158$"(!TextUtils.isEmpty(selection)?"" AND ("" +"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:159"$159$"selection+ ')':""""), selectionArgs);"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:160"$160$"break;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:161"$161$"default:"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:162"$162$"throw new IllegalArgumentException(""Unkown URI ""+uri);"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:163"$163$"}"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:164"$164$"getContext().getContentResolver().notifyChange(uri,null);"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:165"$165$"return count;"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:166"$166$"}"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:167"$167$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:168"$168$"public String getType(Uri uri) {"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:169"$169$"switch (uriMatcher.match(uri)){"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:170"$170$"/*"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:171"$171$"* Get all groceries record"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:172"$172$"*"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:173"$173$"* */"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:174"$174$"case GROCERIES:"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:175"$175$"return ""vnd.android.cursor.dir/vnd.example.groceries"";"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:176"$176$"/*"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:177"$177$"* Get a particular grocery"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:178"$178$"* */"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:179"$179$"case GROCERY_ID:"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:180"$180$"return ""vnd.android.cursor.item/vnd.example.groceries"";"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:181"$181$"default:"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:182"$182$"throw new IllegalArgumentException(""Unsupported URI: ""+uri);"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:183"$183$"}"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:184"$184$"}"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\GroceriesProvider.java:185"$185$"}"$"ignore"$0$"..\sql-dataset\test\flawed\GroceriesProvider.java"
"flawed\MemeSQLiteHelper.java:1"$1$"package es.tessier.mememaker.database;"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:2"$2$"import android.content.Context;"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:3"$3$"import android.database.sqlite.SQLiteDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:4"$4$"import android.database.sqlite.SQLiteOpenHelper;"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:5"$5$"import android.util.Log;"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:6"$6$"import java.sql.SQLException;"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:7"$7$"/**"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:8"$8$"* Created by Evan Anger on 8/17/14."$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:9"$9$"*/"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:10"$10$"public class MemeSQLiteHelper extends SQLiteOpenHelper {"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:11"$11$"static final String DATABASE_NAME = ""memes.db"";"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:12"$12$"static final int DATABASE_VERSION = 3;"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:13"$13$"//Meme Table functionality"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:14"$14$"static final String MEMES_TABLES=""MEMES"";"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:15"$15$"static final String COLUM_MEMES_ASSET=""asset"";"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:16"$16$"static final String COLUM_MEMES_NAME=""name"";"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:17"$17$"static final String COLUM_MEMES_ID=""_id"";"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:18"$18$"static final String COLUM_MEMES_DATE=""create_date"";"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:19"$19$"static final String ALTER_ADD_CREATE_DATE=""ALTER TABLE ""+MEMES_TABLES+"" ADD COLUMN ""+COLUM_MEMES_DATE+"" INTEGER;"";"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:20"$20$"static final String CREATE_TABLE_MEMES=""CREATE TABLE ""+MEMES_TABLES+"" ( ""+"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:21"$21$"COLUM_MEMES_ID+"" INTEGER PRIMARY KEY AUTOINCREMENT, ""+"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:22"$22$"COLUM_MEMES_ASSET+"" TEXT NOT NULL,""+"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:23"$23$"COLUM_MEMES_NAME+"" TEXT NOT NULL);"";"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:24"$24$"//Meme Table Annotations functionality"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:25"$25$"static final String ANNOTATIONS_TABLES=""ANNOTATIONS"";"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:26"$26$"static final String COLUM_ANNOTATIONS_X=""x"";"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:27"$27$"static final String COLUM_ANNOTATIONS_Y=""y"";"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:28"$28$"static final String COLUM_ANNOTATIONS_COLOR=""color"";"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:29"$29$"static final String COLUM_ANNOTATIONS_MEME_ID=""meme_id"";"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:30"$30$"static final String COLUM_ANNOTATIONS_TITLE=""title"";"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:31"$31$"static final String COLUM_ANNOTATIONS_ID=""_id"";"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:32"$32$"static final String CREATE_TABLE_ANNOTATIONS=""CREATE TABLE ""+ANNOTATIONS_TABLES+"" ( ""+"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:33"$33$"COLUM_ANNOTATIONS_ID+"" INTEGER PRIMARY KEY AUTOINCREMENT, ""+"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:34"$34$"COLUM_ANNOTATIONS_TITLE+"" TEXT NOT NULL,""+"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:35"$35$"COLUM_ANNOTATIONS_MEME_ID+ "" TEXT NOT NULL,""+"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:36"$36$"COLUM_ANNOTATIONS_X+"" INTEGER NOT NULL,""+"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:37"$37$"COLUM_ANNOTATIONS_Y+"" INTEGER NOT NULL,""+"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:38"$38$"COLUM_ANNOTATIONS_COLOR+"" INTEGER NOT NULL, ""+"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:39"$39$"""FOREIGN KEY(""+COLUM_ANNOTATIONS_MEME_ID+"") REFERENCES MEMES(_id));"""$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:40"$40$";"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:41"$41$"private static final String TAG =MemeSQLiteHelper.class.getName();"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:42"$42$"public MemeSQLiteHelper(Context context){"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:43"$43$"super(context,DATABASE_NAME,null,DATABASE_VERSION);"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:44"$44$"}"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:45"$45$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:46"$46$"public void onCreate(SQLiteDatabase db) {"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:47"$47$"db.execSQL(CREATE_TABLE_MEMES);"$"count"$1$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:48"$48$"db.execSQL(CREATE_TABLE_ANNOTATIONS);"$"count"$1$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:49"$49$"Log.i(TAG,CREATE_TABLE_MEMES);"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:50"$50$"Log.i(TAG,CREATE_TABLE_ANNOTATIONS);"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:51"$51$"}"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:52"$52$"@Override"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:53"$53$"public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:54"$54$"switch(oldVersion){"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:55"$55$"case 2:db.execSQL(ALTER_ADD_CREATE_DATE);"$"count"$1$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:56"$56$"}"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:57"$57$"}"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:58"$58$"//Meme Table functionality"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:59"$59$"//Meme Table Annotations functionality"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"flawed\MemeSQLiteHelper.java:60"$60$"}"$"ignore"$0$"..\sql-dataset\test\flawed\MemeSQLiteHelper.java"
"secured\AbstractPGSQLDataLoaderService.java:1"$1$"package org.sahsu.rif.dataloader.datastorage.pg;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:2"$2$"import java.io.File;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:3"$3$"import java.io.FileWriter;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:4"$4$"import java.io.IOException;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:5"$5$"import java.io.Writer;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:6"$6$"import java.nio.file.Files;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:7"$7$"import java.nio.file.Path;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:8"$8$"import java.nio.file.StandardCopyOption;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:9"$9$"import java.sql.Connection;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:10"$10$"import java.util.ArrayList;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:11"$11$"import org.apache.commons.io.FileUtils;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:12"$12$"import org.sahsu.rif.dataloader.concepts.DataLoaderServiceAPI;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:13"$13$"import org.sahsu.rif.dataloader.concepts.DataLoaderToolConfiguration;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:14"$14$"import org.sahsu.rif.dataloader.concepts.DataLoadingResultTheme;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:15"$15$"import org.sahsu.rif.dataloader.concepts.DataSetConfiguration;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:16"$16$"import org.sahsu.rif.dataloader.concepts.DataSetFieldConfiguration;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:17"$17$"import org.sahsu.rif.dataloader.concepts.DatabaseConnectionsConfiguration;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:18"$18$"import org.sahsu.rif.dataloader.concepts.RIFSchemaAreaPropertyManager;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:19"$19$"import org.sahsu.rif.dataloader.concepts.ShapeFile;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:20"$20$"import org.sahsu.rif.dataloader.concepts.WorkflowValidator;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:21"$21$"import org.sahsu.rif.dataloader.system.RIFDataLoaderToolError;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:22"$22$"import org.sahsu.rif.dataloader.system.RIFDataLoaderToolMessages;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:23"$23$"import org.sahsu.rif.generic.concepts.RIFResultTable;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:24"$24$"import org.sahsu.rif.generic.concepts.User;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:25"$25$"import org.sahsu.rif.generic.system.RIFServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:26"$26$"import org.sahsu.rif.generic.util.FieldValidationUtility;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:27"$27$"import org.sahsu.rif.generic.util.RIFLogger;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:28"$28$"/**"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:29"$29$"* Main implementation of the {@link rifDataLoaderTool.dataStorageLayer.pg.AbstractPGSQLDataLoaderService}."$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:30"$30$"* Almost every method in this class has the following common steps:"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:31"$31$"* <ol>"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:32"$32$"* <li>"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:33"$33$"* safely copy parameter values so that the middleware is not vulnerable to changes the client makes"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:34"$34$"* to them while the method is executing."$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:35"$35$"* </li>"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:36"$36$"* <li>"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:37"$37$"* if the rifManager making the request has been black listed because of a previous security incident, return"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:38"$38$"* as soon as possible."$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:39"$39$"* </li>"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:40"$40$"* <li>"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:41"$41$"* check for any null parameter values"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:42"$42$"* </li>"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:43"$43$"* <li>"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:44"$44$"* check for any security violations that could occur, either in the rifManager parameter object,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:45"$45$"* or any text field value of any business object. If any security violation is detected, log it and"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:46"$46$"* black list the rifManager until further notice."$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:47"$47$"* </li>"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:48"$48$"* <li>"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:49"$49$"* audit the attempt to perform the method operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:50"$50$"* </li>"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:51"$51$"* <li>"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:52"$52$"* obtain a pooled database connection"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:53"$53$"* <li>"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:54"$54$"* <li>"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:55"$55$"* call a manager class, which is either contains the needed SQL queries or delegates to vendor-specific"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:56"$56$"* SQL code generation classes."$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:57"$57$"* </li>"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:58"$58$"* <li>"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:59"$59$"* reclaim the pooled database connection"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:60"$60$"* </li>"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:61"$61$"* <li>"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:62"$62$"* log any failed attempt"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:63"$63$"* </li>"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:64"$64$"* </ol>"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:65"$65$"*"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:66"$66$"* <hr>"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:67"$67$"* Copyright 2017 Imperial College London, developed by the Small Area"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:68"$68$"* Health Statistics Unit. "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:69"$69$"*"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:70"$70$"* <pre> "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:71"$71$"* This file is part of the Rapid Inquiry Facility (RIF) project."$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:72"$72$"* RIF is free software: you can redistribute it and/or modify"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:73"$73$"* it under the terms of the GNU Lesser General Public License as published by"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:74"$74$"* the Free Software Foundation, either version 3 of the License, or"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:75"$75$"* (at your option) any later version."$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:76"$76$"* RIF is distributed in the hope that it will be useful,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:77"$77$"* but WITHOUT ANY WARRANTY; without even the implied warranty of"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:78"$78$"* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:79"$79$"* GNU Lesser General Public License for more details."$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:80"$80$"*"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:81"$81$"* You should have received a copy of the GNU Lesser General Public License"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:82"$82$"* along with RIF.  If not, see <http://www.gnu.org/licenses/>."$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:83"$83$"* </pre>"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:84"$84$"*"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:85"$85$"* <hr>"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:86"$86$"* Kevin Garwood"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:87"$87$"* @author kgarwood"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:88"$88$"*/"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:89"$89$"/*"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:90"$90$"* Code Road Map:"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:91"$91$"* --------------"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:92"$92$"* Code is organised into the following sections.  Wherever possible, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:93"$93$"* methods are classified based on an order of precedence described in "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:94"$94$"* parentheses (..).  For example, if you're trying to find a method "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:95"$95$"* 'getName(...)' that is both an interface method and an accessor "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:96"$96$"* method, the order tells you it should appear under interface."$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:97"$97$"* "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:98"$98$"* Order of "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:99"$99$"* Precedence     Section"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:100"$100$"* ==========     ======"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:101"$101$"* (1)            Section Constants"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:102"$102$"* (2)            Section Properties"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:103"$103$"* (3)            Section Construction"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:104"$104$"* (7)            Section Accessors and Mutators"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:105"$105$"* (6)            Section Errors and Validation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:106"$106$"* (5)            Section Interfaces"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:107"$107$"* (4)            Section Override"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:108"$108$"*"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:109"$109$"*/"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:110"$110$"abstract class AbstractPGSQLDataLoaderService"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:111"$111$"implements DataLoaderServiceAPI {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:112"$112$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:113"$113$"// Section Constants"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:114"$114$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:115"$115$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:116"$116$"// Section Properties"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:117"$117$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:118"$118$"private DataLoaderToolConfiguration dataLoaderToolConfiguration;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:119"$119$"private PGSQLConnectionManager sqlConnectionManager;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:120"$120$"private PGSQLDatabaseSchemaInformationManager databaseSchemaInformationManager;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:121"$121$"private PGSQLDataSetManager dataSetManager;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:122"$122$"private PGSQLExtractWorkflowManager extractWorkflowManager;	"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:123"$123$"private PGSQLChangeAuditManager changeAuditManager;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:124"$124$"private PGSQLCleanWorkflowManager cleanWorkflowManager;	"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:125"$125$"private PGSQLCombineWorkflowManager combineWorkflowManager;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:126"$126$"private PGSQLSplitWorkflowManager splitWorkflowManager;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:127"$127$"private PGSQLConvertWorkflowManager convertWorkflowManager;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:128"$128$"private PGSQLOptimiseWorkflowManager optimiseWorkflowManager;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:129"$129$"private PGSQLCheckWorkflowManager checkWorkflowManager;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:130"$130$"private PGSQLReportManager reportManager;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:131"$131$"private PGSQLPublishWorkflowManager publishWorkflowManager;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:132"$132$"private ArrayList<DataSetConfiguration> dataSetConfigurations;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:133"$133$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:134"$134$"// Section Construction"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:135"$135$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:136"$136$"public AbstractPGSQLDataLoaderService() {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:137"$137$"dataSetConfigurations "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:138"$138$"= new ArrayList<DataSetConfiguration>();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:139"$139$"databaseSchemaInformationManager"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:140"$140$"= new PGSQLDatabaseSchemaInformationManager();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:141"$141$"dataSetManager = new PGSQLDataSetManager();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:142"$142$"extractWorkflowManager"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:143"$143$"= new PGSQLExtractWorkflowManager("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:144"$144$"dataSetManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:145"$145$"changeAuditManager"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:146"$146$"= new PGSQLChangeAuditManager();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:147"$147$"cleanWorkflowManager"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:148"$148$"= new PGSQLCleanWorkflowManager("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:149"$149$"dataSetManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:150"$150$"changeAuditManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:151"$151$"convertWorkflowManager"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:152"$152$"= new PGSQLConvertWorkflowManager();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:153"$153$"combineWorkflowManager"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:154"$154$"= new PGSQLCombineWorkflowManager();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:155"$155$"splitWorkflowManager"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:156"$156$"= new PGSQLSplitWorkflowManager();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:157"$157$"optimiseWorkflowManager"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:158"$158$"= new PGSQLOptimiseWorkflowManager();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:159"$159$"checkWorkflowManager"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:160"$160$"= new PGSQLCheckWorkflowManager("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:161"$161$"optimiseWorkflowManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:162"$162$"publishWorkflowManager"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:163"$163$"= new PGSQLPublishWorkflowManager();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:164"$164$"reportManager"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:165"$165$"= new PGSQLReportManager();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:166"$166$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:167"$167$"public void initialiseService("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:168"$168$"final DatabaseConnectionsConfiguration dbParameters)"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:169"$169$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:170"$170$"sqlConnectionManager"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:171"$171$"= new PGSQLConnectionManager("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:172"$172$"dbParameters.getDatabasePasswordFilePath(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:173"$173$"dbParameters.getDatabaseDriverClassName(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:174"$174$"dbParameters.getDatabaseURL());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:175"$175$"sqlConnectionManager.initialiseConnectionQueue();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:176"$176$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:177"$177$"public void shutdownService() "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:178"$178$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:179"$179$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:180"$180$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:181"$181$"// Section Accessors and Mutators"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:182"$182$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:183"$183$"public void login("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:184"$184$"final String rifManagerID,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:185"$185$"final String password)"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:186"$186$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:187"$187$"sqlConnectionManager.login("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:188"$188$"rifManagerID, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:189"$189$"password);		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:190"$190$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:191"$191$"public void logout("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:192"$192$"final User rifManager) "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:193"$193$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:194"$194$"//sqlConnectionManager.logout(rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:195"$195$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:196"$196$"public void shutdown() throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:197"$197$"sqlConnectionManager.deregisterAllUsers();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:198"$198$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:199"$199$"protected PGSQLDataSetManager getDataSetManager() {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:200"$200$"return dataSetManager;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:201"$201$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:202"$202$"protected PGSQLChangeAuditManager getChangeAuditManager() {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:203"$203$"return changeAuditManager;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:204"$204$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:205"$205$"protected PGSQLConnectionManager getSQLConnectionManger() {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:206"$206$"return sqlConnectionManager;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:207"$207$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:208"$208$"public ArrayList<DataSetConfiguration> getDataSetConfigurations("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:209"$209$"final User rifManager) "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:210"$210$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:211"$211$"return dataSetConfigurations;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:212"$212$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:213"$213$"public ArrayList<DataSetConfiguration> getDataSetConfigurations("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:214"$214$"final User rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:215"$215$"final String searchPhrase) "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:216"$216$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:217"$217$"return dataSetConfigurations;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:218"$218$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:219"$219$"public boolean dataSetConfigurationExists("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:220"$220$"final User rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:221"$221$"final DataSetConfiguration dataSetConfiguration) "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:222"$222$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:223"$223$"return false;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:224"$224$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:225"$225$"public void deleteDataSetConfigurations("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:226"$226$"final User rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:227"$227$"final ArrayList<DataSetConfiguration> dataSetConfigurationsToDelete) "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:228"$228$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:229"$229$"for (DataSetConfiguration dataSetConfigurationToDelete : dataSetConfigurationsToDelete) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:230"$230$"dataSetConfigurations.remove(dataSetConfigurationToDelete);			"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:231"$231$"}		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:232"$232$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:233"$233$"public void registerDataSetConfiguration("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:234"$234$"final User _rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:235"$235$"final Writer logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:236"$236$"final DataSetConfiguration _dataSetConfiguration)"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:237"$237$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:238"$238$"//Defensively copy parameters and guard against blocked rifManagers"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:239"$239$"User rifManager = User.createCopy(_rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:240"$240$"if (sqlConnectionManager.isUserBlocked(rifManager) == true) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:241"$241$"return;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:242"$242$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:243"$243$"DataSetConfiguration dataSetConfiguration"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:244"$244$"= DataSetConfiguration.createCopy(_dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:245"$245$"try {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:246"$246$"//Check for empty parameters"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:247"$247$"FieldValidationUtility fieldValidationUtility"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:248"$248$"= new FieldValidationUtility();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:249"$249$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:250"$250$"""registerDataSetConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:251"$251$"""rifManager"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:252"$252$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:253"$253$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:254"$254$"""registerDataSetConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:255"$255$"""dataSetConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:256"$256$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:257"$257$"//sortingOrder can be null, it just means that the"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:258"$258$"//order will be ascending lower limit"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:259"$259$"//Check for security violations"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:260"$260$"validateUser(rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:261"$261$"dataSetConfiguration.checkSecurityViolations();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:262"$262$"//Audit attempt to do operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:263"$263$"RIFLogger rifLogger = RIFLogger.getLogger();				"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:264"$264$"String auditTrailMessage"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:265"$265$"= RIFDataLoaderToolMessages.getMessage(""logging.registerDataSet"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:266"$266$"rifManager.getUserID(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:267"$267$"rifManager.getIPAddress(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:268"$268$"dataSetConfiguration.getDisplayName());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:269"$269$"rifLogger.info("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:270"$270$"getClass(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:271"$271$"auditTrailMessage);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:272"$272$"//Assign pooled connection"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:273"$273$"Connection connection "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:274"$274$"= sqlConnectionManager.assignPooledWriteConnection(rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:275"$275$"dataSetManager.updateDataSetRegistration("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:276"$276$"connection,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:277"$277$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:278"$278$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:279"$279$"sqlConnectionManager.reclaimPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:280"$280$"rifManager, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:281"$281$"connection);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:282"$282$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:283"$283$"catch(RIFServiceException rifServiceException) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:284"$284$"//Audit failure of operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:285"$285$"logException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:286"$286$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:287"$287$"""registerDataSetConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:288"$288$"rifServiceException);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:289"$289$"}		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:290"$290$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:291"$291$"public void setupConfiguration("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:292"$292$"final User _rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:293"$293$"final File outputDirectory,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:294"$294$"final DataSetConfiguration dataSetConfiguration)"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:295"$295$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:296"$296$"User rifManager = User.createCopy(_rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:297"$297$"if (sqlConnectionManager.isUserBlocked(rifManager) == true) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:298"$298$"return;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:299"$299$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:300"$300$"//Step 1: Create all the directories"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:301"$301$"ensureTemporaryDirectoriesExist("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:302"$302$"rifManager, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:303"$303$"outputDirectory,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:304"$304$"dataSetConfiguration); 		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:305"$305$"//Step 2: Copy original data file"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:306"$306$"try {			"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:307"$307$"String dataSetExportDirectoryPath"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:308"$308$"= generateDataSetExportDirectoryPath("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:309"$309$"outputDirectory,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:310"$310$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:311"$311$"File sourceFile = new File(dataSetConfiguration.getFilePath());		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:312"$312$"String fileName = sourceFile.getName();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:313"$313$"Path sourcePath = sourceFile.toPath();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:314"$314$"StringBuilder destinationFilePath = new StringBuilder();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:315"$315$"destinationFilePath.append(dataSetExportDirectoryPath);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:316"$316$"destinationFilePath.append(File.separator);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:317"$317$"destinationFilePath.append(DataLoadingResultTheme.ARCHIVE_ORIGINAL_DATA.getSubDirectoryName());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:318"$318$"destinationFilePath.append(File.separator);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:319"$319$"destinationFilePath.append(fileName);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:320"$320$"File destinationFile = new File(destinationFilePath.toString());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:321"$321$"Path destinationPath = destinationFile.toPath();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:322"$322$"Files.copy("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:323"$323$"sourcePath, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:324"$324$"destinationPath, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:325"$325$"StandardCopyOption.REPLACE_EXISTING);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:326"$326$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:327"$327$"catch(IOException ioException) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:328"$328$"logException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:329"$329$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:330"$330$"""registerDataSetConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:331"$331$"ioException);			"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:332"$332$"String errorMessage"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:333"$333$"= RIFDataLoaderToolMessages.getMessage("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:334"$334$"""abstractDataLoaderService.error.unableToCopyOriginalData"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:335"$335$"dataSetConfiguration.getName());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:336"$336$"RIFServiceException rifServiceException"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:337"$337$"= new RIFServiceException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:338"$338$"RIFDataLoaderToolError.UNABLE_TO_COPY_ORIGINAL_DATA,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:339"$339$"errorMessage);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:340"$340$"throw rifServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:341"$341$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:342"$342$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:343"$343$"public void generateShapeFileScripts(final ArrayList<ShapeFile> shapeFiles)"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:344"$344$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:345"$345$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:346"$346$"public void addFileToDataSetResults("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:347"$347$"final User _rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:348"$348$"final Writer logWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:349"$349$"final File outputDirectory,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:350"$350$"final File originalFile,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:351"$351$"final DataLoadingResultTheme rifDataLoadingResultTheme,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:352"$352$"final DataSetConfiguration dataSetConfiguration)"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:353"$353$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:354"$354$"//Defensively copy parameters and guard against blocked rifManagers"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:355"$355$"User rifManager = User.createCopy(_rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:356"$356$"if (sqlConnectionManager.isUserBlocked(rifManager) == true) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:357"$357$"return;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:358"$358$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:359"$359$"if (originalFile == null) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:360"$360$"return;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:361"$361$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:362"$362$"if (rifDataLoadingResultTheme == null) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:363"$363$"return;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:364"$364$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:365"$365$"String dataSetExportDirectoryPath"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:366"$366$"= generateDataSetExportDirectoryPath("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:367"$367$"outputDirectory,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:368"$368$"dataSetConfiguration);		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:369"$369$"try {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:370"$370$"StringBuilder auditTrailPath = new StringBuilder();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:371"$371$"auditTrailPath.append(dataSetExportDirectoryPath);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:372"$372$"auditTrailPath.append(File.separator);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:373"$373$"auditTrailPath.append(rifDataLoadingResultTheme.getSubDirectoryName());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:374"$374$"auditTrailPath.append(File.separator);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:375"$375$"auditTrailPath.append(originalFile.getName());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:376"$376$"File copyFile = new File(auditTrailPath.toString());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:377"$377$"FileUtils.copyFile(originalFile, copyFile);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:378"$378$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:379"$379$"catch(IOException ioException) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:380"$380$"String errorMessage"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:381"$381$"= RIFDataLoaderToolMessages.getMessage("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:382"$382$"""abstractDataLoaderService.error.unableToCopyWorkflowFile"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:383"$383$"dataSetConfiguration.getName());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:384"$384$"RIFServiceException rifServiceException"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:385"$385$"= new RIFServiceException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:386"$386$"RIFDataLoaderToolError.UNABLE_TO_INCLUDE_WORKFLOW_IN_RESULTS, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:387"$387$"errorMessage);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:388"$388$"throw rifServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:389"$389$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:390"$390$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:391"$391$"public void extractConfiguration("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:392"$392$"final User _rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:393"$393$"final Writer logFileWriter,	"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:394"$394$"final File outputDirectory,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:395"$395$"final DataSetConfiguration _dataSetConfiguration) "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:396"$396$"throws RIFServiceException,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:397"$397$"RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:398"$398$"//Defensively copy parameters and guard against blocked rifManagers"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:399"$399$"User rifManager = User.createCopy(_rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:400"$400$"if (sqlConnectionManager.isUserBlocked(rifManager) == true) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:401"$401$"return;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:402"$402$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:403"$403$"DataSetConfiguration dataSetConfiguration"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:404"$404$"= DataSetConfiguration.createCopy(_dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:405"$405$"RIFSchemaAreaPropertyManager schemaAreaPropertyManager"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:406"$406$"= new RIFSchemaAreaPropertyManager();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:407"$407$"WorkflowValidator workFlowValidator"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:408"$408$"= new WorkflowValidator(schemaAreaPropertyManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:409"$409$"workFlowValidator.validateLoad(dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:410"$410$"try {			"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:411"$411$"//Check for empty parameters"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:412"$412$"checkCommonParameters("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:413"$413$"""loadConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:414"$414$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:415"$415$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:416"$416$"//Check for security violations"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:417"$417$"validateUser(rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:418"$418$"dataSetConfiguration.checkSecurityViolations();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:419"$419$"//Audit attempt to do operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:420"$420$"RIFLogger rifLogger = RIFLogger.getLogger();				"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:421"$421$"String auditTrailMessage"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:422"$422$"= RIFDataLoaderToolMessages.getMessage(""logging.loadConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:423"$423$"rifManager.getUserID(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:424"$424$"rifManager.getIPAddress(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:425"$425$"dataSetConfiguration.getDisplayName());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:426"$426$"rifLogger.info("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:427"$427$"getClass(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:428"$428$"auditTrailMessage);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:429"$429$"Connection connection "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:430"$430$"= sqlConnectionManager.assignPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:431"$431$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:432"$432$"String dataSetExportDirectoryPath"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:433"$433$"= generateDataSetExportDirectoryPath("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:434"$434$"outputDirectory,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:435"$435$"dataSetConfiguration);		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:436"$436$"extractWorkflowManager.extractConfiguration("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:437"$437$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:438"$438$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:439"$439$"dataSetExportDirectoryPath,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:440"$440$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:441"$441$"sqlConnectionManager.reclaimPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:442"$442$"rifManager, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:443"$443$"connection);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:444"$444$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:445"$445$"catch(RIFServiceException rifServiceException) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:446"$446$"//Audit failure of operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:447"$447$"logException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:448"$448$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:449"$449$"""loadConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:450"$450$"rifServiceException);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:451"$451$"throw rifServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:452"$452$"}		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:453"$453$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:454"$454$"public void addLoadTableData("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:455"$455$"final User _rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:456"$456$"final Writer logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:457"$457$"final DataSetConfiguration _dataSetConfiguration,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:458"$458$"final String[][] tableData)"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:459"$459$"throws RIFServiceException,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:460"$460$"RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:461"$461$"//Defensively copy parameters and guard against blocked rifManagers"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:462"$462$"User rifManager = User.createCopy(_rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:463"$463$"if (sqlConnectionManager.isUserBlocked(rifManager) == true) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:464"$464$"return;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:465"$465$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:466"$466$"DataSetConfiguration dataSetConfiguration"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:467"$467$"= DataSetConfiguration.createCopy(_dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:468"$468$"try {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:469"$469$"//Check for empty parameters"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:470"$470$"FieldValidationUtility fieldValidationUtility"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:471"$471$"= new FieldValidationUtility();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:472"$472$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:473"$473$"""addLoadTableData"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:474"$474$"""rifManager"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:475"$475$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:476"$476$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:477"$477$"""addLoadTableData"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:478"$478$"""dataSetConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:479"$479$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:480"$480$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:481"$481$"""addLoadTableData"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:482"$482$"""tableData"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:483"$483$"tableData);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:484"$484$"//Check for security violations"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:485"$485$"validateUser(rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:486"$486$"dataSetConfiguration.checkSecurityViolations();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:487"$487$"//@TODO: we obviously need something to check the array of Strings"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:488"$488$"//for security violations"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:489"$489$"//checkTableDataForSecurityViolations(tableData)"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:490"$490$"//Audit attempt to do operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:491"$491$"RIFLogger rifLogger = RIFLogger.getLogger();				"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:492"$492$"String auditTrailMessage"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:493"$493$"= RIFDataLoaderToolMessages.getMessage(""logging.addLoadTableData"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:494"$494$"rifManager.getUserID(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:495"$495$"rifManager.getIPAddress(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:496"$496$"dataSetConfiguration.getDisplayName());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:497"$497$"rifLogger.info("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:498"$498$"getClass(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:499"$499$"auditTrailMessage);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:500"$500$"Connection connection "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:501"$501$"= sqlConnectionManager.assignPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:502"$502$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:503"$503$"extractWorkflowManager.addExtractTableData("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:504"$504$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:505"$505$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:506"$506$"dataSetConfiguration, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:507"$507$"tableData);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:508"$508$"sqlConnectionManager.reclaimPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:509"$509$"rifManager, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:510"$510$"connection);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:511"$511$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:512"$512$"catch(RIFServiceException rifServiceException) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:513"$513$"//Audit failure of operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:514"$514$"logException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:515"$515$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:516"$516$"""addLoadTableData"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:517"$517$"rifServiceException);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:518"$518$"}		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:519"$519$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:520"$520$"public RIFResultTable getLoadTableData("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:521"$521$"final User _rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:522"$522$"final Writer logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:523"$523$"final DataSetConfiguration _dataSetConfiguration) "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:524"$524$"throws RIFServiceException,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:525"$525$"RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:526"$526$"//Defensively copy parameters and guard against blocked rifManagers"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:527"$527$"User rifManager = User.createCopy(_rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:528"$528$"if (sqlConnectionManager.isUserBlocked(rifManager) == true) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:529"$529$"return null;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:530"$530$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:531"$531$"DataSetConfiguration dataSetConfiguration"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:532"$532$"= DataSetConfiguration.createCopy(_dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:533"$533$"RIFResultTable results = null;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:534"$534$"try {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:535"$535$"//Check for empty parameters"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:536"$536$"FieldValidationUtility fieldValidationUtility"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:537"$537$"= new FieldValidationUtility();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:538"$538$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:539"$539$"""getLoadTableData"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:540"$540$"""rifManager"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:541"$541$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:542"$542$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:543"$543$"""getLoadTableData"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:544"$544$"""dataSetConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:545"$545$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:546"$546$"//Audit attempt to do operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:547"$547$"RIFLogger rifLogger = RIFLogger.getLogger();				"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:548"$548$"String auditTrailMessage"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:549"$549$"= RIFDataLoaderToolMessages.getMessage(""logging.getLoadTableData"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:550"$550$"rifManager.getUserID(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:551"$551$"rifManager.getIPAddress(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:552"$552$"dataSetConfiguration.getDisplayName());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:553"$553$"rifLogger.info("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:554"$554$"getClass(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:555"$555$"auditTrailMessage);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:556"$556$"Connection connection "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:557"$557$"= sqlConnectionManager.assignPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:558"$558$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:559"$559$"results"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:560"$560$"= extractWorkflowManager.getExtractTableData("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:561"$561$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:562"$562$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:563"$563$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:564"$564$"sqlConnectionManager.reclaimPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:565"$565$"rifManager, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:566"$566$"connection);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:567"$567$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:568"$568$"catch(RIFServiceException rifServiceException) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:569"$569$"//Audit failure of operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:570"$570$"logException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:571"$571$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:572"$572$"""getLoadTableData"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:573"$573$"rifServiceException);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:574"$574$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:575"$575$"return results;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:576"$576$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:577"$577$"public void cleanConfiguration("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:578"$578$"final User _rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:579"$579$"final Writer logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:580"$580$"final File outputDirectory,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:581"$581$"final DataSetConfiguration _dataSetConfiguration) "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:582"$582$"throws RIFServiceException,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:583"$583$"RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:584"$584$"//Defensively copy parameters and guard against blocked rifManagers"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:585"$585$"User rifManager = User.createCopy(_rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:586"$586$"if (sqlConnectionManager.isUserBlocked(rifManager) == true) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:587"$587$"return;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:588"$588$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:589"$589$"DataSetConfiguration dataSetConfiguration"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:590"$590$"= DataSetConfiguration.createCopy(_dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:591"$591$"try {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:592"$592$"//Check for empty parameters"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:593"$593$"checkCommonParameters("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:594"$594$"""cleanConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:595"$595$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:596"$596$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:597"$597$"//Audit attempt to do operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:598"$598$"RIFLogger rifLogger = RIFLogger.getLogger();				"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:599"$599$"String auditTrailMessage"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:600"$600$"= RIFDataLoaderToolMessages.getMessage(""logging.cleanConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:601"$601$"rifManager.getUserID(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:602"$602$"rifManager.getIPAddress(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:603"$603$"dataSetConfiguration.getDisplayName());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:604"$604$"rifLogger.info("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:605"$605$"getClass(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:606"$606$"auditTrailMessage);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:607"$607$"Connection connection "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:608"$608$"= sqlConnectionManager.assignPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:609"$609$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:610"$610$"String dataSetExportDirectoryPath"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:611"$611$"= generateDataSetExportDirectoryPath("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:612"$612$"outputDirectory,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:613"$613$"dataSetConfiguration);		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:614"$614$"cleanWorkflowManager.cleanConfiguration("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:615"$615$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:616"$616$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:617"$617$"dataSetExportDirectoryPath,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:618"$618$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:619"$619$"sqlConnectionManager.reclaimPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:620"$620$"rifManager, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:621"$621$"connection);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:622"$622$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:623"$623$"catch(RIFServiceException rifServiceException) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:624"$624$"//Audit failure of operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:625"$625$"logException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:626"$626$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:627"$627$"""cleanConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:628"$628$"rifServiceException);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:629"$629$"throw rifServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:630"$630$"}		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:631"$631$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:632"$632$"public RIFResultTable getCleanedTableData("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:633"$633$"final User _rifManager,			"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:634"$634$"final FileWriter logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:635"$635$"final DataSetConfiguration _dataSetConfiguration) "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:636"$636$"throws RIFServiceException,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:637"$637$"RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:638"$638$"//Defensively copy parameters and guard against blocked rifManagers"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:639"$639$"User rifManager = User.createCopy(_rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:640"$640$"if (sqlConnectionManager.isUserBlocked(rifManager) == true) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:641"$641$"return null;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:642"$642$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:643"$643$"DataSetConfiguration dataSetConfiguration"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:644"$644$"= DataSetConfiguration.createCopy(_dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:645"$645$"RIFResultTable result = null;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:646"$646$"try {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:647"$647$"//Check for empty parameters"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:648"$648$"FieldValidationUtility fieldValidationUtility"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:649"$649$"= new FieldValidationUtility();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:650"$650$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:651"$651$"""getCleanedTableData"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:652"$652$"""rifManager"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:653"$653$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:654"$654$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:655"$655$"""getCleanedTableData"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:656"$656$"""dataSetConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:657"$657$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:658"$658$"//Audit attempt to do operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:659"$659$"RIFLogger rifLogger = RIFLogger.getLogger();				"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:660"$660$"String auditTrailMessage"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:661"$661$"= RIFDataLoaderToolMessages.getMessage(""logging.getCleanedTableData"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:662"$662$"rifManager.getUserID(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:663"$663$"rifManager.getIPAddress(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:664"$664$"dataSetConfiguration.getDisplayName());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:665"$665$"rifLogger.info("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:666"$666$"getClass(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:667"$667$"auditTrailMessage);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:668"$668$"Connection connection "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:669"$669$"= sqlConnectionManager.assignPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:670"$670$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:671"$671$"result"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:672"$672$"= cleanWorkflowManager.getCleanedTableData("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:673"$673$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:674"$674$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:675"$675$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:676"$676$"sqlConnectionManager.reclaimPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:677"$677$"rifManager, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:678"$678$"connection);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:679"$679$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:680"$680$"catch(RIFServiceException rifServiceException) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:681"$681$"//Audit failure of operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:682"$682$"logException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:683"$683$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:684"$684$"""getCleanedTableData"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:685"$685$"rifServiceException);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:686"$686$"}		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:687"$687$"return result;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:688"$688$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:689"$689$"public void combineConfiguration("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:690"$690$"final User _rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:691"$691$"final Writer logFileWriter,		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:692"$692$"final File outputDirectory,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:693"$693$"final DataSetConfiguration _dataSetConfiguration) "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:694"$694$"throws RIFServiceException,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:695"$695$"RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:696"$696$"//Defensively copy parameters and guard against blocked rifManagers"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:697"$697$"User rifManager = User.createCopy(_rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:698"$698$"if (sqlConnectionManager.isUserBlocked(rifManager) == true) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:699"$699$"return;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:700"$700$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:701"$701$"DataSetConfiguration dataSetConfiguration"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:702"$702$"= DataSetConfiguration.createCopy(_dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:703"$703$"try {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:704"$704$"//Check for empty parameters"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:705"$705$"checkCommonParameters("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:706"$706$"""combineConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:707"$707$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:708"$708$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:709"$709$"//Audit attempt to do operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:710"$710$"RIFLogger rifLogger = RIFLogger.getLogger();				"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:711"$711$"String auditTrailMessage"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:712"$712$"= RIFDataLoaderToolMessages.getMessage(""logging.combineConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:713"$713$"rifManager.getUserID(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:714"$714$"rifManager.getIPAddress(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:715"$715$"dataSetConfiguration.getDisplayName());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:716"$716$"rifLogger.info("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:717"$717$"getClass(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:718"$718$"auditTrailMessage);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:719"$719$"Connection connection "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:720"$720$"= sqlConnectionManager.assignPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:721"$721$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:722"$722$"String dataSetExportDirectoryPath"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:723"$723$"= generateDataSetExportDirectoryPath("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:724"$724$"outputDirectory,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:725"$725$"dataSetConfiguration);		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:726"$726$"combineWorkflowManager.combineConfiguration("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:727"$727$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:728"$728$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:729"$729$"dataSetExportDirectoryPath,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:730"$730$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:731"$731$"sqlConnectionManager.reclaimPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:732"$732$"rifManager, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:733"$733$"connection);	"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:734"$734$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:735"$735$"catch(RIFServiceException rifServiceException) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:736"$736$"//Audit failure of operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:737"$737$"logException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:738"$738$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:739"$739$"""combineConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:740"$740$"rifServiceException);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:741"$741$"throw rifServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:742"$742$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:743"$743$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:744"$744$"public void splitConfiguration("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:745"$745$"final User _rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:746"$746$"final Writer logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:747"$747$"final File outputDirectory,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:748"$748$"final DataSetConfiguration _dataSetConfiguration) "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:749"$749$"throws RIFServiceException,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:750"$750$"RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:751"$751$"//Defensively copy parameters and guard against blocked rifManagers"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:752"$752$"User rifManager = User.createCopy(_rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:753"$753$"if (sqlConnectionManager.isUserBlocked(rifManager) == true) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:754"$754$"return;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:755"$755$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:756"$756$"DataSetConfiguration dataSetConfiguration"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:757"$757$"= DataSetConfiguration.createCopy(_dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:758"$758$"try {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:759"$759$"//Check for empty parameters"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:760"$760$"checkCommonParameters("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:761"$761$"""splitConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:762"$762$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:763"$763$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:764"$764$"//Audit attempt to do operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:765"$765$"RIFLogger rifLogger = RIFLogger.getLogger();				"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:766"$766$"String auditTrailMessage"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:767"$767$"= RIFDataLoaderToolMessages.getMessage(""logging.splitConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:768"$768$"rifManager.getUserID(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:769"$769$"rifManager.getIPAddress(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:770"$770$"dataSetConfiguration.getDisplayName());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:771"$771$"rifLogger.info("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:772"$772$"getClass(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:773"$773$"auditTrailMessage);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:774"$774$"Connection connection "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:775"$775$"= sqlConnectionManager.assignPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:776"$776$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:777"$777$"String dataSetExportDirectoryPath"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:778"$778$"= generateDataSetExportDirectoryPath("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:779"$779$"outputDirectory,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:780"$780$"dataSetConfiguration);		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:781"$781$"splitWorkflowManager.splitConfiguration("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:782"$782$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:783"$783$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:784"$784$"dataSetExportDirectoryPath,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:785"$785$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:786"$786$"sqlConnectionManager.reclaimPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:787"$787$"rifManager, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:788"$788$"connection);	"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:789"$789$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:790"$790$"catch(RIFServiceException rifServiceException) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:791"$791$"//Audit failure of operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:792"$792$"logException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:793"$793$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:794"$794$"""splitConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:795"$795$"rifServiceException);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:796"$796$"throw rifServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:797"$797$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:798"$798$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:799"$799$"public void convertConfiguration("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:800"$800$"final User _rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:801"$801$"final Writer logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:802"$802$"final File outputDirectory,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:803"$803$"final DataSetConfiguration _dataSetConfiguration)"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:804"$804$"throws RIFServiceException,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:805"$805$"RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:806"$806$"//Defensively copy parameters and guard against blocked rifManagers"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:807"$807$"User rifManager = User.createCopy(_rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:808"$808$"if (sqlConnectionManager.isUserBlocked(rifManager) == true) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:809"$809$"return;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:810"$810$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:811"$811$"DataSetConfiguration dataSetConfiguration"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:812"$812$"= DataSetConfiguration.createCopy(_dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:813"$813$"try {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:814"$814$"//Check for empty parameters"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:815"$815$"checkCommonParameters("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:816"$816$"""convertConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:817"$817$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:818"$818$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:819"$819$"//Audit attempt to do operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:820"$820$"RIFLogger rifLogger = RIFLogger.getLogger();				"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:821"$821$"String auditTrailMessage"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:822"$822$"= RIFDataLoaderToolMessages.getMessage(""logging.convertConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:823"$823$"rifManager.getUserID(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:824"$824$"rifManager.getIPAddress(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:825"$825$"dataSetConfiguration.getDisplayName());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:826"$826$"rifLogger.info("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:827"$827$"getClass(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:828"$828$"auditTrailMessage);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:829"$829$"Connection connection "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:830"$830$"= sqlConnectionManager.assignPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:831"$831$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:832"$832$"String dataSetExportDirectoryPath"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:833"$833$"= generateDataSetExportDirectoryPath("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:834"$834$"outputDirectory,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:835"$835$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:836"$836$"convertWorkflowManager.convertConfiguration("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:837"$837$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:838"$838$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:839"$839$"dataSetExportDirectoryPath,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:840"$840$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:841"$841$"sqlConnectionManager.reclaimPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:842"$842$"rifManager, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:843"$843$"connection);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:844"$844$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:845"$845$"catch(RIFServiceException rifServiceException) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:846"$846$"//Audit failure of operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:847"$847$"logException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:848"$848$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:849"$849$"""convertConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:850"$850$"rifServiceException);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:851"$851$"throw rifServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:852"$852$"}		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:853"$853$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:854"$854$"public void optimiseConfiguration("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:855"$855$"final User _rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:856"$856$"final Writer logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:857"$857$"final File outputDirectory,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:858"$858$"final DataSetConfiguration _dataSetConfiguration) "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:859"$859$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:860"$860$"//Defensively copy parameters and guard against blocked rifManagers"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:861"$861$"User rifManager = User.createCopy(_rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:862"$862$"if (sqlConnectionManager.isUserBlocked(rifManager) == true) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:863"$863$"return;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:864"$864$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:865"$865$"DataSetConfiguration dataSetConfiguration"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:866"$866$"= DataSetConfiguration.createCopy(_dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:867"$867$"try {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:868"$868$"//Check for empty parameters"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:869"$869$"checkCommonParameters("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:870"$870$"""optimiseConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:871"$871$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:872"$872$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:873"$873$"//Audit attempt to do operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:874"$874$"RIFLogger rifLogger = RIFLogger.getLogger();				"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:875"$875$"String auditTrailMessage"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:876"$876$"= RIFDataLoaderToolMessages.getMessage("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:877"$877$"""logging.optimiseConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:878"$878$"rifManager.getUserID(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:879"$879$"rifManager.getIPAddress(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:880"$880$"dataSetConfiguration.getDisplayName());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:881"$881$"rifLogger.info("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:882"$882$"getClass(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:883"$883$"auditTrailMessage);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:884"$884$"Connection connection "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:885"$885$"= sqlConnectionManager.assignPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:886"$886$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:887"$887$"String dataSetExportDirectoryPath"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:888"$888$"= generateDataSetExportDirectoryPath("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:889"$889$"outputDirectory,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:890"$890$"dataSetConfiguration);		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:891"$891$"optimiseWorkflowManager.optimiseConfiguration("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:892"$892$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:893"$893$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:894"$894$"dataSetExportDirectoryPath,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:895"$895$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:896"$896$"sqlConnectionManager.reclaimPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:897"$897$"rifManager, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:898"$898$"connection);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:899"$899$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:900"$900$"catch(RIFServiceException rifServiceException) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:901"$901$"//Audit failure of operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:902"$902$"logException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:903"$903$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:904"$904$"""optimiseConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:905"$905$"rifServiceException);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:906"$906$"throw rifServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:907"$907$"}	"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:908"$908$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:909"$909$"public void checkConfiguration("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:910"$910$"final User _rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:911"$911$"final Writer logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:912"$912$"final File outputDirectory,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:913"$913$"final DataSetConfiguration _dataSetConfiguration) "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:914"$914$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:915"$915$"//Defensively copy parameters and guard against blocked rifManagers"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:916"$916$"User rifManager = User.createCopy(_rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:917"$917$"if (sqlConnectionManager.isUserBlocked(rifManager) == true) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:918"$918$"return;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:919"$919$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:920"$920$"DataSetConfiguration dataSetConfiguration"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:921"$921$"= DataSetConfiguration.createCopy(_dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:922"$922$"try {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:923"$923$"//Check for empty parameters"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:924"$924$"checkCommonParameters("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:925"$925$"""checkConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:926"$926$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:927"$927$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:928"$928$"//Audit attempt to do operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:929"$929$"RIFLogger rifLogger = RIFLogger.getLogger();				"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:930"$930$"String auditTrailMessage"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:931"$931$"= RIFDataLoaderToolMessages.getMessage(""logging.checkConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:932"$932$"rifManager.getUserID(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:933"$933$"rifManager.getIPAddress(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:934"$934$"dataSetConfiguration.getDisplayName());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:935"$935$"rifLogger.info("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:936"$936$"getClass(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:937"$937$"auditTrailMessage);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:938"$938$"Connection connection "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:939"$939$"= sqlConnectionManager.assignPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:940"$940$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:941"$941$"String dataSetExportDirectoryPath"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:942"$942$"= generateDataSetExportDirectoryPath("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:943"$943$"outputDirectory,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:944"$944$"dataSetConfiguration);			"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:945"$945$"checkWorkflowManager.checkConfiguration("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:946"$946$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:947"$947$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:948"$948$"dataSetExportDirectoryPath,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:949"$949$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:950"$950$"sqlConnectionManager.reclaimPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:951"$951$"rifManager, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:952"$952$"connection);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:953"$953$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:954"$954$"catch(RIFServiceException rifServiceException) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:955"$955$"//Audit failure of operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:956"$956$"logException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:957"$957$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:958"$958$"""checkConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:959"$959$"rifServiceException);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:960"$960$"throw rifServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:961"$961$"}	"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:962"$962$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:963"$963$"public void publishConfiguration("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:964"$964$"final User _rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:965"$965$"final Writer logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:966"$966$"final File outputDirectory,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:967"$967$"final DataSetConfiguration _dataSetConfiguration) "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:968"$968$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:969"$969$"//Defensively copy parameters and guard against blocked rifManagers"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:970"$970$"User rifManager = User.createCopy(_rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:971"$971$"if (sqlConnectionManager.isUserBlocked(rifManager) == true) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:972"$972$"return;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:973"$973$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:974"$974$"DataSetConfiguration dataSetConfiguration"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:975"$975$"= DataSetConfiguration.createCopy(_dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:976"$976$"try {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:977"$977$"//Check for empty parameters"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:978"$978$"checkCommonParameters("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:979"$979$"""publishConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:980"$980$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:981"$981$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:982"$982$"//Audit attempt to do operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:983"$983$"RIFLogger rifLogger = RIFLogger.getLogger();				"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:984"$984$"String auditTrailMessage"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:985"$985$"= RIFDataLoaderToolMessages.getMessage(""logging.publishConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:986"$986$"rifManager.getUserID(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:987"$987$"rifManager.getIPAddress(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:988"$988$"dataSetConfiguration.getDisplayName());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:989"$989$"rifLogger.info("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:990"$990$"getClass(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:991"$991$"auditTrailMessage);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:992"$992$"Connection connection "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:993"$993$"= sqlConnectionManager.assignPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:994"$994$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:995"$995$"String dataSetExportDirectoryPath"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:996"$996$"= generateDataSetExportDirectoryPath("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:997"$997$"outputDirectory,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:998"$998$"dataSetConfiguration);			"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:999"$999$"publishWorkflowManager.publishConfiguration("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1000"$1000$"connection,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1001"$1001$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1002"$1002$"dataSetExportDirectoryPath,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1003"$1003$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1004"$1004$"sqlConnectionManager.reclaimPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1005"$1005$"rifManager, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1006"$1006$"connection);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1007"$1007$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1008"$1008$"catch(RIFServiceException rifServiceException) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1009"$1009$"//Audit failure of operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1010"$1010$"logException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1011"$1011$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1012"$1012$"""publishConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1013"$1013$"rifServiceException);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1014"$1014$"throw rifServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1015"$1015$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1016"$1016$"publishWorkflowManager.createZipArchiveFileAndCleanupTemporaryFiles("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1017"$1017$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1018"$1018$"outputDirectory.getAbsoluteFile(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1019"$1019$"dataSetConfiguration);		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1020"$1020$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1021"$1021$"public void generateResultReports("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1022"$1022$"final User _rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1023"$1023$"final Writer logFileWriter,		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1024"$1024$"final File outputDirectory,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1025"$1025$"final DataSetConfiguration _dataSetConfiguration) "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1026"$1026$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1027"$1027$"//Defensively copy parameters and guard against blocked rifManagers"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1028"$1028$"User rifManager = User.createCopy(_rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1029"$1029$"if (sqlConnectionManager.isUserBlocked(rifManager) == true) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1030"$1030$"return;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1031"$1031$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1032"$1032$"DataSetConfiguration dataSetConfiguration"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1033"$1033$"= DataSetConfiguration.createCopy(_dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1034"$1034$"try {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1035"$1035$"//Check for empty parameters"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1036"$1036$"checkCommonParameters("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1037"$1037$"""generateResultReports"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1038"$1038$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1039"$1039$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1040"$1040$"//Audit attempt to do operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1041"$1041$"RIFLogger rifLogger = RIFLogger.getLogger();				"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1042"$1042$"String auditTrailMessage"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1043"$1043$"= RIFDataLoaderToolMessages.getMessage(""logging.generateResultReports"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1044"$1044$"rifManager.getUserID(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1045"$1045$"rifManager.getIPAddress(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1046"$1046$"dataSetConfiguration.getDisplayName());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1047"$1047$"rifLogger.info("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1048"$1048$"getClass(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1049"$1049$"auditTrailMessage);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1050"$1050$"Connection connection "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1051"$1051$"= sqlConnectionManager.assignPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1052"$1052$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1053"$1053$"reportManager.writeResults("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1054"$1054$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1055"$1055$"logFileWriter, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1056"$1056$"outputDirectory, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1057"$1057$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1058"$1058$"sqlConnectionManager.reclaimPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1059"$1059$"rifManager, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1060"$1060$"connection);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1061"$1061$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1062"$1062$"catch(RIFServiceException rifServiceException) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1063"$1063$"//Audit failure of operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1064"$1064$"logException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1065"$1065$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1066"$1066$"""generateResultReports"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1067"$1067$"rifServiceException);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1068"$1068$"throw rifServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1069"$1069$"}	"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1070"$1070$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1071"$1071$"public Integer getCleaningTotalBlankValues("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1072"$1072$"final User _rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1073"$1073$"final Writer logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1074"$1074$"final DataSetConfiguration _dataSetConfiguration)"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1075"$1075$"throws RIFServiceException,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1076"$1076$"RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1077"$1077$"//Defensively copy parameters and guard against blocked rifManagers"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1078"$1078$"User rifManager = User.createCopy(_rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1079"$1079$"if (sqlConnectionManager.isUserBlocked(rifManager) == true) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1080"$1080$"return null;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1081"$1081$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1082"$1082$"DataSetConfiguration dataSetConfiguration"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1083"$1083$"= DataSetConfiguration.createCopy(_dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1084"$1084$"Integer result = null;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1085"$1085$"try {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1086"$1086$"//Check for empty parameters"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1087"$1087$"FieldValidationUtility fieldValidationUtility"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1088"$1088$"= new FieldValidationUtility();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1089"$1089$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1090"$1090$"""getCleaningTotalBlankValues"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1091"$1091$"""rifManager"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1092"$1092$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1093"$1093$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1094"$1094$"""getCleaningTotalBlankValues"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1095"$1095$"""dataSetConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1096"$1096$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1097"$1097$"//Audit attempt to do operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1098"$1098$"RIFLogger rifLogger = RIFLogger.getLogger();				"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1099"$1099$"String auditTrailMessage"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1100"$1100$"= RIFDataLoaderToolMessages.getMessage(""logging.getCleaningTotalBlankValues"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1101"$1101$"rifManager.getUserID(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1102"$1102$"rifManager.getIPAddress(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1103"$1103$"dataSetConfiguration.getDisplayName());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1104"$1104$"rifLogger.info("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1105"$1105$"getClass(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1106"$1106$"auditTrailMessage);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1107"$1107$"Connection connection "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1108"$1108$"= sqlConnectionManager.assignPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1109"$1109$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1110"$1110$"result"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1111"$1111$"= cleanWorkflowManager.getCleaningTotalBlankValues("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1112"$1112$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1113"$1113$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1114"$1114$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1115"$1115$"sqlConnectionManager.reclaimPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1116"$1116$"rifManager, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1117"$1117$"connection);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1118"$1118$"return result;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1119"$1119$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1120"$1120$"catch(RIFServiceException rifServiceException) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1121"$1121$"//Audit failure of operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1122"$1122$"logException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1123"$1123$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1124"$1124$"""getCleaningTotalBlankValues"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1125"$1125$"rifServiceException);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1126"$1126$"}		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1127"$1127$"return result;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1128"$1128$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1129"$1129$"public Integer getCleaningTotalChangedValues("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1130"$1130$"final User _rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1131"$1131$"final Writer logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1132"$1132$"final DataSetConfiguration _dataSetConfiguration)"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1133"$1133$"throws RIFServiceException,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1134"$1134$"RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1135"$1135$"//Defensively copy parameters and guard against blocked rifManagers"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1136"$1136$"User rifManager = User.createCopy(_rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1137"$1137$"if (sqlConnectionManager.isUserBlocked(rifManager) == true) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1138"$1138$"return null;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1139"$1139$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1140"$1140$"DataSetConfiguration dataSetConfiguration"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1141"$1141$"= DataSetConfiguration.createCopy(_dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1142"$1142$"Integer result = null;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1143"$1143$"try {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1144"$1144$"//Check for empty parameters"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1145"$1145$"FieldValidationUtility fieldValidationUtility"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1146"$1146$"= new FieldValidationUtility();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1147"$1147$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1148"$1148$"""getCleaningTotalChangedValues"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1149"$1149$"""rifManager"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1150"$1150$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1151"$1151$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1152"$1152$"""getCleaningTotalChangedValues"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1153"$1153$"""dataSetConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1154"$1154$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1155"$1155$"//Audit attempt to do operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1156"$1156$"RIFLogger rifLogger = RIFLogger.getLogger();				"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1157"$1157$"String auditTrailMessage"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1158"$1158$"= RIFDataLoaderToolMessages.getMessage(""logging.getCleaningTotalChangedValues"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1159"$1159$"rifManager.getUserID(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1160"$1160$"rifManager.getIPAddress(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1161"$1161$"dataSetConfiguration.getDisplayName());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1162"$1162$"rifLogger.info("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1163"$1163$"getClass(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1164"$1164$"auditTrailMessage);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1165"$1165$"Connection connection "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1166"$1166$"= sqlConnectionManager.assignPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1167"$1167$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1168"$1168$"result"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1169"$1169$"= cleanWorkflowManager.getCleaningTotalChangedValues("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1170"$1170$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1171"$1171$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1172"$1172$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1173"$1173$"sqlConnectionManager.reclaimPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1174"$1174$"rifManager, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1175"$1175$"connection);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1176"$1176$"return result;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1177"$1177$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1178"$1178$"catch(RIFServiceException rifServiceException) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1179"$1179$"//Audit failure of operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1180"$1180$"logException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1181"$1181$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1182"$1182$"""getCleaningTotalBlankValues"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1183"$1183$"rifServiceException);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1184"$1184$"}		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1185"$1185$"return result;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1186"$1186$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1187"$1187$"public Integer getCleaningTotalErrorValues("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1188"$1188$"final User _rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1189"$1189$"final Writer logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1190"$1190$"final DataSetConfiguration _dataSetConfiguration)"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1191"$1191$"throws RIFServiceException,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1192"$1192$"RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1193"$1193$"//Defensively copy parameters and guard against blocked rifManagers"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1194"$1194$"User rifManager = User.createCopy(_rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1195"$1195$"if (sqlConnectionManager.isUserBlocked(rifManager) == true) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1196"$1196$"return null;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1197"$1197$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1198"$1198$"DataSetConfiguration dataSetConfiguration"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1199"$1199$"= DataSetConfiguration.createCopy(_dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1200"$1200$"Integer result = null;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1201"$1201$"try {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1202"$1202$"//Check for empty parameters"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1203"$1203$"FieldValidationUtility fieldValidationUtility"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1204"$1204$"= new FieldValidationUtility();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1205"$1205$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1206"$1206$"""getCleaningTotalErrorValues"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1207"$1207$"""rifManager"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1208"$1208$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1209"$1209$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1210"$1210$"""getCleaningTotalErrorValues"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1211"$1211$"""dataSetConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1212"$1212$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1213"$1213$"//Audit attempt to do operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1214"$1214$"RIFLogger rifLogger = RIFLogger.getLogger();				"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1215"$1215$"String auditTrailMessage"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1216"$1216$"= RIFDataLoaderToolMessages.getMessage(""logging.getCleaningTotalErrorValues"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1217"$1217$"rifManager.getUserID(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1218"$1218$"rifManager.getIPAddress(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1219"$1219$"dataSetConfiguration.getDisplayName());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1220"$1220$"rifLogger.info("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1221"$1221$"getClass(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1222"$1222$"auditTrailMessage);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1223"$1223$"Connection connection "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1224"$1224$"= sqlConnectionManager.assignPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1225"$1225$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1226"$1226$"result"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1227"$1227$"= cleanWorkflowManager.getCleaningTotalErrorValues("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1228"$1228$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1229"$1229$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1230"$1230$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1231"$1231$"sqlConnectionManager.reclaimPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1232"$1232$"rifManager, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1233"$1233$"connection);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1234"$1234$"return result;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1235"$1235$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1236"$1236$"catch(RIFServiceException rifServiceException) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1237"$1237$"//Audit failure of operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1238"$1238$"logException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1239"$1239$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1240"$1240$"""getCleaningTotalErrorValues"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1241"$1241$"rifServiceException);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1242"$1242$"}		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1243"$1243$"return result;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1244"$1244$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1245"$1245$"public Boolean cleaningDetectedBlankValue("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1246"$1246$"final User _rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1247"$1247$"final Writer logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1248"$1248$"final DataSetConfiguration _dataSetConfiguration,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1249"$1249$"final int rowNumber,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1250"$1250$"final String targetBaseFieldName)"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1251"$1251$"throws RIFServiceException,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1252"$1252$"RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1253"$1253$"//Defensively copy parameters and guard against blocked rifManagers"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1254"$1254$"User rifManager = User.createCopy(_rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1255"$1255$"if (sqlConnectionManager.isUserBlocked(rifManager) == true) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1256"$1256$"return null;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1257"$1257$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1258"$1258$"DataSetConfiguration dataSetConfiguration"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1259"$1259$"= DataSetConfiguration.createCopy(_dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1260"$1260$"Boolean result = null;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1261"$1261$"try {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1262"$1262$"//Check for empty parameters"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1263"$1263$"FieldValidationUtility fieldValidationUtility"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1264"$1264$"= new FieldValidationUtility();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1265"$1265$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1266"$1266$"""cleaningDetectedBlankValue"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1267"$1267$"""rifManager"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1268"$1268$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1269"$1269$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1270"$1270$"""cleaningDetectedBlankValue"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1271"$1271$"""dataSetConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1272"$1272$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1273"$1273$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1274"$1274$"""cleaningDetectedBlankValue"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1275"$1275$"""targetBaseFieldName"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1276"$1276$"targetBaseFieldName);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1277"$1277$"//Audit attempt to do operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1278"$1278$"RIFLogger rifLogger = RIFLogger.getLogger();				"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1279"$1279$"String auditTrailMessage"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1280"$1280$"= RIFDataLoaderToolMessages.getMessage("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1281"$1281$"""logging.cleaningDetectedBlankValue"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1282"$1282$"rifManager.getUserID(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1283"$1283$"rifManager.getIPAddress(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1284"$1284$"dataSetConfiguration.getDisplayName(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1285"$1285$"targetBaseFieldName, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1286"$1286$"String.valueOf(rowNumber));"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1287"$1287$"rifLogger.info("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1288"$1288$"getClass(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1289"$1289$"auditTrailMessage);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1290"$1290$"Connection connection "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1291"$1291$"= sqlConnectionManager.assignPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1292"$1292$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1293"$1293$"result"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1294"$1294$"= cleanWorkflowManager.cleaningDetectedBlankValue("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1295"$1295$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1296"$1296$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1297"$1297$"dataSetConfiguration,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1298"$1298$"rowNumber,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1299"$1299$"targetBaseFieldName);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1300"$1300$"sqlConnectionManager.reclaimPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1301"$1301$"rifManager, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1302"$1302$"connection);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1303"$1303$"return result;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1304"$1304$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1305"$1305$"catch(RIFServiceException rifServiceException) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1306"$1306$"//Audit failure of operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1307"$1307$"logException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1308"$1308$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1309"$1309$"""cleaningDetectedBlankValue"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1310"$1310$"rifServiceException);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1311"$1311$"}		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1312"$1312$"return result;		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1313"$1313$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1314"$1314$"public Boolean cleaningDetectedChangedValue("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1315"$1315$"final User _rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1316"$1316$"final Writer logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1317"$1317$"final DataSetConfiguration _dataSetConfiguration,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1318"$1318$"final int rowNumber,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1319"$1319$"final String targetBaseFieldName)"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1320"$1320$"throws RIFServiceException,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1321"$1321$"RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1322"$1322$"//Defensively copy parameters and guard against blocked rifManagers"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1323"$1323$"User rifManager = User.createCopy(_rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1324"$1324$"if (sqlConnectionManager.isUserBlocked(rifManager) == true) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1325"$1325$"return null;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1326"$1326$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1327"$1327$"DataSetConfiguration dataSetConfiguration"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1328"$1328$"= DataSetConfiguration.createCopy(_dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1329"$1329$"Boolean result = null;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1330"$1330$"try {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1331"$1331$"//Check for empty parameters"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1332"$1332$"FieldValidationUtility fieldValidationUtility"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1333"$1333$"= new FieldValidationUtility();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1334"$1334$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1335"$1335$"""cleaningDetectedChangedValue"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1336"$1336$"""rifManager"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1337"$1337$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1338"$1338$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1339"$1339$"""cleaningDetectedChangedValue"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1340"$1340$"""dataSetConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1341"$1341$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1342"$1342$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1343"$1343$"""cleaningDetectedChangedValue"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1344"$1344$"""targetBaseFieldName"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1345"$1345$"targetBaseFieldName);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1346"$1346$"//Audit attempt to do operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1347"$1347$"RIFLogger rifLogger = RIFLogger.getLogger();				"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1348"$1348$"String auditTrailMessage"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1349"$1349$"= RIFDataLoaderToolMessages.getMessage(""logging.cleaningDetectedChangedValue"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1350"$1350$"rifManager.getUserID(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1351"$1351$"rifManager.getIPAddress(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1352"$1352$"dataSetConfiguration.getDisplayName(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1353"$1353$"targetBaseFieldName);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1354"$1354$"rifLogger.info("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1355"$1355$"getClass(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1356"$1356$"auditTrailMessage);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1357"$1357$"Connection connection "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1358"$1358$"= sqlConnectionManager.assignPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1359"$1359$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1360"$1360$"result"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1361"$1361$"= cleanWorkflowManager.cleaningDetectedChangedValue("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1362"$1362$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1363"$1363$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1364"$1364$"dataSetConfiguration,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1365"$1365$"rowNumber,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1366"$1366$"targetBaseFieldName);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1367"$1367$"sqlConnectionManager.reclaimPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1368"$1368$"rifManager, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1369"$1369$"connection);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1370"$1370$"return result;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1371"$1371$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1372"$1372$"catch(RIFServiceException rifServiceException) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1373"$1373$"//Audit failure of operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1374"$1374$"logException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1375"$1375$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1376"$1376$"""cleaningDetectedChangedValue"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1377"$1377$"rifServiceException);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1378"$1378$"}		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1379"$1379$"return result;		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1380"$1380$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1381"$1381$"public Boolean cleaningDetectedErrorValue("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1382"$1382$"final User _rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1383"$1383$"final Writer logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1384"$1384$"final DataSetConfiguration _dataSetConfiguration,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1385"$1385$"final int rowNumber,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1386"$1386$"final String targetBaseFieldName)"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1387"$1387$"throws RIFServiceException,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1388"$1388$"RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1389"$1389$"//Defensively copy parameters and guard against blocked rifManagers"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1390"$1390$"User rifManager = User.createCopy(_rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1391"$1391$"if (sqlConnectionManager.isUserBlocked(rifManager) == true) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1392"$1392$"return null;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1393"$1393$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1394"$1394$"DataSetConfiguration dataSetConfiguration"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1395"$1395$"= DataSetConfiguration.createCopy(_dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1396"$1396$"Boolean result = null;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1397"$1397$"try {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1398"$1398$"//Check for empty parameters"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1399"$1399$"FieldValidationUtility fieldValidationUtility"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1400"$1400$"= new FieldValidationUtility();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1401"$1401$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1402"$1402$"""cleaningDetectedErrorValue"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1403"$1403$"""rifManager"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1404"$1404$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1405"$1405$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1406"$1406$"""cleaningDetectedErrorValue"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1407"$1407$"""dataSetConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1408"$1408$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1409"$1409$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1410"$1410$"""cleaningDetectedErrorValue"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1411"$1411$"""targetBaseFieldName"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1412"$1412$"targetBaseFieldName);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1413"$1413$"//Audit attempt to do operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1414"$1414$"Connection connection "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1415"$1415$"= sqlConnectionManager.assignPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1416"$1416$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1417"$1417$"result"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1418"$1418$"= cleanWorkflowManager.cleaningDetectedErrorValue("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1419"$1419$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1420"$1420$"logFileWriter,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1421"$1421$"dataSetConfiguration,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1422"$1422$"rowNumber,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1423"$1423$"targetBaseFieldName);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1424"$1424$"sqlConnectionManager.reclaimPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1425"$1425$"rifManager, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1426"$1426$"connection);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1427"$1427$"return result;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1428"$1428$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1429"$1429$"catch(RIFServiceException rifServiceException) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1430"$1430$"//Audit failure of operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1431"$1431$"logException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1432"$1432$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1433"$1433$"""cleaningDetectedErrorValue"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1434"$1434$"rifServiceException);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1435"$1435$"}		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1436"$1436$"return result;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1437"$1437$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1438"$1438$"public String[][] getVarianceInFieldData("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1439"$1439$"final User _rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1440"$1440$"final DataSetFieldConfiguration _dataSetFieldConfiguration)"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1441"$1441$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1442"$1442$"String[][] results = new String[0][0];"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1443"$1443$"//Defensively copy parameters and guard against blocked rifManagers"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1444"$1444$"User rifManager = User.createCopy(_rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1445"$1445$"if (sqlConnectionManager.isUserBlocked(rifManager) == true) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1446"$1446$"return results;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1447"$1447$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1448"$1448$"DataSetFieldConfiguration dataSetFieldConfiguration"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1449"$1449$"= DataSetFieldConfiguration.createCopy(_dataSetFieldConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1450"$1450$"try {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1451"$1451$"//Check for empty parameters"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1452"$1452$"checkCommonParameters("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1453"$1453$"""getVarianceInFieldData"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1454"$1454$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1455"$1455$"dataSetFieldConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1456"$1456$"//Audit attempt to do operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1457"$1457$"RIFLogger rifLogger = RIFLogger.getLogger();				"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1458"$1458$"String auditTrailMessage"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1459"$1459$"= RIFDataLoaderToolMessages.getMessage(""logging.getVarianceInFieldData"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1460"$1460$"rifManager.getUserID(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1461"$1461$"rifManager.getIPAddress(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1462"$1462$"dataSetFieldConfiguration.getDisplayName());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1463"$1463$"rifLogger.info("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1464"$1464$"getClass(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1465"$1465$"auditTrailMessage);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1466"$1466$"Connection connection "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1467"$1467$"= sqlConnectionManager.assignPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1468"$1468$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1469"$1469$"results "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1470"$1470$"= databaseSchemaInformationManager.getVarianceInFieldData("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1471"$1471$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1472"$1472$"dataSetFieldConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1473"$1473$"sqlConnectionManager.reclaimPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1474"$1474$"rifManager, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1475"$1475$"connection);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1476"$1476$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1477"$1477$"catch(RIFServiceException rifServiceException) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1478"$1478$"//Audit failure of operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1479"$1479$"logException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1480"$1480$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1481"$1481$"""convertConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1482"$1482$"rifServiceException);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1483"$1483$"throw rifServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1484"$1484$"}		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1485"$1485$"return results;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1486"$1486$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1487"$1487$"protected void ensureTemporaryDirectoriesExist("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1488"$1488$"final User _rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1489"$1489$"final File outputDirectory,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1490"$1490$"final DataSetConfiguration dataSetConfiguration) "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1491"$1491$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1492"$1492$"//Defensively copy parameters and guard against blocked rifManagers"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1493"$1493$"User rifManager = User.createCopy(_rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1494"$1494$"if (sqlConnectionManager.isUserBlocked(rifManager) == true) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1495"$1495$"return;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1496"$1496$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1497"$1497$"String coreDataSetName = dataSetConfiguration.getName();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1498"$1498$"try {			"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1499"$1499$"String mainScratchDirectoryPath"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1500"$1500$"= generateDataSetExportDirectoryPath("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1501"$1501$"outputDirectory,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1502"$1502$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1503"$1503$"File temporaryDirectory = new File(mainScratchDirectoryPath.toString());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1504"$1504$"if (temporaryDirectory.exists() == false) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1505"$1505$"FileUtils.deleteDirectory(temporaryDirectory);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1506"$1506$"Files.createDirectory(temporaryDirectory.toPath());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1507"$1507$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1508"$1508$"createSubDirectory(mainScratchDirectoryPath, DataLoadingResultTheme.ARCHIVE_ORIGINAL_DATA);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1509"$1509$"createSubDirectory(mainScratchDirectoryPath, DataLoadingResultTheme.ARCHIVE_AUDIT_TRAIL);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1510"$1510$"createSubDirectory(mainScratchDirectoryPath, DataLoadingResultTheme.ARCHIVE_RESULTS);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1511"$1511$"createSubDirectory(mainScratchDirectoryPath, DataLoadingResultTheme.ARCHIVE_STAGES);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1512"$1512$"createSubDirectory(mainScratchDirectoryPath, DataLoadingResultTheme.ARCHIVE_OTHER);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1513"$1513$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1514"$1514$"catch(IOException ioException) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1515"$1515$"logException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1516"$1516$"rifManager, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1517"$1517$"""ensureTemporaryDirectoriesExist"", "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1518"$1518$"ioException);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1519"$1519$"String errorMessage"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1520"$1520$"= RIFDataLoaderToolMessages.getMessage("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1521"$1521$"""abstractDataLoaderStepManager.error.unableToCreateTemporaryDirectories"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1522"$1522$"coreDataSetName);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1523"$1523$"RIFServiceException rifServiceException"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1524"$1524$"= new RIFServiceException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1525"$1525$"RIFDataLoaderToolError.UNABLE_TO_CREATE_TEMPORARY_DIRECTORIES, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1526"$1526$"errorMessage);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1527"$1527$"throw rifServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1528"$1528$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1529"$1529$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1530"$1530$"private void createSubDirectory("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1531"$1531$"final String mainScratchDirectoryPath,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1532"$1532$"final DataLoadingResultTheme resultTheme) "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1533"$1533$"throws IOException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1534"$1534$"StringBuilder subDirectoryPath = new StringBuilder();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1535"$1535$"subDirectoryPath.append(mainScratchDirectoryPath);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1536"$1536$"subDirectoryPath.append(File.separator);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1537"$1537$"subDirectoryPath.append(resultTheme.getSubDirectoryName());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1538"$1538$"File subDirectory = new File(subDirectoryPath.toString());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1539"$1539$"if (subDirectory.exists() == false) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1540"$1540$"Files.createDirectory(subDirectory.toPath());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1541"$1541$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1542"$1542$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1543"$1543$"private String generateDataSetExportDirectoryPath("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1544"$1544$"final File outputDirectory,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1545"$1545$"final DataSetConfiguration dataSetConfiguration) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1546"$1546$"String coreDataSetName = dataSetConfiguration.getName();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1547"$1547$"StringBuilder dataSetExportDirectoryPath = new StringBuilder();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1548"$1548$"dataSetExportDirectoryPath.append(outputDirectory.getAbsolutePath());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1549"$1549$"dataSetExportDirectoryPath.append(File.separator);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1550"$1550$"dataSetExportDirectoryPath.append(coreDataSetName);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1551"$1551$"return dataSetExportDirectoryPath.toString();		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1552"$1552$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1553"$1553$"public String[] getCleaningFunctionNames(final User _rifManager) "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1554"$1554$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1555"$1555$"String[] result = new String[0];"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1556"$1556$"//Defensively copy parameters and guard against blocked rifManagers"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1557"$1557$"User rifManager = User.createCopy(_rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1558"$1558$"if (sqlConnectionManager.isUserBlocked(rifManager) == true) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1559"$1559$"return result;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1560"$1560$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1561"$1561$"try {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1562"$1562$"//Check for empty parameters"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1563"$1563$"FieldValidationUtility fieldValidationUtility"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1564"$1564$"= new FieldValidationUtility();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1565"$1565$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1566"$1566$"""getCleaningFunctionNames"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1567"$1567$"""rifManager"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1568"$1568$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1569"$1569$"rifManager.checkSecurityViolations();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1570"$1570$"//Audit attempt to do operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1571"$1571$"RIFLogger rifLogger = RIFLogger.getLogger();				"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1572"$1572$"String auditTrailMessage"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1573"$1573$"= RIFDataLoaderToolMessages.getMessage(""logging.getCleaningFunctionNames"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1574"$1574$"rifManager.getUserID(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1575"$1575$"rifManager.getIPAddress());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1576"$1576$"rifLogger.info("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1577"$1577$"getClass(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1578"$1578$"auditTrailMessage);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1579"$1579$"Connection connection "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1580"$1580$"= sqlConnectionManager.assignPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1581"$1581$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1582"$1582$"result"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1583"$1583$"= databaseSchemaInformationManager.getCleaningFunctionNames(connection);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1584"$1584$"sqlConnectionManager.reclaimPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1585"$1585$"rifManager, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1586"$1586$"connection);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1587"$1587$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1588"$1588$"catch(RIFServiceException rifServiceException) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1589"$1589$"//Audit failure of operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1590"$1590$"logException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1591"$1591$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1592"$1592$"""getCleaningFunctionNames"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1593"$1593$"rifServiceException);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1594"$1594$"throw rifServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1595"$1595$"}		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1596"$1596$"return result;		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1597"$1597$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1598"$1598$"public String getDescriptionForCleaningFunction("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1599"$1599$"final User _rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1600"$1600$"final String cleaningFunctionName) "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1601"$1601$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1602"$1602$"String result = """";"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1603"$1603$"//Defensively copy parameters and guard against blocked rifManagers"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1604"$1604$"User rifManager = User.createCopy(_rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1605"$1605$"if (sqlConnectionManager.isUserBlocked(rifManager) == true) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1606"$1606$"return result;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1607"$1607$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1608"$1608$"try {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1609"$1609$"//Check for empty parameters"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1610"$1610$"FieldValidationUtility fieldValidationUtility"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1611"$1611$"= new FieldValidationUtility();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1612"$1612$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1613"$1613$"""getDescriptionForCleaningFunction"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1614"$1614$"""rifManager"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1615"$1615$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1616"$1616$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1617"$1617$"""getDescriptionForCleaningFunction"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1618"$1618$"""cleaningFunctionName"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1619"$1619$"cleaningFunctionName);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1620"$1620$"fieldValidationUtility.checkMaliciousMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1621"$1621$"""getDescriptionForCleaningFunction"", "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1622"$1622$"""cleaningFunctionName"", "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1623"$1623$"cleaningFunctionName);			"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1624"$1624$"rifManager.checkSecurityViolations();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1625"$1625$"//Audit attempt to do operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1626"$1626$"RIFLogger rifLogger = RIFLogger.getLogger();				"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1627"$1627$"String auditTrailMessage"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1628"$1628$"= RIFDataLoaderToolMessages.getMessage(""logging.getDescriptionForCleaningFunction"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1629"$1629$"rifManager.getUserID(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1630"$1630$"rifManager.getIPAddress());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1631"$1631$"rifLogger.info("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1632"$1632$"getClass(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1633"$1633$"auditTrailMessage);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1634"$1634$"Connection connection "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1635"$1635$"= sqlConnectionManager.assignPooledWriteConnection(rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1636"$1636$"result"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1637"$1637$"= databaseSchemaInformationManager.getFunctionDescription("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1638"$1638$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1639"$1639$"cleaningFunctionName);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1640"$1640$"sqlConnectionManager.reclaimPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1641"$1641$"rifManager, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1642"$1642$"connection);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1643"$1643$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1644"$1644$"catch(RIFServiceException rifServiceException) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1645"$1645$"//Audit failure of operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1646"$1646$"logException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1647"$1647$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1648"$1648$"""getDescriptionForCleaningFunction"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1649"$1649$"rifServiceException);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1650"$1650$"throw rifServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1651"$1651$"}		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1652"$1652$"return result;		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1653"$1653$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1654"$1654$"public String[] getValidationFunctionNames("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1655"$1655$"final User _rifManager) "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1656"$1656$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1657"$1657$"String[] result = new String[0];"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1658"$1658$"//Defensively copy parameters and guard against blocked rifManagers"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1659"$1659$"User rifManager = User.createCopy(_rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1660"$1660$"if (sqlConnectionManager.isUserBlocked(rifManager) == true) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1661"$1661$"return result;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1662"$1662$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1663"$1663$"try {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1664"$1664$"//Check for empty parameters"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1665"$1665$"FieldValidationUtility fieldValidationUtility"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1666"$1666$"= new FieldValidationUtility();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1667"$1667$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1668"$1668$"""getDescriptionForValidationFunction"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1669"$1669$"""rifManager"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1670"$1670$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1671"$1671$"rifManager.checkSecurityViolations();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1672"$1672$"//Audit attempt to do operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1673"$1673$"RIFLogger rifLogger = RIFLogger.getLogger();				"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1674"$1674$"String auditTrailMessage"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1675"$1675$"= RIFDataLoaderToolMessages.getMessage(""logging.getValidationFunctionNames"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1676"$1676$"rifManager.getUserID(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1677"$1677$"rifManager.getIPAddress());"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1678"$1678$"rifLogger.info("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1679"$1679$"getClass(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1680"$1680$"auditTrailMessage);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1681"$1681$"Connection connection "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1682"$1682$"= sqlConnectionManager.assignPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1683"$1683$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1684"$1684$"result"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1685"$1685$"= databaseSchemaInformationManager.getValidationFunctionNames("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1686"$1686$"connection);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1687"$1687$"sqlConnectionManager.reclaimPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1688"$1688$"rifManager, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1689"$1689$"connection);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1690"$1690$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1691"$1691$"catch(RIFServiceException rifServiceException) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1692"$1692$"//Audit failure of operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1693"$1693$"logException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1694"$1694$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1695"$1695$"""getValidationFunctionNames"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1696"$1696$"rifServiceException);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1697"$1697$"throw rifServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1698"$1698$"}		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1699"$1699$"return result;		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1700"$1700$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1701"$1701$"public String getDescriptionForValidationFunction("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1702"$1702$"final User _rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1703"$1703$"final String validationFunctionName) "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1704"$1704$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1705"$1705$"String result = """";"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1706"$1706$"//Defensively copy parameters and guard against blocked rifManagers"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1707"$1707$"User rifManager = User.createCopy(_rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1708"$1708$"if (sqlConnectionManager.isUserBlocked(rifManager) == true) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1709"$1709$"return result;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1710"$1710$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1711"$1711$"try {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1712"$1712$"//Check for empty parameters"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1713"$1713$"FieldValidationUtility fieldValidationUtility"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1714"$1714$"= new FieldValidationUtility();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1715"$1715$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1716"$1716$"""getDescriptionForValidationFunction"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1717"$1717$"""rifManager"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1718"$1718$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1719"$1719$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1720"$1720$"""getDescriptionForValidationFunction"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1721"$1721$"""validationFunctionName"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1722"$1722$"validationFunctionName);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1723"$1723$"rifManager.checkSecurityViolations();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1724"$1724$"fieldValidationUtility.checkMaliciousMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1725"$1725$"""getDescriptionForValidationFunction"", "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1726"$1726$"""rifManager"", "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1727"$1727$"validationFunctionName);			"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1728"$1728$"//Audit attempt to do operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1729"$1729$"RIFLogger rifLogger = RIFLogger.getLogger();				"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1730"$1730$"String auditTrailMessage"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1731"$1731$"= RIFDataLoaderToolMessages.getMessage(""logging.getDescriptionForValidationFunction"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1732"$1732$"rifManager.getUserID(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1733"$1733$"rifManager.getIPAddress(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1734"$1734$"validationFunctionName);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1735"$1735$"rifLogger.info("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1736"$1736$"getClass(),"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1737"$1737$"auditTrailMessage);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1738"$1738$"Connection connection "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1739"$1739$"= sqlConnectionManager.assignPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1740"$1740$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1741"$1741$"result"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1742"$1742$"= databaseSchemaInformationManager.getFunctionDescription("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1743"$1743$"connection, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1744"$1744$"validationFunctionName);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1745"$1745$"sqlConnectionManager.reclaimPooledWriteConnection("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1746"$1746$"rifManager, "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1747"$1747$"connection);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1748"$1748$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1749"$1749$"catch(RIFServiceException rifServiceException) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1750"$1750$"//Audit failure of operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1751"$1751$"logException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1752"$1752$"rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1753"$1753$"""getDescriptionForValidationFunction"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1754"$1754$"rifServiceException);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1755"$1755$"throw rifServiceException;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1756"$1756$"}		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1757"$1757$"return result;		"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1758"$1758$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1759"$1759$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1760"$1760$"// Section Errors and Validation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1761"$1761$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1762"$1762$"private void checkEmptyUser("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1763"$1763$"final User user)"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1764"$1764$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1765"$1765$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1766"$1766$"private void checkCommonParameters("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1767"$1767$"final String methodName,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1768"$1768$"final User rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1769"$1769$"final DataSetConfiguration dataSetConfiguration) "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1770"$1770$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1771"$1771$"//Check for empty parameters"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1772"$1772$"FieldValidationUtility fieldValidationUtility"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1773"$1773$"= new FieldValidationUtility();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1774"$1774$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1775"$1775$"methodName,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1776"$1776$"""rifManager"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1777"$1777$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1778"$1778$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1779"$1779$"methodName,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1780"$1780$"""dataSetConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1781"$1781$"dataSetConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1782"$1782$"rifManager.checkErrors();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1783"$1783$"//validateUser(rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1784"$1784$"dataSetConfiguration.checkSecurityViolations();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1785"$1785$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1786"$1786$"private void checkCommonParameters("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1787"$1787$"final String methodName,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1788"$1788$"final User rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1789"$1789$"final DataSetFieldConfiguration dataSetFieldConfiguration) "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1790"$1790$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1791"$1791$"//Check for empty parameters"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1792"$1792$"FieldValidationUtility fieldValidationUtility"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1793"$1793$"= new FieldValidationUtility();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1794"$1794$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1795"$1795$"methodName,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1796"$1796$"""rifManager"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1797"$1797$"rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1798"$1798$"fieldValidationUtility.checkNullMethodParameter("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1799"$1799$"methodName,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1800"$1800$"""dataSetConfiguration"","$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1801"$1801$"dataSetFieldConfiguration);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1802"$1802$"rifManager.checkErrors();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1803"$1803$"//validateUser(rifManager);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1804"$1804$"dataSetFieldConfiguration.checkSecurityViolations();"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1805"$1805$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1806"$1806$"//Audit failure of operation"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1807"$1807$"public void logException("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1808"$1808$"User rifManager,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1809"$1809$"String methodName,"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1810"$1810$"Exception exception) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1811"$1811$"if (exception instanceof RIFServiceException) {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1812"$1812$"RIFServiceException rifServiceException"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1813"$1813$"= (RIFServiceException) exception;"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1814"$1814$"rifServiceException.printErrors();	"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1815"$1815$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1816"$1816$"else {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1817"$1817$"exception.printStackTrace(System.out);"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1818"$1818$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1819"$1819$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1820"$1820$"public void validateUser("$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1821"$1821$"final User rifManager) "$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1822"$1822$"throws RIFServiceException {"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1823"$1823$"//@TODO: harmonise this with the underlying AbstractRIFService call"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1824"$1824$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1825"$1825$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1826"$1826$"// Section Interfaces"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1827"$1827$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1828"$1828$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1829"$1829$"// Section Override"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1830"$1830$"// =========================================="$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"secured\AbstractPGSQLDataLoaderService.java:1831"$1831$"}"$"ignore"$0$"..\sql-dataset\test\secured\AbstractPGSQLDataLoaderService.java"
"flawed\Trading.java:1"$1$"package com.example.project2;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:2"$2$"import java.io.BufferedReader;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:3"$3$"import java.io.IOException;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:4"$4$"import java.io.InputStreamReader;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:5"$5$"import java.sql.Date;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:6"$6$"import java.text.SimpleDateFormat;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:7"$7$"import java.util.Calendar;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:8"$8$"import org.apache.http.HttpResponse;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:9"$9$"import org.apache.http.client.HttpClient;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:10"$10$"import org.apache.http.client.methods.HttpGet;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:11"$11$"import org.apache.http.impl.client.DefaultHttpClient;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:12"$12$"import org.json.JSONException;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:13"$13$"import org.json.JSONObject;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:14"$14$"import android.app.Activity;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:15"$15$"import android.database.Cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:16"$16$"import android.database.sqlite.SQLiteDatabase;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:17"$17$"import android.database.sqlite.SQLiteException;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:18"$18$"import android.os.Bundle;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:19"$19$"import android.text.format.DateFormat;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:20"$20$"import android.text.format.Time;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:21"$21$"import android.view.View;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:22"$22$"import android.view.View.OnClickListener;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:23"$23$"import android.widget.Button;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:24"$24$"import android.widget.EditText;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:25"$25$"import android.widget.RadioButton;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:26"$26$"import android.widget.RadioGroup;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:27"$27$"import android.widget.TextView;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:28"$28$"import android.widget.Toast;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:29"$29$"public class Trading extends Activity implements OnClickListener{"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:30"$30$"EditText etScode;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:31"$31$"EditText etQTY;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:32"$32$"EditText etPrice;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:33"$33$"TextView tvError;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:34"$34$"Button btnSell;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:35"$35$"TextView tvSuccess;	"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:36"$36$"double jsonPrice=0;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:37"$37$"double jsonLot=0;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:38"$38$"String jsonSCode="""";"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:39"$39$"String jsonSName="""";"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:40"$40$"double QTY=0;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:41"$41$"double Price=0;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:42"$42$"String SCode="""";"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:43"$43$"double increment =0;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:44"$44$"double decrement =0;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:45"$45$"int id=0;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:46"$46$"int quantityOnHand=0;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:47"$47$"boolean TradingSuccess=false;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:48"$48$"public void onCreate(Bundle bundle) {"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:49"$49$"/*super.onCreate(bundle);"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:50"$50$"setContentView(R.layout.trading);	"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:51"$51$"etScode=(EditText)findViewById(R.id.etScode);"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:52"$52$"etQTY=(EditText)findViewById(R.id.etQTY);"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:53"$53$"etPrice=(EditText)findViewById(R.id.etPrice);"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:54"$54$"tvError=(TextView)findViewById(R.id.tvError);"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:55"$55$"btnSell=(Button)findViewById(R.id.btnSell);"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:56"$56$"tvSuccess=(TextView)findViewById(R.id.tvSuccess);"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:57"$57$"btnSell.setOnClickListener(this);*/"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:58"$58$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:59"$59$"public void onClick(View v) {"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:60"$60$"if(chkQTY()==true&& chkPrice()==true){"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:61"$61$"SQLiteDatabase db;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:62"$62$"db = SQLiteDatabase.openDatabase(""/data/data/com.example.project2/eBidDB"", null, SQLiteDatabase.OPEN_READWRITE);"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:63"$63$"Cursor cursor;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:64"$64$"cursor = db.rawQuery(""select * from Stock"",null);"$"count"$1$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:65"$65$"while(cursor.moveToNext()){"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:66"$66$"SCode=cursor.getString(1);"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:67"$67$"quantityOnHand=cursor.getInt(4);				"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:68"$68$"id =cursor.getInt(0);"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:69"$69$"if(SCode.equals(jsonSCode))"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:70"$70$"db.execSQL(""update Stock set quantityOnHand = ""+ (quantityOnHand+ QTY)+ "" where stockCode = '"" +jsonSCode+""';"");"$"count"$1$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:71"$71$"else"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:72"$72$"db.execSQL(""insert into Stock(PortfolioID,stockCode,stockName,lotSize,quantityOnHand)values(""+ String.valueOf(++id) +"",'""+ etScode.getText().toString() +""','""+jsonSName+""',""+jsonLot+"",""+ QTY+"")"");"$"count"$1$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:73"$73$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:74"$74$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:75"$75$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:76"$76$"public boolean chkQTY(){"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:77"$77$"json();		"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:78"$78$"if((etQTY.getText().toString()).equals("""")){"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:79"$79$"tvError.setText(""Quantity cannot be null"");"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:80"$80$"tvSuccess.setText("""");"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:81"$81$"return false;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:82"$82$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:83"$83$"QTY=Double.parseDouble(etQTY.getText().toString());"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:84"$84$"if(QTY%jsonLot==0)"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:85"$85$"return true;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:86"$86$"else{"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:87"$87$"tvError.setText(""Quantity Error"");"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:88"$88$"tvSuccess.setText("""");"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:89"$89$"return false;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:90"$90$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:91"$91$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:92"$92$"public boolean chkPrice(){"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:93"$93$"json();	"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:94"$94$"if((etPrice.getText().toString()).equals("""")){"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:95"$95$"tvError.setText(""Price cannot be null"");"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:96"$96$"tvSuccess.setText("""");"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:97"$97$"return false;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:98"$98$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:99"$99$"Price=Double.parseDouble(etPrice.getText().toString());"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:100"$100$"if(10<=jsonPrice &&jsonPrice<20){"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:101"$101$"increment=jsonPrice+0.02;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:102"$102$"decrement=jsonPrice-0.02;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:103"$103$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:104"$104$"if(20<=jsonPrice &&jsonPrice<100){"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:105"$105$"increment=jsonPrice+0.05;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:106"$106$"decrement=jsonPrice-0.05;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:107"$107$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:108"$108$"if(100<=jsonPrice &&jsonPrice<200){"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:109"$109$"increment=jsonPrice+0.1;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:110"$110$"decrement=jsonPrice-0.1;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:111"$111$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:112"$112$"if(200<=jsonPrice &&jsonPrice<500){"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:113"$113$"increment=jsonPrice+0.2;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:114"$114$"decrement=jsonPrice-0.2;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:115"$115$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:116"$116$"if(decrement<=Price && Price<=increment)"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:117"$117$"return true;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:118"$118$"else{"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:119"$119$"tvError.setText(""Price Error"");"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:120"$120$"tvSuccess.setText("""");"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:121"$121$"return false;"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:122"$122$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:123"$123$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:124"$124$"//Call Json"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:125"$125$"public void json(){"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:126"$126$"try {"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:127"$127$"String url=""http://www.alanpo.com/itp4501/stock_quote.php?stock_no="" + etScode.getText().toString();		"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:128"$128$"HttpClient client = new DefaultHttpClient();		"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:129"$129$"HttpGet request = new HttpGet(url);    	"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:130"$130$"HttpResponse response = client.execute(request);    	"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:131"$131$"BufferedReader reader = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:132"$132$"String line = """";"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:133"$133$"String reply = """";"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:134"$134$"while ((line = reader.readLine()) != null) {"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:135"$135$"reply += line + ""\n"";"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:136"$136$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:137"$137$"JSONObject jsonObject = new JSONObject(reply);"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:138"$138$"jsonLot= jsonObject.getJSONObject(""quote"").getJSONObject(""stock"").getDouble(""lot"");"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:139"$139$"jsonPrice=jsonObject.getJSONObject(""quote"").getJSONObject(""stock"").getDouble(""price"");"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:140"$140$"jsonSCode=jsonObject.getJSONObject(""quote"").getJSONObject(""stock"").getString(""symbol"");"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:141"$141$"jsonSName=jsonObject.getJSONObject(""quote"").getJSONObject(""stock"").getJSONObject(""name"").getString(""english"");"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:142"$142$"} catch (IOException e) {"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:143"$143$"tvError.setText(e.getMessage());"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:144"$144$"} catch (JSONException e) {"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:145"$145$"tvError.setText(e.getMessage());"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:146"$146$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:147"$147$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
"flawed\Trading.java:148"$148$"}"$"ignore"$0$"..\sql-dataset\test\flawed\Trading.java"
